package buffers;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        boolean boolean35 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (byte) 10);
        java.lang.Class<?> wildcardClass2 = genericDeclarationCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer12.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        boolean boolean20 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type6 = typeCircularBuffer5.get();
        boolean boolean7 = typeCircularBuffer5.isFull();
        boolean boolean8 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer10.getClass();
        boolean boolean16 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer5.get();
        boolean boolean18 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer20.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer20.get();
        boolean boolean28 = typeCircularBuffer5.put(type27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        boolean boolean32 = typeCircularBuffer30.isFull();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer35.getClass();
        boolean boolean41 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer30.get();
        boolean boolean43 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type46 = typeCircularBuffer45.get();
        boolean boolean47 = typeCircularBuffer45.isFull();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer45.getClass();
        boolean boolean49 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean52 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(type53);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer27.get();
        boolean boolean38 = typeCircularBuffer14.put(type37);
        boolean boolean39 = typeCircularBuffer1.put(type37);
        boolean boolean40 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer42.get();
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type51 = typeCircularBuffer50.get();
        boolean boolean52 = typeCircularBuffer50.isFull();
        boolean boolean53 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer55.getClass();
        boolean boolean61 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer50.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer69.getClass();
        boolean boolean71 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type72 = typeCircularBuffer66.get();
        boolean boolean73 = typeCircularBuffer64.put(type72);
        boolean boolean74 = typeCircularBuffer50.put(type72);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer50.getClass();
        boolean boolean76 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type77 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean80 = typeCircularBuffer79.isFull();
        java.lang.reflect.Type type81 = typeCircularBuffer79.get();
        boolean boolean82 = typeCircularBuffer79.isFull();
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer79.getClass();
        boolean boolean84 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean85 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.reflect.Type type86 = typeCircularBuffer1.get();
        java.lang.reflect.Type type87 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(type81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNull(type87);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer30.getClass();
        boolean boolean36 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        boolean boolean52 = typeCircularBuffer50.isEmpty();
        java.lang.reflect.Type type53 = typeCircularBuffer50.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer55.isFull();
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer55.getClass();
        boolean boolean62 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean63 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass61);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type66 = typeCircularBuffer65.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer70.get();
        boolean boolean77 = typeCircularBuffer68.put(type76);
        boolean boolean78 = typeCircularBuffer68.isFull();
        java.lang.reflect.Type type79 = typeCircularBuffer68.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean82 = typeCircularBuffer81.isEmpty();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        boolean boolean85 = typeCircularBuffer81.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean86 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean87 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean88 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.reflect.Type type89 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(type66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(type89);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer10.getClass();
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type32 = typeCircularBuffer31.get();
        boolean boolean33 = typeCircularBuffer31.isFull();
        boolean boolean34 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer36.getClass();
        boolean boolean42 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer44.getClass();
        boolean boolean50 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type52 = typeCircularBuffer23.get();
        java.lang.reflect.Type type53 = typeCircularBuffer23.get();
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer23.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean58 = typeCircularBuffer57.isFull();
        boolean boolean59 = typeCircularBuffer57.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer57.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type72 = typeCircularBuffer62.get();
        boolean boolean73 = typeCircularBuffer62.isFull();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer62.getClass();
        boolean boolean75 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer1.put(type24);
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isFull();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        boolean boolean43 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type56 = typeCircularBuffer33.get();
        boolean boolean57 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type60 = typeCircularBuffer59.get();
        boolean boolean61 = typeCircularBuffer59.isFull();
        boolean boolean62 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer64.getClass();
        boolean boolean70 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type71 = typeCircularBuffer59.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer78.getClass();
        boolean boolean80 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass79);
        java.lang.reflect.Type type81 = typeCircularBuffer75.get();
        boolean boolean82 = typeCircularBuffer73.put(type81);
        boolean boolean83 = typeCircularBuffer59.put(type81);
        java.lang.reflect.Type type84 = typeCircularBuffer59.get();
        boolean boolean85 = typeCircularBuffer33.put(type84);
        java.lang.reflect.Type type86 = typeCircularBuffer33.get();
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer33.getClass();
        boolean boolean88 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer11.get();
        java.lang.reflect.Type type17 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer24.getClass();
        boolean boolean30 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer19.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        boolean boolean43 = typeCircularBuffer19.put(type41);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer19.getClass();
        boolean boolean45 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer11.getClass();
        boolean boolean47 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type49 = null;
        boolean boolean50 = typeCircularBuffer1.put(type49);
        boolean boolean51 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer25.get();
        boolean boolean36 = typeCircularBuffer14.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        boolean boolean39 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        boolean boolean44 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer41.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer60.getClass();
        boolean boolean62 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.reflect.Type type63 = typeCircularBuffer57.get();
        boolean boolean64 = typeCircularBuffer55.put(type63);
        boolean boolean65 = typeCircularBuffer41.put(type63);
        java.lang.reflect.Type type66 = null;
        boolean boolean67 = typeCircularBuffer41.put(type66);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer41.getClass();
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean21 = typeCircularBuffer20.isFull();
        boolean boolean22 = typeCircularBuffer20.isEmpty();
        boolean boolean23 = typeCircularBuffer20.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer20.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        boolean boolean47 = typeCircularBuffer38.put(type46);
        boolean boolean48 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass58);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer61.getClass();
        boolean boolean68 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean70 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean71 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type72 = typeCircularBuffer1.get();
        boolean boolean73 = typeCircularBuffer1.isEmpty();
        boolean boolean74 = typeCircularBuffer1.isEmpty();
        boolean boolean75 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type76 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(type76);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        boolean boolean41 = typeCircularBuffer32.put(type40);
        boolean boolean42 = typeCircularBuffer32.isEmpty();
        boolean boolean43 = typeCircularBuffer32.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass53);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer56.get();
        boolean boolean67 = typeCircularBuffer45.put(type66);
        boolean boolean68 = typeCircularBuffer32.put(type66);
        boolean boolean69 = typeCircularBuffer1.put(type66);
        java.lang.reflect.Type type70 = null;
        boolean boolean71 = typeCircularBuffer1.put(type70);
        java.lang.reflect.Type type72 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        boolean boolean26 = typeCircularBuffer24.isFull();
        boolean boolean27 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer16.isEmpty();
        boolean boolean46 = typeCircularBuffer16.isEmpty();
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer16.getClass();
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer40.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer40.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        java.lang.reflect.Type type51 = null;
        boolean boolean52 = typeCircularBuffer1.put(type51);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer10.get();
        boolean boolean13 = typeCircularBuffer10.isFull();
        boolean boolean14 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        boolean boolean27 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type28 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass33);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer37.put(type45);
        boolean boolean47 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer49.get();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean60 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type63 = typeCircularBuffer62.get();
        boolean boolean64 = typeCircularBuffer62.isFull();
        boolean boolean65 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer67.getClass();
        boolean boolean73 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass72);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        boolean boolean79 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer75.getClass();
        boolean boolean81 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean82 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type83 = typeCircularBuffer37.get();
        boolean boolean84 = typeCircularBuffer17.put(type83);
        boolean boolean85 = typeCircularBuffer10.put(type83);
        boolean boolean86 = typeCircularBuffer1.put(type83);
        boolean boolean87 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer89 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean90 = typeCircularBuffer89.isFull();
        boolean boolean91 = typeCircularBuffer89.isEmpty();
        boolean boolean92 = typeCircularBuffer89.isFull();
        java.lang.reflect.Type type93 = null;
        boolean boolean94 = typeCircularBuffer89.put(type93);
        boolean boolean95 = typeCircularBuffer89.isFull();
        java.lang.Class<?> wildcardClass96 = typeCircularBuffer89.getClass();
        boolean boolean97 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass96);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(type12);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        boolean boolean59 = typeCircularBuffer50.put(type58);
        boolean boolean60 = typeCircularBuffer50.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean73 = typeCircularBuffer50.isEmpty();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer50.getClass();
        boolean boolean75 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type50 = typeCircularBuffer49.get();
        boolean boolean51 = typeCircularBuffer49.isFull();
        boolean boolean52 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer54.getClass();
        boolean boolean60 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean64 = typeCircularBuffer63.isFull();
        boolean boolean65 = typeCircularBuffer63.isEmpty();
        java.lang.reflect.Type type66 = typeCircularBuffer63.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer70.get();
        boolean boolean77 = typeCircularBuffer68.put(type76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer68.getClass();
        boolean boolean79 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean81 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean82 = typeCircularBuffer47.isFull();
        boolean boolean83 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean86 = typeCircularBuffer85.isEmpty();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        boolean boolean89 = typeCircularBuffer85.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer85.isFull();
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer85.getClass();
        boolean boolean92 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass91);
        boolean boolean93 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass91);
        boolean boolean94 = typeCircularBuffer1.isEmpty();
        boolean boolean95 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(type66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type39 = typeCircularBuffer16.get();
        boolean boolean40 = typeCircularBuffer1.put(type39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type43 = typeCircularBuffer42.get();
        boolean boolean44 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type45 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type48 = typeCircularBuffer47.get();
        boolean boolean49 = typeCircularBuffer47.isFull();
        boolean boolean50 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer47.get();
        java.lang.Class<?> wildcardClass60 = type59.getClass();
        boolean boolean61 = typeCircularBuffer42.put(type59);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type64 = typeCircularBuffer63.get();
        boolean boolean65 = typeCircularBuffer63.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 1);
        java.lang.Class<?> wildcardClass68 = wildcardClassOfFieldCircularBuffer67.getClass();
        boolean boolean69 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.reflect.Type type70 = typeCircularBuffer63.get();
        boolean boolean71 = typeCircularBuffer42.put(type70);
        boolean boolean72 = typeCircularBuffer1.put(type70);
        boolean boolean73 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        boolean boolean15 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type22 = typeCircularBuffer17.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer17.getClass();
        boolean boolean24 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        boolean boolean41 = typeCircularBuffer32.put(type40);
        boolean boolean42 = typeCircularBuffer32.isFull();
        java.lang.reflect.Type type43 = typeCircularBuffer32.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type52 = typeCircularBuffer29.get();
        boolean boolean53 = typeCircularBuffer1.put(type52);
        java.lang.Class<?> wildcardClass54 = type52.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        boolean boolean6 = typeCircularBuffer4.isFull();
        boolean boolean7 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer9.getClass();
        boolean boolean15 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean19 = typeCircularBuffer18.isFull();
        boolean boolean20 = typeCircularBuffer18.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer23.getClass();
        boolean boolean34 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer4.get();
        boolean boolean38 = typeCircularBuffer1.put(type37);
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type28 = typeCircularBuffer27.get();
        boolean boolean29 = typeCircularBuffer27.isFull();
        boolean boolean30 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer32.getClass();
        boolean boolean38 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer40.getClass();
        boolean boolean46 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>((int) (byte) 10);
        java.lang.Class<?> wildcardClass50 = annotatedElementCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        boolean boolean47 = typeCircularBuffer38.put(type46);
        boolean boolean48 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type64 = typeCircularBuffer63.get();
        boolean boolean65 = typeCircularBuffer63.isFull();
        boolean boolean66 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer68.getClass();
        boolean boolean74 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass73);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean77 = typeCircularBuffer76.isEmpty();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        boolean boolean80 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass79);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer76.getClass();
        boolean boolean82 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.reflect.Type type84 = typeCircularBuffer38.get();
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer38.getClass();
        boolean boolean86 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass85);
        java.lang.reflect.Type type87 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(type87);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        boolean boolean19 = typeCircularBuffer16.isFull();
        boolean boolean20 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer16.get();
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        boolean boolean35 = typeCircularBuffer33.isFull();
        boolean boolean36 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer25.isEmpty();
        boolean boolean55 = typeCircularBuffer25.isFull();
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer25.getClass();
        boolean boolean57 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer16.getClass();
        boolean boolean59 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass10 = genericDeclarationCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean15 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer14.get();
        boolean boolean17 = typeCircularBuffer14.isFull();
        boolean boolean18 = typeCircularBuffer14.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer12.getClass();
        boolean boolean20 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean22 = typeCircularBuffer1.isFull();
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        boolean boolean24 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer26.put(type34);
        boolean boolean36 = typeCircularBuffer26.isEmpty();
        java.lang.reflect.Type type37 = typeCircularBuffer26.get();
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer26.getClass();
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isEmpty();
        boolean boolean58 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean9 = typeCircularBuffer8.isFull();
        boolean boolean10 = typeCircularBuffer8.isEmpty();
        java.lang.reflect.Type type11 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        boolean boolean22 = typeCircularBuffer13.put(type21);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer13.getClass();
        boolean boolean24 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        boolean boolean43 = typeCircularBuffer33.isEmpty();
        boolean boolean44 = typeCircularBuffer33.isFull();
        boolean boolean45 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer49.get();
        boolean boolean56 = typeCircularBuffer47.put(type55);
        boolean boolean57 = typeCircularBuffer47.isFull();
        java.lang.reflect.Type type58 = typeCircularBuffer47.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer60.isFull();
        java.lang.reflect.Type type67 = typeCircularBuffer60.get();
        boolean boolean68 = typeCircularBuffer47.put(type67);
        boolean boolean69 = typeCircularBuffer33.put(type67);
        boolean boolean70 = typeCircularBuffer1.put(type67);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        boolean boolean74 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean77 = typeCircularBuffer76.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer79.getClass();
        boolean boolean81 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = typeCircularBuffer76.get();
        boolean boolean83 = typeCircularBuffer72.put(type82);
        boolean boolean84 = typeCircularBuffer72.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean87 = typeCircularBuffer86.isFull();
        boolean boolean88 = typeCircularBuffer86.isEmpty();
        boolean boolean89 = typeCircularBuffer86.isFull();
        java.lang.reflect.Type type90 = null;
        boolean boolean91 = typeCircularBuffer86.put(type90);
        boolean boolean92 = typeCircularBuffer86.isFull();
        java.lang.Class<?> wildcardClass93 = typeCircularBuffer86.getClass();
        boolean boolean94 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass93);
        boolean boolean95 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass93);
        java.lang.reflect.Type type96 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(type96);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        boolean boolean40 = typeCircularBuffer38.isEmpty();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer38.get();
        boolean boolean56 = typeCircularBuffer9.put(type55);
        boolean boolean57 = typeCircularBuffer1.put(type55);
        boolean boolean58 = typeCircularBuffer1.isFull();
        boolean boolean59 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer19.put(type49);
        java.lang.reflect.Type type51 = typeCircularBuffer19.get();
        boolean boolean52 = typeCircularBuffer1.put(type51);
        boolean boolean53 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type54 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer7.get();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer18.get();
        boolean boolean29 = typeCircularBuffer7.put(type28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer7.getClass();
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        boolean boolean38 = typeCircularBuffer36.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        boolean boolean40 = typeCircularBuffer36.isFull();
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer36.getClass();
        boolean boolean42 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean5 = typeCircularBuffer4.isFull();
        boolean boolean6 = typeCircularBuffer4.isEmpty();
        boolean boolean7 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        boolean boolean26 = typeCircularBuffer24.isFull();
        boolean boolean27 = typeCircularBuffer24.isFull();
        boolean boolean28 = typeCircularBuffer24.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer24.get();
        boolean boolean30 = typeCircularBuffer24.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer24.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        boolean boolean44 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass51);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer54.getClass();
        boolean boolean60 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = typeCircularBuffer33.isEmpty();
        boolean boolean63 = typeCircularBuffer33.isFull();
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer33.getClass();
        boolean boolean65 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass64);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.reflect.Type type75 = typeCircularBuffer69.get();
        boolean boolean76 = typeCircularBuffer67.put(type75);
        boolean boolean77 = typeCircularBuffer67.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean80 = typeCircularBuffer79.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer82.getClass();
        boolean boolean84 = typeCircularBuffer79.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.reflect.Type type85 = typeCircularBuffer79.get();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        boolean boolean88 = typeCircularBuffer79.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = typeCircularBuffer67.isEmpty();
        java.lang.Object obj91 = new java.lang.Object();
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        boolean boolean93 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass92);
        java.lang.reflect.Type type94 = typeCircularBuffer67.get();
        java.lang.Class<?> wildcardClass95 = typeCircularBuffer67.getClass();
        boolean boolean96 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass95);
        boolean boolean97 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass95);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.Constable> constableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.Constable>((int) (byte) 0);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        boolean boolean26 = typeCircularBuffer1.isFull();
        boolean boolean27 = typeCircularBuffer1.isFull();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer30.isEmpty();
        boolean boolean41 = typeCircularBuffer30.isFull();
        boolean boolean42 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        boolean boolean54 = typeCircularBuffer44.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer44.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer60.getClass();
        boolean boolean62 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean63 = typeCircularBuffer57.isFull();
        java.lang.reflect.Type type64 = typeCircularBuffer57.get();
        boolean boolean65 = typeCircularBuffer44.put(type64);
        boolean boolean66 = typeCircularBuffer30.put(type64);
        boolean boolean67 = typeCircularBuffer30.isEmpty();
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer30.getClass();
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass68);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer11.get();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer22.getClass();
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        boolean boolean32 = typeCircularBuffer1.isFull();
        boolean boolean33 = typeCircularBuffer1.isFull();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer15.getClass();
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        boolean boolean24 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer14.get();
        boolean boolean22 = typeCircularBuffer1.put(type21);
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        boolean boolean19 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean45 = typeCircularBuffer1.isFull();
        boolean boolean46 = typeCircularBuffer1.isEmpty();
        boolean boolean47 = typeCircularBuffer1.isFull();
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        boolean boolean49 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.Constable> constableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.Constable>(1);
        java.lang.Class<?> wildcardClass2 = constableCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.reflect.Type type10 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isFull();
        boolean boolean15 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer17.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer25.getClass();
        boolean boolean31 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer4.getClass();
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.isFull();
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        boolean boolean6 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer4.get();
        boolean boolean8 = typeCircularBuffer4.isFull();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer4.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 100);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass3 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        boolean boolean6 = typeCircularBuffer4.isFull();
        boolean boolean7 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer4.get();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer4.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isFull();
        boolean boolean23 = typeCircularBuffer19.isFull();
        boolean boolean24 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        boolean boolean39 = typeCircularBuffer29.isFull();
        java.lang.reflect.Type type40 = typeCircularBuffer29.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type43 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type54 = typeCircularBuffer53.get();
        boolean boolean55 = typeCircularBuffer53.isFull();
        boolean boolean56 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer58.getClass();
        boolean boolean64 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass63);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer66.getClass();
        boolean boolean72 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean75 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean76 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean77 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean78 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type80 = typeCircularBuffer1.get();
        boolean boolean81 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer23.getClass();
        boolean boolean29 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass40 = genericDeclarationCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean43 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        boolean boolean35 = typeCircularBuffer33.isFull();
        boolean boolean36 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type54 = typeCircularBuffer25.get();
        boolean boolean55 = typeCircularBuffer1.put(type54);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean58 = typeCircularBuffer57.isFull();
        java.lang.reflect.Type type59 = typeCircularBuffer57.get();
        boolean boolean60 = typeCircularBuffer57.isFull();
        java.lang.reflect.Type type61 = typeCircularBuffer57.get();
        boolean boolean62 = typeCircularBuffer57.isFull();
        boolean boolean63 = typeCircularBuffer57.isEmpty();
        boolean boolean64 = typeCircularBuffer57.isFull();
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer57.getClass();
        boolean boolean66 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type39 = typeCircularBuffer38.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer41.get();
        boolean boolean45 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer41.getClass();
        boolean boolean47 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer38.getClass();
        boolean boolean49 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer1.isFull();
        boolean boolean52 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean8 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer7.get();
        boolean boolean10 = typeCircularBuffer7.isFull();
        boolean boolean11 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer13.get();
        java.lang.reflect.Type type16 = typeCircularBuffer13.get();
        java.lang.reflect.Type type17 = typeCircularBuffer13.get();
        boolean boolean18 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean21 = typeCircularBuffer20.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer24.getClass();
        boolean boolean30 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass29);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        boolean boolean44 = typeCircularBuffer35.put(type43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer46.getClass();
        boolean boolean57 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean60 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type61 = typeCircularBuffer7.get();
        boolean boolean62 = typeCircularBuffer1.put(type61);
        boolean boolean63 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass7 = type6.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer31.getClass();
        boolean boolean38 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean40 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean43 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer42.get();
        boolean boolean45 = typeCircularBuffer42.isFull();
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer42.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean22 = typeCircularBuffer21.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer21.get();
        boolean boolean24 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer21.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean28 = typeCircularBuffer27.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer27.get();
        boolean boolean30 = typeCircularBuffer27.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer27.get();
        java.lang.reflect.Type type32 = typeCircularBuffer27.get();
        boolean boolean33 = typeCircularBuffer27.isEmpty();
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer27.getClass();
        boolean boolean35 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer14.getClass();
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer19.put(type49);
        java.lang.reflect.Type type51 = typeCircularBuffer19.get();
        boolean boolean52 = typeCircularBuffer1.put(type51);
        boolean boolean53 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer55.get();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer55.getClass();
        boolean boolean63 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean67 = typeCircularBuffer66.isFull();
        java.lang.reflect.Type type68 = typeCircularBuffer66.get();
        java.lang.reflect.Type type69 = typeCircularBuffer66.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean72 = typeCircularBuffer71.isFull();
        java.lang.reflect.Type type73 = typeCircularBuffer71.get();
        boolean boolean74 = typeCircularBuffer71.isEmpty();
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer71.getClass();
        boolean boolean76 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean78 = typeCircularBuffer1.isFull();
        boolean boolean79 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertNull(type69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer28.getClass();
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        boolean boolean34 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.reflect.Type type33 = typeCircularBuffer31.get();
        java.lang.reflect.Type type34 = typeCircularBuffer31.get();
        java.lang.reflect.Type type35 = typeCircularBuffer31.get();
        boolean boolean36 = typeCircularBuffer31.isFull();
        boolean boolean37 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type38 = typeCircularBuffer31.get();
        boolean boolean39 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer43.getClass();
        boolean boolean51 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer31.isEmpty();
        java.lang.reflect.Type type54 = typeCircularBuffer31.get();
        boolean boolean55 = typeCircularBuffer1.put(type54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        boolean boolean60 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type61 = typeCircularBuffer1.get();
        boolean boolean62 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        boolean boolean20 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        boolean boolean32 = typeCircularBuffer22.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type51 = typeCircularBuffer1.get();
        boolean boolean52 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type53 = typeCircularBuffer1.get();
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer7.get();
        boolean boolean19 = typeCircularBuffer7.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        boolean boolean32 = typeCircularBuffer22.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer22.isEmpty();
        java.lang.reflect.Type type46 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer60.getClass();
        boolean boolean62 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.reflect.Type type63 = typeCircularBuffer57.get();
        boolean boolean64 = typeCircularBuffer55.put(type63);
        boolean boolean65 = typeCircularBuffer55.isFull();
        java.lang.reflect.Type type66 = typeCircularBuffer55.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean75 = typeCircularBuffer48.isFull();
        boolean boolean76 = typeCircularBuffer48.isFull();
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer48.getClass();
        boolean boolean78 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean80 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean81 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean17 = typeCircularBuffer16.isFull();
        boolean boolean18 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean35 = typeCircularBuffer1.isFull();
        boolean boolean36 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        java.lang.reflect.Type type38 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNull(type38);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean8 = typeCircularBuffer7.isFull();
        boolean boolean9 = typeCircularBuffer7.isEmpty();
        boolean boolean10 = typeCircularBuffer7.isFull();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer7.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isFull();
        boolean boolean33 = typeCircularBuffer31.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        boolean boolean45 = typeCircularBuffer36.put(type44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer36.getClass();
        boolean boolean47 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean52 = typeCircularBuffer51.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer51.get();
        boolean boolean54 = typeCircularBuffer51.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer56.getClass();
        boolean boolean59 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer51.getClass();
        boolean boolean61 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer15.isFull();
        boolean boolean63 = typeCircularBuffer15.isEmpty();
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer15.getClass();
        boolean boolean65 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass67 = type66.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.reflect.Type type10 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isFull();
        boolean boolean15 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer17.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer25.getClass();
        boolean boolean31 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer4.getClass();
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        java.lang.reflect.Type type40 = typeCircularBuffer37.get();
        boolean boolean41 = typeCircularBuffer37.isEmpty();
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean46 = typeCircularBuffer45.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer45.get();
        boolean boolean48 = typeCircularBuffer45.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer45.get();
        boolean boolean50 = typeCircularBuffer45.isFull();
        boolean boolean51 = typeCircularBuffer45.isEmpty();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer45.getClass();
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer28.get();
        boolean boolean36 = typeCircularBuffer15.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean66 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean69 = typeCircularBuffer68.isFull();
        boolean boolean70 = typeCircularBuffer68.isEmpty();
        boolean boolean71 = typeCircularBuffer68.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer76.getClass();
        boolean boolean78 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer73.get();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = typeCircularBuffer68.isFull();
        java.lang.reflect.Type type85 = typeCircularBuffer68.get();
        boolean boolean86 = typeCircularBuffer39.put(type85);
        boolean boolean87 = typeCircularBuffer1.put(type85);
        boolean boolean88 = typeCircularBuffer1.isFull();
        boolean boolean89 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type90 = typeCircularBuffer1.get();
        boolean boolean91 = typeCircularBuffer1.isFull();
        boolean boolean92 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass93 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Object> objCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Object>((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        boolean boolean39 = typeCircularBuffer1.isFull();
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) '4');
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isFull();
        boolean boolean18 = typeCircularBuffer14.isEmpty();
        boolean boolean19 = typeCircularBuffer14.isEmpty();
        boolean boolean20 = typeCircularBuffer14.isEmpty();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer14.getClass();
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer30.getClass();
        boolean boolean36 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer6.get();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        java.lang.reflect.Type type10 = typeCircularBuffer6.get();
        boolean boolean11 = typeCircularBuffer6.isFull();
        boolean boolean12 = typeCircularBuffer6.isFull();
        boolean boolean13 = typeCircularBuffer6.isFull();
        boolean boolean14 = typeCircularBuffer6.isEmpty();
        boolean boolean15 = typeCircularBuffer6.isFull();
        boolean boolean16 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer6.getClass();
        boolean boolean18 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        boolean boolean20 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean5 = typeCircularBuffer4.isFull();
        boolean boolean6 = typeCircularBuffer4.isEmpty();
        boolean boolean7 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer4.get();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer4.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isFull();
        boolean boolean29 = typeCircularBuffer25.isFull();
        boolean boolean30 = typeCircularBuffer25.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type40 = typeCircularBuffer25.get();
        boolean boolean41 = typeCircularBuffer1.put(type40);
        java.lang.Class<?> wildcardClass42 = type40.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = null;
        boolean boolean55 = typeCircularBuffer48.put(type54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer48.getClass();
        boolean boolean57 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean60 = typeCircularBuffer59.isFull();
        java.lang.reflect.Type type61 = typeCircularBuffer59.get();
        boolean boolean62 = typeCircularBuffer59.isEmpty();
        boolean boolean63 = typeCircularBuffer59.isFull();
        java.lang.reflect.Type type64 = typeCircularBuffer59.get();
        boolean boolean65 = typeCircularBuffer59.isFull();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer59.getClass();
        boolean boolean67 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer6.isEmpty();
        boolean boolean13 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer6.get();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer6.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        boolean boolean23 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isFull();
        boolean boolean23 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer19.get();
        boolean boolean25 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer19.get();
        java.lang.reflect.Type type27 = typeCircularBuffer19.get();
        boolean boolean28 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer19.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer1.get();
        boolean boolean54 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = null;
        boolean boolean9 = typeCircularBuffer1.put(type8);
        boolean boolean10 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Class<?>> wildcardClassCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Class<?>>(1);
        java.lang.Class<?> wildcardClass2 = wildcardClassCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Class<?>> wildcardClassCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Class<?>>((int) (short) 0);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        boolean boolean8 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        boolean boolean10 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        boolean boolean22 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer6.getClass();
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer17.get();
        boolean boolean23 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type24 = typeCircularBuffer17.get();
        boolean boolean25 = typeCircularBuffer17.isEmpty();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer17.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer16.getClass();
        boolean boolean22 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean26 = typeCircularBuffer25.isFull();
        boolean boolean27 = typeCircularBuffer25.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer30.getClass();
        boolean boolean41 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean44 = typeCircularBuffer9.isFull();
        boolean boolean45 = typeCircularBuffer9.isEmpty();
        boolean boolean46 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type47 = null;
        boolean boolean48 = typeCircularBuffer9.put(type47);
        boolean boolean49 = typeCircularBuffer9.isEmpty();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer9.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer1.get();
        boolean boolean53 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 1);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldCircularBuffer5.getClass();
        boolean boolean7 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass6);
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean40 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer39.get();
        boolean boolean42 = typeCircularBuffer39.isEmpty();
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer39.getClass();
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(type45);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.reflect.Type type37 = typeCircularBuffer35.get();
        java.lang.reflect.Type type38 = typeCircularBuffer35.get();
        java.lang.reflect.Type type39 = typeCircularBuffer35.get();
        boolean boolean40 = typeCircularBuffer35.isFull();
        boolean boolean41 = typeCircularBuffer35.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer35.get();
        boolean boolean43 = typeCircularBuffer35.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer47.getClass();
        boolean boolean55 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer59.isFull();
        boolean boolean65 = typeCircularBuffer59.isFull();
        java.lang.reflect.Type type66 = typeCircularBuffer59.get();
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer59.getClass();
        boolean boolean68 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.reflect.Type type37 = typeCircularBuffer35.get();
        java.lang.reflect.Type type38 = typeCircularBuffer35.get();
        java.lang.reflect.Type type39 = typeCircularBuffer35.get();
        boolean boolean40 = typeCircularBuffer35.isFull();
        boolean boolean41 = typeCircularBuffer35.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer35.get();
        boolean boolean43 = typeCircularBuffer35.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer47.getClass();
        boolean boolean55 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type58 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer12.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        boolean boolean19 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = type15.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        boolean boolean32 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        boolean boolean34 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean15 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer14.get();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer14.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isFull();
        boolean boolean26 = typeCircularBuffer22.isFull();
        boolean boolean27 = typeCircularBuffer22.isFull();
        boolean boolean28 = typeCircularBuffer22.isFull();
        boolean boolean29 = typeCircularBuffer22.isEmpty();
        java.lang.reflect.Type type30 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer32.get();
        boolean boolean35 = typeCircularBuffer32.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        boolean boolean39 = typeCircularBuffer37.isFull();
        boolean boolean40 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer42.getClass();
        boolean boolean48 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass47);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer50.getClass();
        boolean boolean56 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass55);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.reflect.Type type62 = typeCircularBuffer60.get();
        java.lang.reflect.Type type63 = typeCircularBuffer60.get();
        java.lang.reflect.Type type64 = typeCircularBuffer60.get();
        boolean boolean65 = typeCircularBuffer60.isFull();
        boolean boolean66 = typeCircularBuffer60.isFull();
        java.lang.reflect.Type type67 = typeCircularBuffer60.get();
        boolean boolean68 = typeCircularBuffer60.isFull();
        boolean boolean69 = typeCircularBuffer60.isEmpty();
        boolean boolean70 = typeCircularBuffer60.isFull();
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer60.getClass();
        boolean boolean72 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(type62);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type28 = typeCircularBuffer27.get();
        boolean boolean29 = typeCircularBuffer27.isFull();
        boolean boolean30 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer32.getClass();
        boolean boolean38 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean41 = typeCircularBuffer40.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer40.get();
        boolean boolean43 = typeCircularBuffer40.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer40.getClass();
        boolean boolean45 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer6.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer6.getClass();
        boolean boolean13 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer11.getClass();
        boolean boolean22 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.reflect.Type type30 = typeCircularBuffer28.get();
        java.lang.reflect.Type type31 = typeCircularBuffer28.get();
        java.lang.reflect.Type type32 = typeCircularBuffer28.get();
        boolean boolean33 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean36 = typeCircularBuffer35.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer35.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer28.isEmpty();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer28.getClass();
        boolean boolean49 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isFull();
        boolean boolean15 = typeCircularBuffer11.isFull();
        boolean boolean16 = typeCircularBuffer11.isFull();
        boolean boolean17 = typeCircularBuffer11.isFull();
        boolean boolean18 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer21.get();
        boolean boolean24 = typeCircularBuffer21.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass50 = type49.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        boolean boolean31 = typeCircularBuffer21.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type47 = typeCircularBuffer46.get();
        boolean boolean48 = typeCircularBuffer46.isFull();
        boolean boolean49 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer51.getClass();
        boolean boolean57 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass56);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer59.getClass();
        boolean boolean65 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type67 = typeCircularBuffer21.get();
        boolean boolean68 = typeCircularBuffer1.put(type67);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type71 = typeCircularBuffer70.get();
        boolean boolean72 = typeCircularBuffer70.isFull();
        boolean boolean73 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        boolean boolean79 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer75.getClass();
        boolean boolean81 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = typeCircularBuffer70.get();
        boolean boolean83 = typeCircularBuffer70.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean86 = typeCircularBuffer85.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer88 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer88.getClass();
        boolean boolean90 = typeCircularBuffer85.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer85.isEmpty();
        java.lang.reflect.Type type92 = typeCircularBuffer85.get();
        boolean boolean93 = typeCircularBuffer70.put(type92);
        boolean boolean94 = typeCircularBuffer1.put(type92);
        boolean boolean95 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        boolean boolean15 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type22 = typeCircularBuffer17.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer17.getClass();
        boolean boolean24 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type29 = typeCircularBuffer28.get();
        boolean boolean30 = typeCircularBuffer28.isFull();
        boolean boolean31 = typeCircularBuffer28.isEmpty();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer28.getClass();
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer5.getClass();
        boolean boolean7 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass6);
        java.lang.reflect.Type type8 = typeCircularBuffer3.get();
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer16.getClass();
        boolean boolean22 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer11.put(type33);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer11.getClass();
        boolean boolean37 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer3.getClass();
        boolean boolean39 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean43 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer42.get();
        java.lang.reflect.Type type45 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean48 = typeCircularBuffer47.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer47.get();
        boolean boolean50 = typeCircularBuffer47.isEmpty();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer47.getClass();
        boolean boolean52 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>((int) (short) 1);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer11.getClass();
        boolean boolean22 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = null;
        boolean boolean34 = typeCircularBuffer27.put(type33);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer38.getClass();
        boolean boolean46 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass45);
        boolean boolean47 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer27.getClass();
        boolean boolean49 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isFull();
        boolean boolean57 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type60 = typeCircularBuffer59.get();
        boolean boolean61 = typeCircularBuffer59.isFull();
        boolean boolean62 = typeCircularBuffer59.isFull();
        boolean boolean63 = typeCircularBuffer59.isFull();
        boolean boolean64 = typeCircularBuffer59.isFull();
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        boolean boolean66 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass34 = type33.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNull(type33);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean13 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        boolean boolean15 = typeCircularBuffer12.isEmpty();
        boolean boolean16 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer18.getClass();
        boolean boolean21 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean24 = typeCircularBuffer23.isFull();
        boolean boolean25 = typeCircularBuffer23.isEmpty();
        boolean boolean26 = typeCircularBuffer23.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean40 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean41 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.reflect.Type type33 = typeCircularBuffer31.get();
        java.lang.reflect.Type type34 = typeCircularBuffer31.get();
        java.lang.reflect.Type type35 = typeCircularBuffer31.get();
        boolean boolean36 = typeCircularBuffer31.isFull();
        boolean boolean37 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type38 = typeCircularBuffer31.get();
        boolean boolean39 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer43.getClass();
        boolean boolean51 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer31.isEmpty();
        java.lang.reflect.Type type54 = typeCircularBuffer31.get();
        boolean boolean55 = typeCircularBuffer1.put(type54);
        boolean boolean56 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(type57);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer9.get();
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer17.put(type39);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer17.getClass();
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer9.getClass();
        boolean boolean45 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean48 = typeCircularBuffer47.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer47.get();
        boolean boolean50 = typeCircularBuffer47.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean53 = typeCircularBuffer52.isFull();
        boolean boolean54 = typeCircularBuffer52.isEmpty();
        boolean boolean55 = typeCircularBuffer52.isFull();
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer52.getClass();
        boolean boolean57 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        boolean boolean12 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean25 = typeCircularBuffer9.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean29 = typeCircularBuffer28.isFull();
        boolean boolean30 = typeCircularBuffer28.isEmpty();
        boolean boolean31 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer69.getClass();
        boolean boolean76 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean78 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean79 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type80 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass81 = type80.getClass();
        boolean boolean82 = typeCircularBuffer1.put(type80);
        boolean boolean83 = typeCircularBuffer1.isFull();
        boolean boolean84 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass29 = type28.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type28);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isFull();
        boolean boolean23 = typeCircularBuffer19.isFull();
        boolean boolean24 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        boolean boolean39 = typeCircularBuffer29.isFull();
        java.lang.reflect.Type type40 = typeCircularBuffer29.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type43 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type54 = typeCircularBuffer53.get();
        boolean boolean55 = typeCircularBuffer53.isFull();
        boolean boolean56 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer58.getClass();
        boolean boolean64 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass63);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer66.getClass();
        boolean boolean72 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean75 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean76 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean77 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean78 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type80 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass81 = type80.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        boolean boolean20 = typeCircularBuffer1.isFull();
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type22);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        boolean boolean17 = typeCircularBuffer1.isFull();
        boolean boolean18 = typeCircularBuffer1.isFull();
        boolean boolean19 = typeCircularBuffer1.isFull();
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        boolean boolean21 = typeCircularBuffer1.isFull();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer44.getClass();
        boolean boolean55 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer33.isFull();
        boolean boolean57 = typeCircularBuffer33.isFull();
        java.lang.reflect.Type type58 = typeCircularBuffer33.get();
        java.lang.Class<?> wildcardClass59 = type58.getClass();
        boolean boolean60 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        boolean boolean62 = typeCircularBuffer1.isEmpty();
        boolean boolean63 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean30 = typeCircularBuffer29.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean35 = typeCircularBuffer34.isFull();
        boolean boolean36 = typeCircularBuffer34.isEmpty();
        java.lang.reflect.Type type37 = typeCircularBuffer34.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        boolean boolean48 = typeCircularBuffer39.put(type47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer39.getClass();
        boolean boolean50 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer29.getClass();
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer15.get();
        boolean boolean26 = typeCircularBuffer15.isFull();
        boolean boolean27 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type32 = typeCircularBuffer31.get();
        boolean boolean33 = typeCircularBuffer31.isFull();
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer31.getClass();
        boolean boolean35 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer29.isFull();
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer29.getClass();
        boolean boolean38 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean44 = typeCircularBuffer43.isFull();
        boolean boolean45 = typeCircularBuffer43.isEmpty();
        java.lang.reflect.Type type46 = typeCircularBuffer43.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        boolean boolean57 = typeCircularBuffer48.put(type56);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer48.getClass();
        boolean boolean59 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass58);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type63 = typeCircularBuffer62.get();
        boolean boolean64 = typeCircularBuffer62.isFull();
        boolean boolean65 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer67.getClass();
        boolean boolean73 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean74 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean77 = typeCircularBuffer76.isFull();
        boolean boolean78 = typeCircularBuffer76.isEmpty();
        java.lang.reflect.Type type79 = typeCircularBuffer76.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer86.getClass();
        boolean boolean88 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass87);
        java.lang.reflect.Type type89 = typeCircularBuffer83.get();
        boolean boolean90 = typeCircularBuffer81.put(type89);
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer81.getClass();
        boolean boolean92 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass91);
        boolean boolean93 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass91);
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer62.getClass();
        boolean boolean95 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass94);
        boolean boolean96 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type97 = typeCircularBuffer41.get();
        java.lang.reflect.Type type98 = typeCircularBuffer41.get();
        boolean boolean99 = typeCircularBuffer1.put(type98);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(type79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(type97);
        org.junit.Assert.assertNotNull(type98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer12.getClass();
        boolean boolean20 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean22 = typeCircularBuffer1.isFull();
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        boolean boolean24 = typeCircularBuffer1.isFull();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer45.getClass();
        boolean boolean53 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        boolean boolean27 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        boolean boolean32 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer30.get();
        boolean boolean34 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        boolean boolean45 = typeCircularBuffer36.put(type44);
        boolean boolean46 = typeCircularBuffer36.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = typeCircularBuffer36.isEmpty();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean63 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean64 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.reflect.Type type65 = typeCircularBuffer15.get();
        boolean boolean66 = typeCircularBuffer1.put(type65);
        java.lang.Class<?> wildcardClass67 = type65.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        boolean boolean21 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type36 = typeCircularBuffer35.get();
        boolean boolean37 = typeCircularBuffer35.isFull();
        boolean boolean38 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer40.getClass();
        boolean boolean46 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass45);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer48.getClass();
        boolean boolean54 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean56 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean57 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean58 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean59 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type62 = null;
        boolean boolean63 = typeCircularBuffer1.put(type62);
        java.lang.reflect.Type type64 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(type64);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        boolean boolean6 = typeCircularBuffer4.isFull();
        boolean boolean7 = typeCircularBuffer4.isEmpty();
        boolean boolean8 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean15 = typeCircularBuffer14.isFull();
        boolean boolean16 = typeCircularBuffer14.isEmpty();
        boolean boolean17 = typeCircularBuffer14.isFull();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer14.getClass();
        boolean boolean19 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        boolean boolean33 = typeCircularBuffer23.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer23.isEmpty();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer23.get();
        boolean boolean51 = typeCircularBuffer4.put(type50);
        boolean boolean52 = typeCircularBuffer1.put(type50);
        java.lang.reflect.Type type53 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        boolean boolean6 = typeCircularBuffer4.isFull();
        boolean boolean7 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer9.getClass();
        boolean boolean15 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass14);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer17.getClass();
        boolean boolean23 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isFull();
        boolean boolean33 = typeCircularBuffer31.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        boolean boolean45 = typeCircularBuffer36.put(type44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer36.getClass();
        boolean boolean47 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type57 = typeCircularBuffer56.get();
        boolean boolean58 = typeCircularBuffer56.isFull();
        java.lang.reflect.Type type59 = typeCircularBuffer56.get();
        java.lang.reflect.Type type60 = typeCircularBuffer56.get();
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer56.getClass();
        boolean boolean62 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        boolean boolean40 = typeCircularBuffer38.isEmpty();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer38.get();
        boolean boolean56 = typeCircularBuffer9.put(type55);
        boolean boolean57 = typeCircularBuffer1.put(type55);
        boolean boolean58 = typeCircularBuffer1.isFull();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer24.getClass();
        boolean boolean31 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer1.isFull();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.Constable> constableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.Constable>((int) (short) 10);
        java.lang.Class<?> wildcardClass2 = constableCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        boolean boolean48 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer46.get();
        boolean boolean50 = typeCircularBuffer46.isFull();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer1.isFull();
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        boolean boolean55 = typeCircularBuffer1.isFull();
        boolean boolean56 = typeCircularBuffer1.isFull();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        boolean boolean61 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean17 = typeCircularBuffer16.isFull();
        boolean boolean18 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean37 = typeCircularBuffer36.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        boolean boolean48 = typeCircularBuffer39.put(type47);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        boolean boolean59 = typeCircularBuffer50.put(type58);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer50.getClass();
        boolean boolean61 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass60);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer63.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type72 = typeCircularBuffer71.get();
        boolean boolean73 = typeCircularBuffer71.isFull();
        boolean boolean74 = typeCircularBuffer71.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean77 = typeCircularBuffer76.isEmpty();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        boolean boolean80 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass79);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer76.getClass();
        boolean boolean82 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass81);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean85 = typeCircularBuffer84.isEmpty();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        boolean boolean88 = typeCircularBuffer84.put((java.lang.reflect.Type) wildcardClass87);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer84.getClass();
        boolean boolean90 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass89);
        java.lang.reflect.Type type92 = typeCircularBuffer63.get();
        boolean boolean93 = typeCircularBuffer39.put(type92);
        boolean boolean94 = typeCircularBuffer36.put(type92);
        boolean boolean95 = typeCircularBuffer1.put(type92);
        boolean boolean96 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type97 = typeCircularBuffer1.get();
        java.lang.reflect.Type type98 = typeCircularBuffer1.get();
        java.lang.reflect.Type type99 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(type97);
        org.junit.Assert.assertNull(type98);
        org.junit.Assert.assertNull(type99);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer15.getClass();
        boolean boolean26 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type28 = typeCircularBuffer4.get();
        boolean boolean29 = typeCircularBuffer1.put(type28);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type33 = typeCircularBuffer32.get();
        boolean boolean34 = typeCircularBuffer32.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 1);
        java.lang.Class<?> wildcardClass37 = wildcardClassOfFieldCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer32.get();
        boolean boolean40 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        boolean boolean52 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer42.isEmpty();
        boolean boolean66 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer42.getClass();
        boolean boolean68 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer37.getClass();
        boolean boolean44 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type46 = typeCircularBuffer16.get();
        boolean boolean47 = typeCircularBuffer1.put(type46);
        boolean boolean48 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(type49);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean14 = typeCircularBuffer13.isFull();
        boolean boolean15 = typeCircularBuffer13.isEmpty();
        boolean boolean16 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean29 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer10.getClass();
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.isFull();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        boolean boolean45 = typeCircularBuffer36.put(type44);
        java.lang.reflect.Type type46 = typeCircularBuffer36.get();
        java.lang.reflect.Type type47 = null;
        boolean boolean48 = typeCircularBuffer36.put(type47);
        boolean boolean49 = typeCircularBuffer36.isFull();
        java.lang.reflect.Type type50 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>(100);
        java.lang.Class<?> wildcardClass53 = typeDescriptorCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        boolean boolean32 = typeCircularBuffer8.put(type30);
        java.lang.reflect.Type type33 = null;
        boolean boolean34 = typeCircularBuffer8.put(type33);
        java.lang.reflect.Type type35 = typeCircularBuffer8.get();
        boolean boolean36 = typeCircularBuffer1.put(type35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean41 = typeCircularBuffer40.isFull();
        boolean boolean42 = typeCircularBuffer40.isEmpty();
        java.lang.reflect.Type type43 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer45.getClass();
        boolean boolean56 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass55);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type60 = typeCircularBuffer59.get();
        boolean boolean61 = typeCircularBuffer59.isFull();
        boolean boolean62 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer64.getClass();
        boolean boolean70 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean74 = typeCircularBuffer73.isFull();
        boolean boolean75 = typeCircularBuffer73.isEmpty();
        java.lang.reflect.Type type76 = typeCircularBuffer73.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean81 = typeCircularBuffer80.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer83.getClass();
        boolean boolean85 = typeCircularBuffer80.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.reflect.Type type86 = typeCircularBuffer80.get();
        boolean boolean87 = typeCircularBuffer78.put(type86);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer78.getClass();
        boolean boolean89 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer59.getClass();
        boolean boolean92 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass91);
        boolean boolean93 = typeCircularBuffer38.isEmpty();
        boolean boolean94 = typeCircularBuffer38.isFull();
        java.lang.Class<?> wildcardClass95 = typeCircularBuffer38.getClass();
        boolean boolean96 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass95);
        boolean boolean97 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type98 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass99 = type98.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(type76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNull(type98);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        boolean boolean32 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = type5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        boolean boolean12 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean25 = typeCircularBuffer9.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean29 = typeCircularBuffer28.isFull();
        boolean boolean30 = typeCircularBuffer28.isEmpty();
        boolean boolean31 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer69.getClass();
        boolean boolean76 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean78 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean79 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type80 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass81 = type80.getClass();
        boolean boolean82 = typeCircularBuffer1.put(type80);
        boolean boolean83 = typeCircularBuffer1.isFull();
        boolean boolean84 = typeCircularBuffer1.isFull();
        boolean boolean85 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type86 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        boolean boolean40 = typeCircularBuffer38.isEmpty();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer38.get();
        boolean boolean56 = typeCircularBuffer9.put(type55);
        java.lang.Class<?> wildcardClass57 = type55.getClass();
        boolean boolean58 = typeCircularBuffer1.put(type55);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer60.isEmpty();
        java.lang.reflect.Type type67 = typeCircularBuffer60.get();
        boolean boolean68 = typeCircularBuffer1.put(type67);
        java.lang.reflect.Type type69 = typeCircularBuffer1.get();
        boolean boolean70 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        boolean boolean8 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        boolean boolean10 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        boolean boolean22 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer6.getClass();
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer1.get();
        boolean boolean43 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean8 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer11.getClass();
        boolean boolean17 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = typeCircularBuffer7.isEmpty();
        boolean boolean19 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type20 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer25.get();
        java.lang.reflect.Type type28 = typeCircularBuffer25.get();
        java.lang.reflect.Type type29 = typeCircularBuffer25.get();
        boolean boolean30 = typeCircularBuffer25.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean33 = typeCircularBuffer32.isFull();
        java.lang.reflect.Type type34 = typeCircularBuffer32.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer36.getClass();
        boolean boolean42 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type48 = typeCircularBuffer47.get();
        boolean boolean49 = typeCircularBuffer47.isFull();
        boolean boolean50 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean62 = typeCircularBuffer61.isFull();
        boolean boolean63 = typeCircularBuffer61.isEmpty();
        java.lang.reflect.Type type64 = typeCircularBuffer61.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer71.getClass();
        boolean boolean73 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass72);
        java.lang.reflect.Type type74 = typeCircularBuffer68.get();
        boolean boolean75 = typeCircularBuffer66.put(type74);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer66.getClass();
        boolean boolean77 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean78 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean79 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean80 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer25.getClass();
        boolean boolean82 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.reflect.Type type85 = typeCircularBuffer1.get();
        boolean boolean86 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer34.getClass();
        boolean boolean45 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.isFull();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        boolean boolean44 = typeCircularBuffer41.isFull();
        boolean boolean45 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type46 = typeCircularBuffer41.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type49 = typeCircularBuffer48.get();
        boolean boolean50 = typeCircularBuffer48.isFull();
        boolean boolean51 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer53.getClass();
        boolean boolean59 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass58);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer61.getClass();
        boolean boolean67 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer74.getClass();
        boolean boolean76 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type77 = typeCircularBuffer71.get();
        boolean boolean78 = typeCircularBuffer69.put(type77);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer69.getClass();
        boolean boolean80 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass79);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer48.getClass();
        boolean boolean82 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer41.isEmpty();
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer41.getClass();
        boolean boolean85 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.reflect.Type type86 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(type86);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = type10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer7.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isFull();
        boolean boolean38 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        boolean boolean52 = typeCircularBuffer43.put(type51);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        boolean boolean63 = typeCircularBuffer54.put(type62);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer54.getClass();
        boolean boolean65 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer43.isFull();
        java.lang.reflect.Type type67 = typeCircularBuffer43.get();
        boolean boolean68 = typeCircularBuffer40.put(type67);
        boolean boolean69 = typeCircularBuffer40.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean72 = typeCircularBuffer71.isFull();
        boolean boolean73 = typeCircularBuffer71.isEmpty();
        java.lang.reflect.Type type74 = typeCircularBuffer71.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean79 = typeCircularBuffer78.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass82 = typeCircularBuffer81.getClass();
        boolean boolean83 = typeCircularBuffer78.put((java.lang.reflect.Type) wildcardClass82);
        java.lang.reflect.Type type84 = typeCircularBuffer78.get();
        boolean boolean85 = typeCircularBuffer76.put(type84);
        java.lang.Class<?> wildcardClass86 = typeCircularBuffer76.getClass();
        boolean boolean87 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass86);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer89 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer89.getClass();
        boolean boolean91 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass90);
        boolean boolean92 = typeCircularBuffer71.isFull();
        java.lang.reflect.Type type93 = typeCircularBuffer71.get();
        boolean boolean94 = typeCircularBuffer40.put(type93);
        boolean boolean95 = typeCircularBuffer1.put(type93);
        boolean boolean96 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass97 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(type74);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type13 = typeCircularBuffer11.get();
        java.lang.reflect.Type type14 = typeCircularBuffer11.get();
        java.lang.reflect.Type type15 = typeCircularBuffer11.get();
        boolean boolean16 = typeCircularBuffer11.isFull();
        boolean boolean17 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type21 = typeCircularBuffer20.get();
        boolean boolean22 = typeCircularBuffer20.isFull();
        boolean boolean23 = typeCircularBuffer20.isFull();
        boolean boolean24 = typeCircularBuffer20.isFull();
        java.lang.reflect.Type type25 = typeCircularBuffer20.get();
        boolean boolean26 = typeCircularBuffer20.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer20.get();
        java.lang.reflect.Type type28 = typeCircularBuffer20.get();
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer20.getClass();
        boolean boolean30 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = typeCircularBuffer11.isEmpty();
        boolean boolean32 = typeCircularBuffer11.isFull();
        boolean boolean33 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type34 = typeCircularBuffer11.get();
        boolean boolean35 = typeCircularBuffer1.put(type34);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(type17);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer14.get();
        boolean boolean27 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        boolean boolean31 = typeCircularBuffer29.isFull();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer29.getClass();
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer14.get();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer14.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isFull();
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        boolean boolean45 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer43.put(type53);
        boolean boolean55 = typeCircularBuffer43.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean58 = typeCircularBuffer57.isFull();
        boolean boolean59 = typeCircularBuffer57.isEmpty();
        boolean boolean60 = typeCircularBuffer57.isFull();
        java.lang.reflect.Type type61 = null;
        boolean boolean62 = typeCircularBuffer57.put(type61);
        boolean boolean63 = typeCircularBuffer57.isFull();
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer57.getClass();
        boolean boolean65 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type67 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type70 = typeCircularBuffer69.get();
        boolean boolean71 = typeCircularBuffer69.isFull();
        boolean boolean72 = typeCircularBuffer69.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass78);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean85 = typeCircularBuffer84.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer87 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer87.getClass();
        boolean boolean89 = typeCircularBuffer84.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.reflect.Type type90 = typeCircularBuffer84.get();
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer84.getClass();
        boolean boolean92 = typeCircularBuffer82.put((java.lang.reflect.Type) wildcardClass91);
        boolean boolean93 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass91);
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer69.getClass();
        boolean boolean95 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass94);
        java.lang.reflect.Type type96 = null;
        boolean boolean97 = typeCircularBuffer1.put(type96);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        boolean boolean60 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type61 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type66 = typeCircularBuffer65.get();
        boolean boolean67 = typeCircularBuffer65.isFull();
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer65.getClass();
        boolean boolean69 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer63.isFull();
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer63.getClass();
        boolean boolean72 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        boolean boolean76 = typeCircularBuffer74.isEmpty();
        java.lang.reflect.Type type77 = typeCircularBuffer74.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean80 = typeCircularBuffer79.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer82.getClass();
        boolean boolean84 = typeCircularBuffer79.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean85 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.reflect.Type type86 = typeCircularBuffer74.get();
        java.lang.Class<?> wildcardClass87 = type86.getClass();
        boolean boolean88 = typeCircularBuffer1.put(type86);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(type77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean17 = typeCircularBuffer16.isFull();
        boolean boolean18 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer39.get();
        java.lang.reflect.Type type42 = typeCircularBuffer39.get();
        java.lang.reflect.Type type43 = typeCircularBuffer39.get();
        boolean boolean44 = typeCircularBuffer39.isFull();
        boolean boolean45 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type46 = typeCircularBuffer39.get();
        boolean boolean47 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer51.getClass();
        boolean boolean59 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type61 = typeCircularBuffer39.get();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer39.getClass();
        boolean boolean63 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type66 = typeCircularBuffer65.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer70.get();
        boolean boolean77 = typeCircularBuffer68.put(type76);
        boolean boolean78 = typeCircularBuffer68.isFull();
        java.lang.reflect.Type type79 = typeCircularBuffer68.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean82 = typeCircularBuffer81.isEmpty();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        boolean boolean85 = typeCircularBuffer81.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean86 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean87 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean88 = typeCircularBuffer65.isFull();
        java.lang.reflect.Type type89 = typeCircularBuffer65.get();
        boolean boolean90 = typeCircularBuffer1.put(type89);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(type66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type8 = typeCircularBuffer7.get();
        boolean boolean9 = typeCircularBuffer7.isFull();
        boolean boolean10 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        boolean boolean31 = typeCircularBuffer7.put(type29);
        boolean boolean32 = typeCircularBuffer3.put(type29);
        boolean boolean33 = typeCircularBuffer1.put(type29);
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        boolean boolean48 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer46.get();
        boolean boolean50 = typeCircularBuffer46.isFull();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer1.isFull();
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        java.lang.reflect.Type type56 = typeCircularBuffer1.get();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        boolean boolean40 = typeCircularBuffer38.isEmpty();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer38.get();
        boolean boolean56 = typeCircularBuffer9.put(type55);
        boolean boolean57 = typeCircularBuffer1.put(type55);
        java.lang.reflect.Type type58 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer10.get();
        java.lang.reflect.Type type13 = typeCircularBuffer10.get();
        java.lang.reflect.Type type14 = typeCircularBuffer10.get();
        boolean boolean15 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer10.getClass();
        boolean boolean18 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer8.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer8.get();
        boolean boolean21 = typeCircularBuffer1.put(type20);
        java.lang.Class<?> wildcardClass22 = type20.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer11.getClass();
        boolean boolean22 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer12.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isFull();
        boolean boolean21 = typeCircularBuffer1.isFull();
        boolean boolean22 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer1.get();
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        boolean boolean46 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        boolean boolean22 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        boolean boolean52 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass58);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer63.get();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass71);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer74.getClass();
        boolean boolean81 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = typeCircularBuffer63.get();
        boolean boolean83 = typeCircularBuffer35.put(type82);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer35.getClass();
        boolean boolean85 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass84);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isFull();
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer28.get();
        boolean boolean36 = typeCircularBuffer15.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type21 = typeCircularBuffer20.get();
        boolean boolean22 = typeCircularBuffer20.isFull();
        boolean boolean23 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer25.getClass();
        boolean boolean31 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer33.getClass();
        boolean boolean39 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer12.isEmpty();
        boolean boolean42 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        boolean boolean54 = typeCircularBuffer44.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean67 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type70 = typeCircularBuffer69.get();
        boolean boolean71 = typeCircularBuffer69.isFull();
        boolean boolean72 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer74.getClass();
        boolean boolean80 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass79);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean83 = typeCircularBuffer82.isEmpty();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        boolean boolean86 = typeCircularBuffer82.put((java.lang.reflect.Type) wildcardClass85);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer82.getClass();
        boolean boolean88 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = typeCircularBuffer44.isEmpty();
        java.lang.reflect.Type type91 = typeCircularBuffer44.get();
        boolean boolean92 = typeCircularBuffer12.put(type91);
        boolean boolean93 = typeCircularBuffer1.put(type91);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        boolean boolean9 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type10 = null;
        boolean boolean11 = typeCircularBuffer6.put(type10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        boolean boolean13 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer6.getClass();
        boolean boolean15 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.isFull();
        boolean boolean17 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer19.get();
        java.lang.reflect.Type type22 = typeCircularBuffer19.get();
        java.lang.reflect.Type type23 = typeCircularBuffer19.get();
        boolean boolean24 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer27.getClass();
        boolean boolean30 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer19.getClass();
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass28 = genericDeclarationCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer31.get();
        boolean boolean34 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer31.get();
        boolean boolean36 = typeCircularBuffer31.isFull();
        boolean boolean37 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean40 = typeCircularBuffer39.isFull();
        boolean boolean41 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type42 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer44.getClass();
        boolean boolean55 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass61 = type60.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNull(type60);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = null;
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.reflect.Type type22 = typeCircularBuffer12.get();
        java.lang.reflect.Type type23 = null;
        boolean boolean24 = typeCircularBuffer12.put(type23);
        boolean boolean25 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type29 = typeCircularBuffer28.get();
        boolean boolean30 = typeCircularBuffer28.isFull();
        boolean boolean31 = typeCircularBuffer28.isFull();
        boolean boolean32 = typeCircularBuffer28.isFull();
        boolean boolean33 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        boolean boolean39 = typeCircularBuffer37.isFull();
        boolean boolean40 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer42.getClass();
        boolean boolean48 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        boolean boolean60 = typeCircularBuffer51.put(type59);
        boolean boolean61 = typeCircularBuffer37.put(type59);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer37.getClass();
        boolean boolean63 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean67 = typeCircularBuffer66.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer69.isFull();
        java.lang.reflect.Type type76 = typeCircularBuffer69.get();
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer69.getClass();
        boolean boolean78 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer66.isFull();
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer66.getClass();
        boolean boolean81 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean82 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean83 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isFull();
        boolean boolean23 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer19.get();
        boolean boolean25 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer19.get();
        java.lang.reflect.Type type27 = typeCircularBuffer19.get();
        boolean boolean28 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer19.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer1.get();
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        boolean boolean55 = typeCircularBuffer1.isEmpty();
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        boolean boolean21 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertNull(type41);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer27.get();
        boolean boolean38 = typeCircularBuffer14.put(type37);
        boolean boolean39 = typeCircularBuffer1.put(type37);
        boolean boolean40 = typeCircularBuffer1.isFull();
        boolean boolean41 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        boolean boolean19 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer16.put(type38);
        boolean boolean41 = typeCircularBuffer12.put(type38);
        boolean boolean42 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type43 = typeCircularBuffer12.get();
        boolean boolean44 = typeCircularBuffer1.put(type43);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        boolean boolean7 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer5.put(type15);
        boolean boolean17 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean20 = typeCircularBuffer19.isFull();
        boolean boolean21 = typeCircularBuffer19.isEmpty();
        boolean boolean22 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type23 = null;
        boolean boolean24 = typeCircularBuffer19.put(type23);
        boolean boolean25 = typeCircularBuffer19.isFull();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer19.getClass();
        boolean boolean27 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        boolean boolean31 = typeCircularBuffer29.isFull();
        boolean boolean32 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer34.getClass();
        boolean boolean40 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer42.getClass();
        boolean boolean48 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass47);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass53);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean57 = typeCircularBuffer56.isFull();
        boolean boolean58 = typeCircularBuffer56.isEmpty();
        java.lang.reflect.Type type59 = typeCircularBuffer56.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer63.get();
        boolean boolean70 = typeCircularBuffer61.put(type69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer61.getClass();
        boolean boolean72 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass71);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer74.getClass();
        boolean boolean76 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean78 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean79 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean80 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean81 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        boolean boolean26 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer28.getClass();
        boolean boolean34 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean38 = typeCircularBuffer37.isFull();
        boolean boolean39 = typeCircularBuffer37.isEmpty();
        java.lang.reflect.Type type40 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer42.getClass();
        boolean boolean53 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        boolean boolean60 = typeCircularBuffer58.isEmpty();
        java.lang.reflect.Type type61 = typeCircularBuffer58.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer63.isFull();
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer63.getClass();
        boolean boolean70 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type72 = typeCircularBuffer58.get();
        boolean boolean73 = typeCircularBuffer1.put(type72);
        java.lang.reflect.Type type74 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass75 = type74.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        boolean boolean9 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean18 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        boolean boolean30 = typeCircularBuffer20.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type39 = typeCircularBuffer20.get();
        boolean boolean40 = typeCircularBuffer6.put(type39);
        java.lang.reflect.Type type41 = typeCircularBuffer6.get();
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer6.getClass();
        boolean boolean43 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type46 = typeCircularBuffer45.get();
        boolean boolean47 = typeCircularBuffer45.isFull();
        boolean boolean48 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer50.getClass();
        boolean boolean56 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer45.get();
        boolean boolean58 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer60.isEmpty();
        java.lang.reflect.Type type67 = typeCircularBuffer60.get();
        boolean boolean68 = typeCircularBuffer45.put(type67);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type71 = typeCircularBuffer70.get();
        boolean boolean72 = typeCircularBuffer70.isFull();
        boolean boolean73 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        boolean boolean79 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer75.getClass();
        boolean boolean81 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = typeCircularBuffer70.get();
        boolean boolean83 = typeCircularBuffer70.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type86 = typeCircularBuffer85.get();
        boolean boolean87 = typeCircularBuffer85.isFull();
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer85.getClass();
        boolean boolean89 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean91 = typeCircularBuffer45.isEmpty();
        java.lang.reflect.Type type92 = typeCircularBuffer45.get();
        boolean boolean93 = typeCircularBuffer1.put(type92);
        boolean boolean94 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(type86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isFull();
        boolean boolean22 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        boolean boolean50 = typeCircularBuffer26.put(type48);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer26.getClass();
        boolean boolean52 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass51);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type55 = typeCircularBuffer54.get();
        boolean boolean56 = typeCircularBuffer54.isFull();
        boolean boolean57 = typeCircularBuffer54.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass63);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.reflect.Type type75 = typeCircularBuffer69.get();
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer69.getClass();
        boolean boolean77 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean78 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean79 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type80 = typeCircularBuffer17.get();
        boolean boolean81 = typeCircularBuffer1.put(type80);
        boolean boolean82 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type83 = null;
        boolean boolean84 = typeCircularBuffer1.put(type83);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer12.getClass();
        boolean boolean16 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer10.getClass();
        boolean boolean18 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        boolean boolean20 = typeCircularBuffer1.isFull();
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean6 = typeCircularBuffer5.isFull();
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer5.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer23.getClass();
        boolean boolean29 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass40 = genericDeclarationCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean43 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type44 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean47 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type48 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer50.getClass();
        boolean boolean56 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer46.isEmpty();
        boolean boolean58 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type59 = typeCircularBuffer46.get();
        boolean boolean60 = typeCircularBuffer46.isFull();
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer46.getClass();
        boolean boolean62 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass61);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type39 = typeCircularBuffer38.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer41.get();
        boolean boolean45 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer41.getClass();
        boolean boolean47 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer38.getClass();
        boolean boolean49 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer1.isFull();
        boolean boolean52 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean55 = typeCircularBuffer54.isFull();
        java.lang.reflect.Type type56 = typeCircularBuffer54.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer58.getClass();
        boolean boolean64 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer54.isEmpty();
        boolean boolean66 = typeCircularBuffer54.isEmpty();
        boolean boolean67 = typeCircularBuffer54.isFull();
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer54.getClass();
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass68);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer74.getClass();
        boolean boolean76 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer71.getClass();
        boolean boolean78 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer60.get();
        boolean boolean80 = typeCircularBuffer1.put(type79);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isFull();
        boolean boolean7 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer3.get();
        boolean boolean9 = typeCircularBuffer3.isEmpty();
        boolean boolean10 = typeCircularBuffer3.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isFull();
        boolean boolean15 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer17.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer25.getClass();
        boolean boolean31 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass42 = genericDeclarationCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Object> objCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Object>((int) (short) 1);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = null;
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.reflect.Type type22 = typeCircularBuffer12.get();
        java.lang.reflect.Type type23 = null;
        boolean boolean24 = typeCircularBuffer12.put(type23);
        boolean boolean25 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type29 = typeCircularBuffer28.get();
        boolean boolean30 = typeCircularBuffer28.isFull();
        boolean boolean31 = typeCircularBuffer28.isFull();
        boolean boolean32 = typeCircularBuffer28.isFull();
        boolean boolean33 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        boolean boolean39 = typeCircularBuffer37.isFull();
        boolean boolean40 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer42.getClass();
        boolean boolean48 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        boolean boolean60 = typeCircularBuffer51.put(type59);
        boolean boolean61 = typeCircularBuffer37.put(type59);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer37.getClass();
        boolean boolean63 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean67 = typeCircularBuffer66.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer69.isFull();
        java.lang.reflect.Type type76 = typeCircularBuffer69.get();
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer69.getClass();
        boolean boolean78 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer66.isFull();
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer66.getClass();
        boolean boolean81 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean82 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean83 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean84 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type19 = typeCircularBuffer18.get();
        boolean boolean20 = typeCircularBuffer18.isFull();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer18.getClass();
        boolean boolean22 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isFull();
        boolean boolean29 = typeCircularBuffer25.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer25.get();
        boolean boolean31 = typeCircularBuffer25.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer25.get();
        java.lang.reflect.Type type33 = typeCircularBuffer25.get();
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer25.getClass();
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = null;
        boolean boolean44 = typeCircularBuffer37.put(type43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer48.getClass();
        boolean boolean56 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer37.isFull();
        boolean boolean59 = typeCircularBuffer37.isEmpty();
        boolean boolean60 = typeCircularBuffer37.isFull();
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer37.getClass();
        boolean boolean62 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.reflect.Type type63 = typeCircularBuffer1.get();
        boolean boolean64 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean5 = typeCircularBuffer4.isFull();
        boolean boolean6 = typeCircularBuffer4.isEmpty();
        boolean boolean7 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        boolean boolean12 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isFull();
        boolean boolean18 = typeCircularBuffer14.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer14.get();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer14.getClass();
        boolean boolean21 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean36 = typeCircularBuffer35.isFull();
        boolean boolean37 = typeCircularBuffer35.isEmpty();
        boolean boolean38 = typeCircularBuffer35.isFull();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer35.getClass();
        boolean boolean40 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer24.getClass();
        boolean boolean42 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        boolean boolean10 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer12.getClass();
        boolean boolean15 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer8.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        boolean boolean33 = typeCircularBuffer9.put(type31);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer9.getClass();
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        java.lang.reflect.Type type38 = typeCircularBuffer1.get();
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        boolean boolean40 = typeCircularBuffer1.isFull();
        boolean boolean41 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean8 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer7.get();
        boolean boolean10 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer7.get();
        boolean boolean12 = typeCircularBuffer7.isFull();
        boolean boolean13 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer20.getClass();
        boolean boolean31 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer7.isEmpty();
        boolean boolean34 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer7.get();
        boolean boolean36 = typeCircularBuffer1.put(type35);
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        boolean boolean13 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer26.getClass();
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer3.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type49 = typeCircularBuffer48.get();
        boolean boolean50 = typeCircularBuffer48.isFull();
        boolean boolean51 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer53.getClass();
        boolean boolean59 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass58);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer61.getClass();
        boolean boolean67 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer40.getClass();
        boolean boolean70 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean72 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean73 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        boolean boolean28 = typeCircularBuffer18.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer11.isFull();
        boolean boolean47 = typeCircularBuffer11.isEmpty();
        boolean boolean48 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer11.getClass();
        boolean boolean50 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type55 = typeCircularBuffer54.get();
        boolean boolean56 = typeCircularBuffer54.isFull();
        boolean boolean57 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer59.getClass();
        boolean boolean65 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean69 = typeCircularBuffer68.isFull();
        boolean boolean70 = typeCircularBuffer68.isEmpty();
        java.lang.reflect.Type type71 = typeCircularBuffer68.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer78.getClass();
        boolean boolean80 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass79);
        java.lang.reflect.Type type81 = typeCircularBuffer75.get();
        boolean boolean82 = typeCircularBuffer73.put(type81);
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer73.getClass();
        boolean boolean84 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean85 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean87 = typeCircularBuffer52.isFull();
        java.lang.reflect.Type type88 = typeCircularBuffer52.get();
        boolean boolean89 = typeCircularBuffer52.isEmpty();
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer52.getClass();
        boolean boolean91 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass90);
        boolean boolean92 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type93 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer95 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean96 = typeCircularBuffer95.isEmpty();
        boolean boolean97 = typeCircularBuffer95.isFull();
        java.lang.Class<?> wildcardClass98 = typeCircularBuffer95.getClass();
        boolean boolean99 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass98);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(type88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        boolean boolean15 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type22 = typeCircularBuffer17.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer17.getClass();
        boolean boolean24 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(type30);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        java.lang.reflect.Type type28 = null;
        boolean boolean29 = typeCircularBuffer1.put(type28);
        boolean boolean30 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass34 = type33.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        boolean boolean40 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer42.getClass();
        boolean boolean45 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer37.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean50 = typeCircularBuffer49.isFull();
        boolean boolean51 = typeCircularBuffer49.isEmpty();
        boolean boolean52 = typeCircularBuffer49.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer49.isFull();
        java.lang.reflect.Type type66 = typeCircularBuffer49.get();
        boolean boolean67 = typeCircularBuffer1.put(type66);
        boolean boolean68 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type69 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(type69);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(type16);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type47 = typeCircularBuffer46.get();
        boolean boolean48 = typeCircularBuffer46.isFull();
        boolean boolean49 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer51.getClass();
        boolean boolean57 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass56);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer59.getClass();
        boolean boolean65 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type67 = typeCircularBuffer38.get();
        java.lang.reflect.Type type68 = typeCircularBuffer38.get();
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer38.getClass();
        boolean boolean70 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isFull();
        boolean boolean35 = typeCircularBuffer1.isFull();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type38 = null;
        boolean boolean39 = typeCircularBuffer1.put(type38);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        boolean boolean44 = typeCircularBuffer41.isFull();
        boolean boolean45 = typeCircularBuffer41.isEmpty();
        boolean boolean46 = typeCircularBuffer41.isEmpty();
        boolean boolean47 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = null;
        boolean boolean56 = typeCircularBuffer49.put(type55);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer60.getClass();
        boolean boolean68 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean70 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean71 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type72 = null;
        boolean boolean73 = typeCircularBuffer1.put(type72);
        java.lang.reflect.Type type74 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(type74);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.reflect.Type type19 = null;
        boolean boolean20 = typeCircularBuffer1.put(type19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer25.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean45 = typeCircularBuffer22.isEmpty();
        boolean boolean46 = typeCircularBuffer22.isFull();
        boolean boolean47 = typeCircularBuffer22.isEmpty();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer22.getClass();
        boolean boolean49 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        boolean boolean53 = typeCircularBuffer51.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer51.get();
        boolean boolean55 = typeCircularBuffer51.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        boolean boolean66 = typeCircularBuffer57.put(type65);
        boolean boolean67 = typeCircularBuffer57.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.reflect.Type type75 = typeCircularBuffer69.get();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean80 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        boolean boolean83 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean84 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass82);
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer51.getClass();
        boolean boolean86 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean87 = typeCircularBuffer1.isEmpty();
        boolean boolean88 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        boolean boolean40 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer42.getClass();
        boolean boolean45 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer37.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type51 = typeCircularBuffer50.get();
        boolean boolean52 = typeCircularBuffer50.isEmpty();
        java.lang.reflect.Type type53 = typeCircularBuffer50.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean56 = typeCircularBuffer55.isFull();
        boolean boolean57 = typeCircularBuffer55.isEmpty();
        java.lang.reflect.Type type58 = typeCircularBuffer55.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        boolean boolean69 = typeCircularBuffer60.put(type68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer60.getClass();
        boolean boolean71 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass70);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean77 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean78 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(type58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer1.put(type23);
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean14 = typeCircularBuffer13.isFull();
        boolean boolean15 = typeCircularBuffer13.isEmpty();
        boolean boolean16 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean29 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer10.getClass();
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.isFull();
        boolean boolean33 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer10.get();
        java.lang.reflect.Type type13 = typeCircularBuffer10.get();
        java.lang.reflect.Type type14 = typeCircularBuffer10.get();
        boolean boolean15 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean18 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        boolean boolean41 = typeCircularBuffer32.put(type40);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        boolean boolean52 = typeCircularBuffer43.put(type51);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer43.getClass();
        boolean boolean54 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean56 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type57 = typeCircularBuffer10.get();
        java.lang.reflect.Type type58 = typeCircularBuffer10.get();
        java.lang.reflect.Type type59 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean62 = typeCircularBuffer61.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer61.get();
        boolean boolean64 = typeCircularBuffer61.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer66.getClass();
        boolean boolean69 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass68);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        boolean boolean73 = typeCircularBuffer71.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type76 = typeCircularBuffer75.get();
        boolean boolean77 = typeCircularBuffer75.isFull();
        boolean boolean78 = typeCircularBuffer75.isFull();
        boolean boolean79 = typeCircularBuffer75.isEmpty();
        java.lang.reflect.Type type80 = typeCircularBuffer75.get();
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer75.getClass();
        boolean boolean82 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer61.getClass();
        boolean boolean85 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.reflect.Type type86 = typeCircularBuffer10.get();
        boolean boolean87 = typeCircularBuffer1.put(type86);
        java.lang.Class<?> wildcardClass88 = type86.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNull(type58);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer7.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        boolean boolean50 = typeCircularBuffer40.isFull();
        java.lang.reflect.Type type51 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean60 = typeCircularBuffer33.isFull();
        boolean boolean61 = typeCircularBuffer33.isFull();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer33.getClass();
        boolean boolean63 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer7.get();
        java.lang.Class<?> wildcardClass65 = type64.getClass();
        boolean boolean66 = typeCircularBuffer1.put(type64);
        boolean boolean67 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.reflect.Type type75 = typeCircularBuffer69.get();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer69.get();
        boolean boolean80 = typeCircularBuffer69.isFull();
        boolean boolean81 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type86 = typeCircularBuffer85.get();
        boolean boolean87 = typeCircularBuffer85.isFull();
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer85.getClass();
        boolean boolean89 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer83.isFull();
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer83.getClass();
        boolean boolean92 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass91);
        boolean boolean93 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass91);
        boolean boolean94 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(type86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        boolean boolean27 = typeCircularBuffer17.isEmpty();
        boolean boolean28 = typeCircularBuffer17.isFull();
        boolean boolean29 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer44.isFull();
        java.lang.reflect.Type type51 = typeCircularBuffer44.get();
        boolean boolean52 = typeCircularBuffer31.put(type51);
        boolean boolean53 = typeCircularBuffer17.put(type51);
        boolean boolean54 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type55 = typeCircularBuffer17.get();
        boolean boolean56 = typeCircularBuffer1.put(type55);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer26.put(type34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer37.put(type45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer37.getClass();
        boolean boolean48 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer26.isFull();
        boolean boolean50 = typeCircularBuffer26.isFull();
        boolean boolean51 = typeCircularBuffer26.isEmpty();
        java.lang.reflect.Type type52 = typeCircularBuffer26.get();
        boolean boolean53 = typeCircularBuffer1.put(type52);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer7.get();
        java.lang.reflect.Type type10 = typeCircularBuffer7.get();
        java.lang.reflect.Type type11 = typeCircularBuffer7.get();
        boolean boolean12 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean15 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer18.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer40.getClass();
        boolean boolean51 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        boolean boolean56 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer1.get();
        boolean boolean58 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer11.get();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer22.getClass();
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type33 = typeCircularBuffer32.get();
        boolean boolean34 = typeCircularBuffer32.isFull();
        boolean boolean35 = typeCircularBuffer32.isFull();
        boolean boolean36 = typeCircularBuffer32.isFull();
        boolean boolean37 = typeCircularBuffer32.isFull();
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer32.isFull();
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer32.getClass();
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        boolean boolean20 = typeCircularBuffer10.isEmpty();
        boolean boolean21 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer34.get();
        boolean boolean45 = typeCircularBuffer23.put(type44);
        boolean boolean46 = typeCircularBuffer10.put(type44);
        boolean boolean47 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer10.get();
        boolean boolean49 = typeCircularBuffer1.put(type48);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        boolean boolean53 = typeCircularBuffer51.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer51.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        java.lang.reflect.Type type58 = typeCircularBuffer56.get();
        java.lang.reflect.Type type59 = typeCircularBuffer56.get();
        java.lang.reflect.Type type60 = typeCircularBuffer56.get();
        boolean boolean61 = typeCircularBuffer56.isFull();
        boolean boolean62 = typeCircularBuffer56.isFull();
        boolean boolean63 = typeCircularBuffer56.isFull();
        boolean boolean64 = typeCircularBuffer56.isEmpty();
        boolean boolean65 = typeCircularBuffer56.isFull();
        boolean boolean66 = typeCircularBuffer56.isFull();
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer56.getClass();
        boolean boolean68 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer51.get();
        boolean boolean70 = typeCircularBuffer1.put(type69);
        java.lang.reflect.Type type71 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(type58);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type71);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean10 = typeCircularBuffer9.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer9.isEmpty();
        boolean boolean21 = typeCircularBuffer9.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer9.get();
        java.lang.reflect.Type type23 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer9.getClass();
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        boolean boolean22 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertNull(type35);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        boolean boolean62 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        java.lang.reflect.Type type46 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass47 = type46.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNull(type46);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer6.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        boolean boolean13 = typeCircularBuffer11.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        boolean boolean17 = typeCircularBuffer15.isFull();
        boolean boolean18 = typeCircularBuffer15.isFull();
        boolean boolean19 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer15.get();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer15.getClass();
        boolean boolean22 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        boolean boolean28 = typeCircularBuffer18.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        boolean boolean48 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.reflect.Type type10 = typeCircularBuffer4.get();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass12);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer15.get();
        boolean boolean26 = typeCircularBuffer4.put(type25);
        boolean boolean27 = typeCircularBuffer1.put(type25);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer32.getClass();
        boolean boolean40 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer7.put(type37);
        java.lang.reflect.Type type39 = typeCircularBuffer7.get();
        boolean boolean40 = typeCircularBuffer1.put(type39);
        boolean boolean41 = typeCircularBuffer1.isFull();
        boolean boolean42 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass45);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean31 = typeCircularBuffer30.isFull();
        boolean boolean32 = typeCircularBuffer30.isEmpty();
        boolean boolean33 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer30.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        boolean boolean58 = typeCircularBuffer51.isFull();
        java.lang.reflect.Type type59 = typeCircularBuffer51.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type67 = typeCircularBuffer61.get();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass69);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer72.getClass();
        boolean boolean79 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type81 = typeCircularBuffer51.get();
        boolean boolean82 = typeCircularBuffer1.put(type81);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean87 = typeCircularBuffer86.isEmpty();
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer86.getClass();
        boolean boolean89 = typeCircularBuffer84.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean91 = typeCircularBuffer1.isEmpty();
        boolean boolean92 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean27 = typeCircularBuffer4.isEmpty();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer4.getClass();
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = null;
        boolean boolean31 = typeCircularBuffer1.put(type30);
        boolean boolean32 = typeCircularBuffer1.isEmpty();
        boolean boolean33 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer20.getClass();
        boolean boolean31 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        boolean boolean21 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean31 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean34 = typeCircularBuffer33.isFull();
        boolean boolean35 = typeCircularBuffer33.isEmpty();
        boolean boolean36 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer33.isFull();
        java.lang.reflect.Type type50 = typeCircularBuffer33.get();
        boolean boolean51 = typeCircularBuffer4.put(type50);
        boolean boolean52 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        boolean boolean61 = typeCircularBuffer54.isFull();
        java.lang.reflect.Type type62 = typeCircularBuffer54.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer67.getClass();
        boolean boolean69 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.reflect.Type type70 = typeCircularBuffer64.get();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass72);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer78.getClass();
        boolean boolean80 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass79);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer75.getClass();
        boolean boolean82 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.reflect.Type type84 = typeCircularBuffer54.get();
        boolean boolean85 = typeCircularBuffer4.put(type84);
        boolean boolean86 = typeCircularBuffer1.put(type84);
        boolean boolean87 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(type62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = type4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean17 = typeCircularBuffer16.isFull();
        boolean boolean18 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean35 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        boolean boolean37 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean40 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer39.get();
        boolean boolean42 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type43 = typeCircularBuffer39.get();
        boolean boolean44 = typeCircularBuffer39.isFull();
        boolean boolean45 = typeCircularBuffer39.isFull();
        boolean boolean46 = typeCircularBuffer39.isEmpty();
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer39.getClass();
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isEmpty();
        boolean boolean30 = typeCircularBuffer1.isFull();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        boolean boolean20 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        boolean boolean32 = typeCircularBuffer22.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type51 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        boolean boolean40 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer42.getClass();
        boolean boolean45 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer37.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer1.isFull();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        boolean boolean60 = typeCircularBuffer51.put(type59);
        boolean boolean61 = typeCircularBuffer51.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer63.get();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer51.isEmpty();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer51.getClass();
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type81 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer83.getClass();
        boolean boolean85 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.reflect.Type type86 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(type81);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(type86);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.ConstantDesc> constantDescCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.ConstantDesc>((int) '#');
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertNull(type49);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        boolean boolean48 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer46.get();
        boolean boolean50 = typeCircularBuffer46.isFull();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer1.isFull();
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        boolean boolean55 = typeCircularBuffer1.isFull();
        boolean boolean56 = typeCircularBuffer1.isFull();
        boolean boolean57 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type58 = typeCircularBuffer1.get();
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNull(type59);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer1.put(type24);
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isFull();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        boolean boolean32 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isFull();
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer6.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type33 = typeCircularBuffer32.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        boolean boolean37 = typeCircularBuffer35.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type40 = typeCircularBuffer39.get();
        boolean boolean41 = typeCircularBuffer39.isFull();
        boolean boolean42 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer44.getClass();
        boolean boolean50 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer39.get();
        boolean boolean52 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer54.isEmpty();
        java.lang.reflect.Type type61 = typeCircularBuffer54.get();
        boolean boolean62 = typeCircularBuffer39.put(type61);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type65 = typeCircularBuffer64.get();
        boolean boolean66 = typeCircularBuffer64.isFull();
        boolean boolean67 = typeCircularBuffer64.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass72);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer69.getClass();
        boolean boolean75 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer64.get();
        boolean boolean77 = typeCircularBuffer64.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type80 = typeCircularBuffer79.get();
        boolean boolean81 = typeCircularBuffer79.isFull();
        java.lang.Class<?> wildcardClass82 = typeCircularBuffer79.getClass();
        boolean boolean83 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean84 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean85 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass82);
        java.lang.Class<?> wildcardClass86 = typeCircularBuffer35.getClass();
        boolean boolean87 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass86);
        boolean boolean88 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer32.get();
        java.lang.reflect.Type type35 = typeCircularBuffer32.get();
        java.lang.reflect.Type type36 = typeCircularBuffer32.get();
        boolean boolean37 = typeCircularBuffer32.isFull();
        boolean boolean38 = typeCircularBuffer32.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer32.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        boolean boolean44 = typeCircularBuffer41.isFull();
        boolean boolean45 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type46 = typeCircularBuffer41.get();
        boolean boolean47 = typeCircularBuffer41.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer41.get();
        java.lang.reflect.Type type49 = typeCircularBuffer41.get();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer41.getClass();
        boolean boolean51 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer32.isEmpty();
        boolean boolean53 = typeCircularBuffer32.isFull();
        boolean boolean54 = typeCircularBuffer32.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer32.get();
        boolean boolean56 = typeCircularBuffer1.put(type55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        boolean boolean28 = typeCircularBuffer18.isEmpty();
        boolean boolean29 = typeCircularBuffer18.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer42.get();
        boolean boolean53 = typeCircularBuffer31.put(type52);
        boolean boolean54 = typeCircularBuffer18.put(type52);
        boolean boolean55 = typeCircularBuffer18.isEmpty();
        java.lang.reflect.Type type56 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        boolean boolean60 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type61 = typeCircularBuffer58.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        java.lang.reflect.Type type65 = typeCircularBuffer63.get();
        java.lang.reflect.Type type66 = typeCircularBuffer63.get();
        java.lang.reflect.Type type67 = typeCircularBuffer63.get();
        boolean boolean68 = typeCircularBuffer63.isFull();
        boolean boolean69 = typeCircularBuffer63.isFull();
        boolean boolean70 = typeCircularBuffer63.isFull();
        boolean boolean71 = typeCircularBuffer63.isEmpty();
        boolean boolean72 = typeCircularBuffer63.isFull();
        boolean boolean73 = typeCircularBuffer63.isFull();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer63.getClass();
        boolean boolean75 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer18.getClass();
        boolean boolean78 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(type65);
        org.junit.Assert.assertNull(type66);
        org.junit.Assert.assertNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type13 = typeCircularBuffer11.get();
        boolean boolean14 = typeCircularBuffer11.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        boolean boolean19 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer39.get();
        java.lang.reflect.Type type42 = typeCircularBuffer39.get();
        java.lang.reflect.Type type43 = typeCircularBuffer39.get();
        boolean boolean44 = typeCircularBuffer39.isFull();
        boolean boolean45 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type46 = typeCircularBuffer39.get();
        boolean boolean47 = typeCircularBuffer39.isFull();
        boolean boolean48 = typeCircularBuffer39.isEmpty();
        boolean boolean49 = typeCircularBuffer39.isFull();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer39.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer1.isEmpty();
        boolean boolean53 = typeCircularBuffer1.isEmpty();
        boolean boolean54 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean11 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer10.get();
        boolean boolean13 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer10.get();
        boolean boolean15 = typeCircularBuffer10.isFull();
        boolean boolean16 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean19 = typeCircularBuffer18.isFull();
        boolean boolean20 = typeCircularBuffer18.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer23.getClass();
        boolean boolean34 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer10.isEmpty();
        boolean boolean37 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        boolean boolean48 = typeCircularBuffer39.put(type47);
        java.lang.reflect.Type type49 = typeCircularBuffer39.get();
        java.lang.reflect.Type type50 = null;
        boolean boolean51 = typeCircularBuffer39.put(type50);
        boolean boolean52 = typeCircularBuffer39.isEmpty();
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer39.getClass();
        boolean boolean54 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type56 = typeCircularBuffer10.get();
        boolean boolean57 = typeCircularBuffer1.put(type56);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        boolean boolean21 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer30.getClass();
        boolean boolean36 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean40 = typeCircularBuffer39.isFull();
        boolean boolean41 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type42 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer44.getClass();
        boolean boolean55 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean58 = typeCircularBuffer23.isFull();
        boolean boolean59 = typeCircularBuffer23.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer23.get();
        java.lang.reflect.Type type61 = typeCircularBuffer23.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        java.lang.reflect.Type type64 = typeCircularBuffer63.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean67 = typeCircularBuffer66.isFull();
        boolean boolean68 = typeCircularBuffer66.isEmpty();
        java.lang.reflect.Type type69 = typeCircularBuffer66.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer76.getClass();
        boolean boolean78 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer73.get();
        boolean boolean80 = typeCircularBuffer71.put(type79);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer71.getClass();
        boolean boolean82 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass81);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer84.getClass();
        boolean boolean86 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean87 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean88 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean89 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass85);
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(type69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type28 = typeCircularBuffer27.get();
        boolean boolean29 = typeCircularBuffer27.isFull();
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer27.getClass();
        boolean boolean31 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type33);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = type16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(type16);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        boolean boolean17 = typeCircularBuffer1.isFull();
        boolean boolean18 = typeCircularBuffer1.isFull();
        boolean boolean19 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        boolean boolean21 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        boolean boolean44 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type60 = typeCircularBuffer59.get();
        boolean boolean61 = typeCircularBuffer59.isFull();
        boolean boolean62 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer64.getClass();
        boolean boolean70 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass69);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer72.getClass();
        boolean boolean78 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type80 = typeCircularBuffer34.get();
        boolean boolean81 = typeCircularBuffer8.put(type80);
        java.lang.reflect.Type type82 = typeCircularBuffer8.get();
        boolean boolean83 = typeCircularBuffer1.put(type82);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean45 = typeCircularBuffer1.isFull();
        boolean boolean46 = typeCircularBuffer1.isEmpty();
        boolean boolean47 = typeCircularBuffer1.isFull();
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        boolean boolean16 = typeCircularBuffer1.isFull();
        boolean boolean17 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer7.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass45);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer48.get();
        java.lang.reflect.Type type51 = typeCircularBuffer48.get();
        java.lang.reflect.Type type52 = typeCircularBuffer48.get();
        boolean boolean53 = typeCircularBuffer48.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer56.getClass();
        boolean boolean59 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean62 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type63 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type63);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer24.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        boolean boolean56 = typeCircularBuffer54.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer54.get();
        boolean boolean58 = typeCircularBuffer54.isFull();
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer54.getClass();
        boolean boolean60 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass59);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean64 = typeCircularBuffer63.isFull();
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer63.getClass();
        boolean boolean66 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type45 = typeCircularBuffer44.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type56 = typeCircularBuffer55.get();
        boolean boolean57 = typeCircularBuffer55.isFull();
        boolean boolean58 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer60.getClass();
        boolean boolean66 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass65);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer68.getClass();
        boolean boolean74 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean77 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean78 = typeCircularBuffer31.isEmpty();
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer31.getClass();
        boolean boolean80 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass79);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean83 = typeCircularBuffer82.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean86 = typeCircularBuffer85.isEmpty();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        boolean boolean89 = typeCircularBuffer85.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer85.getClass();
        boolean boolean91 = typeCircularBuffer82.put((java.lang.reflect.Type) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer82.getClass();
        boolean boolean93 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass92);
        java.lang.reflect.Type type94 = typeCircularBuffer1.get();
        java.lang.reflect.Type type95 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass96 = type95.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertNull(type95);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        boolean boolean26 = typeCircularBuffer1.isFull();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer40.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer40.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        boolean boolean50 = typeCircularBuffer1.isFull();
        boolean boolean51 = typeCircularBuffer1.isFull();
        boolean boolean52 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer14.get();
        boolean boolean27 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        boolean boolean31 = typeCircularBuffer29.isFull();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer29.getClass();
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer14.get();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer14.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isFull();
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        boolean boolean45 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer43.put(type53);
        boolean boolean55 = typeCircularBuffer43.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean58 = typeCircularBuffer57.isFull();
        boolean boolean59 = typeCircularBuffer57.isEmpty();
        boolean boolean60 = typeCircularBuffer57.isFull();
        java.lang.reflect.Type type61 = null;
        boolean boolean62 = typeCircularBuffer57.put(type61);
        boolean boolean63 = typeCircularBuffer57.isFull();
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer57.getClass();
        boolean boolean65 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type67 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type70 = typeCircularBuffer69.get();
        boolean boolean71 = typeCircularBuffer69.isFull();
        boolean boolean72 = typeCircularBuffer69.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass78);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean85 = typeCircularBuffer84.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer87 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer87.getClass();
        boolean boolean89 = typeCircularBuffer84.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.reflect.Type type90 = typeCircularBuffer84.get();
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer84.getClass();
        boolean boolean92 = typeCircularBuffer82.put((java.lang.reflect.Type) wildcardClass91);
        boolean boolean93 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass91);
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer69.getClass();
        boolean boolean95 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass94);
        boolean boolean96 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean19 = typeCircularBuffer18.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer23.getClass();
        boolean boolean27 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer21.getClass();
        boolean boolean29 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer7.put(type37);
        java.lang.reflect.Type type39 = typeCircularBuffer7.get();
        boolean boolean40 = typeCircularBuffer1.put(type39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean43 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer42.get();
        boolean boolean45 = typeCircularBuffer42.isEmpty();
        boolean boolean46 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer48.getClass();
        boolean boolean51 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass50);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean54 = typeCircularBuffer53.isFull();
        boolean boolean55 = typeCircularBuffer53.isEmpty();
        boolean boolean56 = typeCircularBuffer53.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean70 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type71 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass72 = type71.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        boolean boolean20 = typeCircularBuffer8.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer8.get();
        java.lang.reflect.Type type22 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer24.isEmpty();
        boolean boolean35 = typeCircularBuffer24.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass45);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer48.get();
        boolean boolean59 = typeCircularBuffer37.put(type58);
        boolean boolean60 = typeCircularBuffer24.put(type58);
        boolean boolean61 = typeCircularBuffer24.isEmpty();
        java.lang.reflect.Type type62 = typeCircularBuffer24.get();
        boolean boolean63 = typeCircularBuffer8.put(type62);
        boolean boolean64 = typeCircularBuffer1.put(type62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean67 = typeCircularBuffer66.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type70 = typeCircularBuffer69.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer74.get();
        boolean boolean81 = typeCircularBuffer72.put(type80);
        boolean boolean82 = typeCircularBuffer72.isFull();
        java.lang.reflect.Type type83 = typeCircularBuffer72.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean86 = typeCircularBuffer85.isEmpty();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        boolean boolean89 = typeCircularBuffer85.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean91 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean92 = typeCircularBuffer69.isEmpty();
        java.lang.Class<?> wildcardClass93 = typeCircularBuffer69.getClass();
        boolean boolean94 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass93);
        boolean boolean95 = typeCircularBuffer66.isFull();
        boolean boolean96 = typeCircularBuffer66.isEmpty();
        java.lang.reflect.Type type97 = typeCircularBuffer66.get();
        boolean boolean98 = typeCircularBuffer1.put(type97);
        boolean boolean99 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(type97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = type7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type35 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean42 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type43 = typeCircularBuffer41.get();
        boolean boolean44 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type45 = typeCircularBuffer41.get();
        boolean boolean46 = typeCircularBuffer41.isFull();
        boolean boolean47 = typeCircularBuffer41.isEmpty();
        boolean boolean48 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer41.getClass();
        boolean boolean50 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type52 = typeCircularBuffer11.get();
        boolean boolean53 = typeCircularBuffer1.put(type52);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer7.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        boolean boolean41 = typeCircularBuffer32.put(type40);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean44 = typeCircularBuffer43.isFull();
        boolean boolean45 = typeCircularBuffer43.isEmpty();
        java.lang.reflect.Type type46 = typeCircularBuffer43.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        boolean boolean57 = typeCircularBuffer48.put(type56);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer48.getClass();
        boolean boolean59 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean17 = typeCircularBuffer16.isFull();
        boolean boolean18 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean35 = typeCircularBuffer1.isFull();
        boolean boolean36 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type40 = typeCircularBuffer38.get();
        boolean boolean41 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer38.get();
        boolean boolean43 = typeCircularBuffer38.isFull();
        boolean boolean44 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean47 = typeCircularBuffer46.isFull();
        boolean boolean48 = typeCircularBuffer46.isEmpty();
        java.lang.reflect.Type type49 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        boolean boolean60 = typeCircularBuffer51.put(type59);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer51.getClass();
        boolean boolean62 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean63 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass61);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer38.getClass();
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        boolean boolean20 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean29 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type54 = typeCircularBuffer31.get();
        boolean boolean55 = typeCircularBuffer17.put(type54);
        boolean boolean56 = typeCircularBuffer12.put(type54);
        boolean boolean57 = typeCircularBuffer1.put(type54);
        java.lang.reflect.Type type58 = typeCircularBuffer1.get();
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNull(type59);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer13.isFull();
        boolean boolean20 = typeCircularBuffer13.isFull();
        boolean boolean21 = typeCircularBuffer13.isFull();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer13.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer10.getClass();
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        boolean boolean23 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        java.lang.reflect.Type type34 = null;
        boolean boolean35 = typeCircularBuffer1.put(type34);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 10);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean5 = typeCircularBuffer4.isFull();
        boolean boolean6 = typeCircularBuffer4.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer11.get();
        boolean boolean18 = typeCircularBuffer9.put(type17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer9.getClass();
        boolean boolean20 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean45 = typeCircularBuffer1.isFull();
        boolean boolean46 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        boolean boolean48 = typeCircularBuffer1.isFull();
        boolean boolean49 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer33.isEmpty();
        java.lang.reflect.Type type40 = typeCircularBuffer33.get();
        boolean boolean41 = typeCircularBuffer1.put(type40);
        boolean boolean42 = typeCircularBuffer1.isFull();
        boolean boolean43 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        boolean boolean26 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean8 = typeCircularBuffer7.isFull();
        boolean boolean9 = typeCircularBuffer7.isEmpty();
        boolean boolean10 = typeCircularBuffer7.isFull();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer7.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer16.get();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        java.lang.reflect.Type type20 = typeCircularBuffer16.get();
        boolean boolean21 = typeCircularBuffer16.isFull();
        boolean boolean22 = typeCircularBuffer16.isFull();
        boolean boolean23 = typeCircularBuffer16.isFull();
        boolean boolean24 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isFull();
        boolean boolean30 = typeCircularBuffer26.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer26.get();
        boolean boolean32 = typeCircularBuffer26.isEmpty();
        boolean boolean33 = typeCircularBuffer26.isEmpty();
        boolean boolean34 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type37 = typeCircularBuffer36.get();
        boolean boolean38 = typeCircularBuffer36.isFull();
        boolean boolean39 = typeCircularBuffer36.isFull();
        boolean boolean40 = typeCircularBuffer36.isFull();
        boolean boolean41 = typeCircularBuffer36.isFull();
        boolean boolean42 = typeCircularBuffer36.isFull();
        boolean boolean43 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type44 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer46.get();
        boolean boolean49 = typeCircularBuffer46.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type52 = typeCircularBuffer51.get();
        boolean boolean53 = typeCircularBuffer51.isFull();
        boolean boolean54 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer56.getClass();
        boolean boolean62 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass61);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer64.getClass();
        boolean boolean70 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean72 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean73 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean74 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean75 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        boolean boolean37 = typeCircularBuffer27.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type73 = typeCircularBuffer27.get();
        boolean boolean74 = typeCircularBuffer1.put(type73);
        boolean boolean75 = typeCircularBuffer1.isEmpty();
        boolean boolean76 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean79 = typeCircularBuffer78.isFull();
        boolean boolean80 = typeCircularBuffer78.isEmpty();
        java.lang.reflect.Type type81 = typeCircularBuffer78.get();
        boolean boolean82 = typeCircularBuffer78.isEmpty();
        java.lang.reflect.Type type83 = typeCircularBuffer78.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) '4');
        java.lang.Class<?> wildcardClass86 = wildcardClassOfFieldCircularBuffer85.getClass();
        boolean boolean87 = typeCircularBuffer78.put((java.lang.reflect.Type) wildcardClass86);
        java.lang.reflect.Type type88 = typeCircularBuffer78.get();
        java.lang.reflect.Type type89 = typeCircularBuffer78.get();
        boolean boolean90 = typeCircularBuffer78.isEmpty();
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer78.getClass();
        boolean boolean92 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass91);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(type81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(type83);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNull(type89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer6.getClass();
        boolean boolean10 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer4.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        boolean boolean24 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type25 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer14.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        boolean boolean39 = typeCircularBuffer36.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer14.getClass();
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = null;
        boolean boolean56 = typeCircularBuffer1.put(type55);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer4.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean13 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        boolean boolean28 = typeCircularBuffer18.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean38 = typeCircularBuffer15.isEmpty();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer15.getClass();
        boolean boolean40 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean43 = typeCircularBuffer42.isFull();
        boolean boolean44 = typeCircularBuffer42.isEmpty();
        boolean boolean45 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        boolean boolean69 = typeCircularBuffer60.put(type68);
        boolean boolean70 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type78 = typeCircularBuffer72.get();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        boolean boolean81 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer86.getClass();
        boolean boolean88 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass87);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer83.getClass();
        boolean boolean90 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean92 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean93 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean94 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass89);
        java.lang.reflect.Type type95 = typeCircularBuffer1.get();
        boolean boolean96 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type97 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(type97);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        boolean boolean59 = typeCircularBuffer1.isFull();
        boolean boolean60 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer15.get();
        boolean boolean35 = typeCircularBuffer1.put(type34);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        boolean boolean42 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        boolean boolean33 = typeCircularBuffer9.put(type31);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer9.getClass();
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        java.lang.reflect.Type type38 = typeCircularBuffer1.get();
        boolean boolean39 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        boolean boolean26 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer28.getClass();
        boolean boolean34 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean38 = typeCircularBuffer37.isFull();
        boolean boolean39 = typeCircularBuffer37.isEmpty();
        java.lang.reflect.Type type40 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer42.getClass();
        boolean boolean53 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean59 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type60 = typeCircularBuffer58.get();
        boolean boolean61 = typeCircularBuffer58.isEmpty();
        boolean boolean62 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer64.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type69 = typeCircularBuffer1.get();
        boolean boolean70 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type71 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>(0);
        java.lang.Class<?> wildcardClass74 = annotatedElementCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type14 = typeCircularBuffer13.get();
        boolean boolean15 = typeCircularBuffer13.isFull();
        boolean boolean16 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer18.getClass();
        boolean boolean24 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        boolean boolean37 = typeCircularBuffer13.put(type35);
        java.lang.reflect.Type type38 = null;
        boolean boolean39 = typeCircularBuffer13.put(type38);
        boolean boolean40 = typeCircularBuffer13.isEmpty();
        boolean boolean41 = typeCircularBuffer13.isFull();
        boolean boolean42 = typeCircularBuffer13.isEmpty();
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer13.getClass();
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        java.lang.reflect.Type type40 = typeCircularBuffer30.get();
        java.lang.reflect.Type type41 = null;
        boolean boolean42 = typeCircularBuffer30.put(type41);
        boolean boolean43 = typeCircularBuffer30.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer30.getClass();
        boolean boolean45 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.isFull();
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        boolean boolean49 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(type50);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer14.get();
        boolean boolean27 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        boolean boolean31 = typeCircularBuffer29.isFull();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer29.getClass();
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer14.get();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer14.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isFull();
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        boolean boolean45 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer43.put(type53);
        boolean boolean55 = typeCircularBuffer43.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean58 = typeCircularBuffer57.isFull();
        boolean boolean59 = typeCircularBuffer57.isEmpty();
        boolean boolean60 = typeCircularBuffer57.isFull();
        java.lang.reflect.Type type61 = null;
        boolean boolean62 = typeCircularBuffer57.put(type61);
        boolean boolean63 = typeCircularBuffer57.isFull();
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer57.getClass();
        boolean boolean65 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean67 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean11 = typeCircularBuffer10.isFull();
        boolean boolean12 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type13 = typeCircularBuffer10.get();
        boolean boolean14 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) '4');
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer10.get();
        boolean boolean21 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        boolean boolean26 = typeCircularBuffer23.isFull();
        boolean boolean27 = typeCircularBuffer23.isEmpty();
        boolean boolean28 = typeCircularBuffer23.isEmpty();
        boolean boolean29 = typeCircularBuffer23.isEmpty();
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer23.getClass();
        boolean boolean31 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        boolean boolean35 = typeCircularBuffer33.isEmpty();
        boolean boolean36 = typeCircularBuffer33.isFull();
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer33.getClass();
        boolean boolean38 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer10.get();
        boolean boolean40 = typeCircularBuffer1.put(type39);
        boolean boolean41 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean22 = typeCircularBuffer21.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer21.get();
        boolean boolean24 = typeCircularBuffer21.isEmpty();
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer21.getClass();
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean30 = typeCircularBuffer29.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer29.get();
        boolean boolean32 = typeCircularBuffer29.isFull();
        boolean boolean33 = typeCircularBuffer29.isFull();
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer8.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer7.put(type37);
        java.lang.reflect.Type type39 = typeCircularBuffer7.get();
        boolean boolean40 = typeCircularBuffer1.put(type39);
        boolean boolean41 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type42 = typeCircularBuffer1.get();
        boolean boolean43 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type44 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(type44);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer40.getClass();
        boolean boolean47 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer29.get();
        boolean boolean49 = typeCircularBuffer1.put(type48);
        boolean boolean50 = typeCircularBuffer1.isFull();
        boolean boolean51 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        boolean boolean6 = typeCircularBuffer4.isFull();
        boolean boolean7 = typeCircularBuffer4.isFull();
        boolean boolean8 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer4.get();
        boolean boolean10 = typeCircularBuffer4.isEmpty();
        java.lang.reflect.Type type11 = typeCircularBuffer4.get();
        java.lang.reflect.Type type12 = typeCircularBuffer4.get();
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer4.getClass();
        boolean boolean14 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        boolean boolean20 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer17.get();
        boolean boolean22 = typeCircularBuffer17.isFull();
        boolean boolean23 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = typeCircularBuffer25.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        boolean boolean50 = typeCircularBuffer40.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean63 = typeCircularBuffer40.isEmpty();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean68 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass65);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        boolean boolean72 = typeCircularBuffer70.isFull();
        java.lang.reflect.Type type73 = typeCircularBuffer70.get();
        boolean boolean74 = typeCircularBuffer70.isFull();
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer70.getClass();
        boolean boolean76 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass75);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean80 = typeCircularBuffer79.isFull();
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer79.getClass();
        boolean boolean82 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type29 = typeCircularBuffer28.get();
        boolean boolean30 = typeCircularBuffer28.isFull();
        boolean boolean31 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer33.getClass();
        boolean boolean39 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer28.get();
        boolean boolean41 = typeCircularBuffer28.isFull();
        boolean boolean42 = typeCircularBuffer28.isEmpty();
        boolean boolean43 = typeCircularBuffer28.isEmpty();
        boolean boolean44 = typeCircularBuffer28.isFull();
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer28.getClass();
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        boolean boolean48 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer30.getClass();
        boolean boolean36 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean48 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean5 = typeCircularBuffer4.isFull();
        boolean boolean6 = typeCircularBuffer4.isEmpty();
        boolean boolean7 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer33.getClass();
        boolean boolean40 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer22.get();
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer22.getClass();
        boolean boolean43 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        boolean boolean55 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer60.getClass();
        boolean boolean62 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.reflect.Type type63 = typeCircularBuffer57.get();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean68 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type71 = typeCircularBuffer70.get();
        boolean boolean72 = typeCircularBuffer70.isFull();
        boolean boolean73 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        boolean boolean79 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer75.getClass();
        boolean boolean81 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        boolean boolean87 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass86);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer83.getClass();
        boolean boolean89 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass88);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer92 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass93 = typeCircularBuffer92.getClass();
        boolean boolean94 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass93);
        java.lang.Class<?> wildcardClass95 = typeCircularBuffer45.getClass();
        boolean boolean96 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass95);
        java.lang.reflect.Type type97 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(type97);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        java.lang.reflect.Type type11 = typeCircularBuffer8.get();
        java.lang.reflect.Type type12 = typeCircularBuffer8.get();
        java.lang.reflect.Type type13 = typeCircularBuffer8.get();
        boolean boolean14 = typeCircularBuffer8.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        boolean boolean27 = typeCircularBuffer17.isEmpty();
        boolean boolean28 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer41.get();
        boolean boolean52 = typeCircularBuffer30.put(type51);
        boolean boolean53 = typeCircularBuffer17.put(type51);
        boolean boolean54 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type55 = typeCircularBuffer17.get();
        boolean boolean56 = typeCircularBuffer8.put(type55);
        boolean boolean57 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type58 = typeCircularBuffer8.get();
        boolean boolean59 = typeCircularBuffer1.put(type58);
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        java.lang.reflect.Type type61 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNull(type61);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isEmpty();
        boolean boolean44 = typeCircularBuffer1.isEmpty();
        boolean boolean45 = typeCircularBuffer1.isFull();
        boolean boolean46 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = type7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        boolean boolean19 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean24 = typeCircularBuffer23.isFull();
        boolean boolean25 = typeCircularBuffer23.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer23.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer28.getClass();
        boolean boolean39 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass38);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type43 = typeCircularBuffer42.get();
        boolean boolean44 = typeCircularBuffer42.isFull();
        boolean boolean45 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer47.getClass();
        boolean boolean53 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean57 = typeCircularBuffer56.isFull();
        boolean boolean58 = typeCircularBuffer56.isEmpty();
        java.lang.reflect.Type type59 = typeCircularBuffer56.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer63.get();
        boolean boolean70 = typeCircularBuffer61.put(type69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer61.getClass();
        boolean boolean72 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer42.getClass();
        boolean boolean75 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer21.isEmpty();
        boolean boolean77 = typeCircularBuffer21.isFull();
        boolean boolean78 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean81 = typeCircularBuffer80.isFull();
        java.lang.reflect.Type type82 = typeCircularBuffer80.get();
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer80.getClass();
        boolean boolean84 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean85 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(type82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean30 = typeCircularBuffer29.isFull();
        boolean boolean31 = typeCircularBuffer29.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer29.get();
        boolean boolean33 = typeCircularBuffer29.isEmpty();
        boolean boolean34 = typeCircularBuffer29.isEmpty();
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer29.getClass();
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer42.isEmpty();
        boolean boolean49 = typeCircularBuffer42.isFull();
        boolean boolean50 = typeCircularBuffer42.isFull();
        boolean boolean51 = typeCircularBuffer42.isFull();
        boolean boolean52 = typeCircularBuffer42.isEmpty();
        boolean boolean53 = typeCircularBuffer42.isEmpty();
        java.lang.reflect.Type type54 = typeCircularBuffer42.get();
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer42.getClass();
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer1.get();
        boolean boolean45 = typeCircularBuffer1.isFull();
        boolean boolean46 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer11.get();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer22.getClass();
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        boolean boolean32 = typeCircularBuffer1.isFull();
        boolean boolean33 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.reflect.Type type19 = null;
        boolean boolean20 = typeCircularBuffer1.put(type19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer25.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean45 = typeCircularBuffer22.isEmpty();
        boolean boolean46 = typeCircularBuffer22.isFull();
        boolean boolean47 = typeCircularBuffer22.isEmpty();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer22.getClass();
        boolean boolean49 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer24.getClass();
        boolean boolean30 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass29);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer32.getClass();
        boolean boolean38 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer40.getClass();
        boolean boolean51 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer19.getClass();
        boolean boolean53 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type56 = typeCircularBuffer55.get();
        boolean boolean57 = typeCircularBuffer55.isFull();
        boolean boolean58 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer60.getClass();
        boolean boolean66 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type67 = typeCircularBuffer55.get();
        boolean boolean68 = typeCircularBuffer55.isFull();
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer55.getClass();
        boolean boolean70 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer14.getClass();
        boolean boolean72 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type75 = typeCircularBuffer74.get();
        boolean boolean76 = typeCircularBuffer74.isFull();
        boolean boolean77 = typeCircularBuffer74.isEmpty();
        boolean boolean78 = typeCircularBuffer74.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer80.getClass();
        boolean boolean82 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass81);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean85 = typeCircularBuffer84.isFull();
        boolean boolean86 = typeCircularBuffer84.isEmpty();
        boolean boolean87 = typeCircularBuffer84.isFull();
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer84.getClass();
        boolean boolean89 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.reflect.Type type90 = typeCircularBuffer74.get();
        java.lang.reflect.Type type91 = typeCircularBuffer74.get();
        java.lang.reflect.Type type92 = typeCircularBuffer74.get();
        boolean boolean93 = typeCircularBuffer74.isFull();
        boolean boolean94 = typeCircularBuffer74.isEmpty();
        java.lang.Class<?> wildcardClass95 = typeCircularBuffer74.getClass();
        boolean boolean96 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass95);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNull(type91);
        org.junit.Assert.assertNull(type92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer23.getClass();
        boolean boolean29 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer31.getClass();
        boolean boolean42 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type45 = typeCircularBuffer44.get();
        boolean boolean46 = typeCircularBuffer44.isFull();
        boolean boolean47 = typeCircularBuffer44.isFull();
        boolean boolean48 = typeCircularBuffer44.isEmpty();
        boolean boolean49 = typeCircularBuffer44.isEmpty();
        boolean boolean50 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = null;
        boolean boolean59 = typeCircularBuffer52.put(type58);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer63.get();
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer63.getClass();
        boolean boolean71 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean73 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean74 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type75 = typeCircularBuffer10.get();
        java.lang.Class<?> wildcardClass76 = type75.getClass();
        boolean boolean77 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean78 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean30 = typeCircularBuffer29.isFull();
        boolean boolean31 = typeCircularBuffer29.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer29.get();
        boolean boolean33 = typeCircularBuffer29.isEmpty();
        boolean boolean34 = typeCircularBuffer29.isEmpty();
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer29.getClass();
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        boolean boolean42 = typeCircularBuffer40.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type45 = typeCircularBuffer44.get();
        boolean boolean46 = typeCircularBuffer44.isFull();
        boolean boolean47 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer49.getClass();
        boolean boolean55 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer44.get();
        boolean boolean57 = typeCircularBuffer44.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer59.isEmpty();
        java.lang.reflect.Type type66 = typeCircularBuffer59.get();
        boolean boolean67 = typeCircularBuffer44.put(type66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type70 = typeCircularBuffer69.get();
        boolean boolean71 = typeCircularBuffer69.isFull();
        boolean boolean72 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer74.getClass();
        boolean boolean80 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass79);
        java.lang.reflect.Type type81 = typeCircularBuffer69.get();
        boolean boolean82 = typeCircularBuffer69.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type85 = typeCircularBuffer84.get();
        boolean boolean86 = typeCircularBuffer84.isFull();
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer84.getClass();
        boolean boolean88 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean91 = typeCircularBuffer40.isEmpty();
        java.lang.reflect.Type type92 = typeCircularBuffer40.get();
        boolean boolean93 = typeCircularBuffer1.put(type92);
        boolean boolean94 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer11.getClass();
        boolean boolean22 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean31 = typeCircularBuffer30.isFull();
        boolean boolean32 = typeCircularBuffer30.isEmpty();
        java.lang.reflect.Type type33 = typeCircularBuffer30.get();
        boolean boolean34 = typeCircularBuffer30.isEmpty();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer30.isEmpty();
        boolean boolean39 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type40 = typeCircularBuffer30.get();
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer30.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isFull();
        boolean boolean44 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        boolean boolean46 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean49 = typeCircularBuffer48.isFull();
        boolean boolean50 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer52.get();
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer52.getClass();
        boolean boolean66 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        boolean boolean17 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        boolean boolean9 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer11.getClass();
        boolean boolean17 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean29 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer28.get();
        boolean boolean31 = typeCircularBuffer28.isFull();
        boolean boolean32 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        java.lang.reflect.Type type36 = typeCircularBuffer34.get();
        java.lang.reflect.Type type37 = typeCircularBuffer34.get();
        java.lang.reflect.Type type38 = typeCircularBuffer34.get();
        boolean boolean39 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean42 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type43 = typeCircularBuffer41.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer45.getClass();
        boolean boolean51 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass50);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        boolean boolean65 = typeCircularBuffer56.put(type64);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.reflect.Type type75 = typeCircularBuffer69.get();
        boolean boolean76 = typeCircularBuffer67.put(type75);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer67.getClass();
        boolean boolean78 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean80 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean81 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type82 = typeCircularBuffer28.get();
        boolean boolean83 = typeCircularBuffer1.put(type82);
        boolean boolean84 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type13);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer19.get();
        boolean boolean31 = typeCircularBuffer19.isEmpty();
        boolean boolean32 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        boolean boolean44 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type57 = typeCircularBuffer34.get();
        boolean boolean58 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        boolean boolean62 = typeCircularBuffer60.isFull();
        boolean boolean63 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type72 = typeCircularBuffer60.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean77 = typeCircularBuffer76.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer79.getClass();
        boolean boolean81 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = typeCircularBuffer76.get();
        boolean boolean83 = typeCircularBuffer74.put(type82);
        boolean boolean84 = typeCircularBuffer60.put(type82);
        java.lang.reflect.Type type85 = typeCircularBuffer60.get();
        boolean boolean86 = typeCircularBuffer34.put(type85);
        boolean boolean87 = typeCircularBuffer19.put(type85);
        boolean boolean88 = typeCircularBuffer1.put(type85);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type44 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type47 = typeCircularBuffer46.get();
        boolean boolean48 = typeCircularBuffer46.isFull();
        boolean boolean49 = typeCircularBuffer46.isFull();
        boolean boolean50 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type51 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type54 = typeCircularBuffer53.get();
        boolean boolean55 = typeCircularBuffer53.isFull();
        boolean boolean56 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer58.getClass();
        boolean boolean64 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass63);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer66.getClass();
        boolean boolean72 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass71);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean77 = typeCircularBuffer76.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer79.getClass();
        boolean boolean81 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = typeCircularBuffer76.get();
        boolean boolean83 = typeCircularBuffer74.put(type82);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer74.getClass();
        boolean boolean85 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.Class<?> wildcardClass86 = typeCircularBuffer53.getClass();
        boolean boolean87 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass86);
        boolean boolean88 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass86);
        java.lang.reflect.Type type89 = typeCircularBuffer1.get();
        boolean boolean90 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer12.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer19.get();
        boolean boolean31 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer19.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        boolean boolean36 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer34.get();
        boolean boolean38 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        boolean boolean50 = typeCircularBuffer40.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean63 = typeCircularBuffer40.isEmpty();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean68 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type69 = typeCircularBuffer19.get();
        boolean boolean70 = typeCircularBuffer1.put(type69);
        boolean boolean71 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer6.get();
        boolean boolean14 = typeCircularBuffer1.put(type13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer19.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean14 = typeCircularBuffer13.isFull();
        boolean boolean15 = typeCircularBuffer13.isEmpty();
        boolean boolean16 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean29 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer10.getClass();
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean34 = typeCircularBuffer33.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer33.get();
        boolean boolean36 = typeCircularBuffer33.isFull();
        boolean boolean37 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type40 = typeCircularBuffer39.get();
        boolean boolean41 = typeCircularBuffer39.isFull();
        boolean boolean42 = typeCircularBuffer39.isEmpty();
        boolean boolean43 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean50 = typeCircularBuffer49.isFull();
        boolean boolean51 = typeCircularBuffer49.isEmpty();
        boolean boolean52 = typeCircularBuffer49.isFull();
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer49.getClass();
        boolean boolean54 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer39.get();
        boolean boolean56 = typeCircularBuffer33.put(type55);
        java.lang.reflect.Type type57 = typeCircularBuffer33.get();
        boolean boolean58 = typeCircularBuffer1.put(type57);
        java.lang.Class<?> wildcardClass59 = type57.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = null;
        boolean boolean26 = typeCircularBuffer1.put(type25);
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer40.getClass();
        boolean boolean51 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer29.isFull();
        boolean boolean53 = typeCircularBuffer29.isFull();
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer29.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        boolean boolean66 = typeCircularBuffer57.put(type65);
        boolean boolean67 = typeCircularBuffer57.isFull();
        java.lang.reflect.Type type68 = typeCircularBuffer57.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        boolean boolean74 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.reflect.Type type76 = typeCircularBuffer57.get();
        boolean boolean77 = typeCircularBuffer1.put(type76);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        boolean boolean48 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer46.get();
        boolean boolean50 = typeCircularBuffer46.isFull();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer1.isFull();
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass56 = type55.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        boolean boolean10 = typeCircularBuffer8.isEmpty();
        boolean boolean11 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        boolean boolean24 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type40 = typeCircularBuffer39.get();
        boolean boolean41 = typeCircularBuffer39.isFull();
        boolean boolean42 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer44.getClass();
        boolean boolean50 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer14.getClass();
        boolean boolean61 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type63 = typeCircularBuffer1.get();
        boolean boolean64 = typeCircularBuffer1.isEmpty();
        boolean boolean65 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        boolean boolean32 = typeCircularBuffer22.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean42 = typeCircularBuffer15.isFull();
        boolean boolean43 = typeCircularBuffer15.isFull();
        boolean boolean44 = typeCircularBuffer15.isEmpty();
        boolean boolean45 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type46 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        boolean boolean57 = typeCircularBuffer48.put(type56);
        boolean boolean58 = typeCircularBuffer48.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.reflect.Type type71 = typeCircularBuffer48.get();
        boolean boolean72 = typeCircularBuffer15.put(type71);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer74.get();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        boolean boolean83 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean84 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean85 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean86 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass82);
        java.lang.reflect.Type type87 = typeCircularBuffer1.get();
        boolean boolean88 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        boolean boolean15 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean8 = typeCircularBuffer7.isFull();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer7.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = type12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNull(type12);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer12.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        boolean boolean23 = typeCircularBuffer1.isFull();
        boolean boolean24 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer6.get();
        boolean boolean14 = typeCircularBuffer1.put(type13);
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        boolean boolean17 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer44.getClass();
        boolean boolean55 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer33.isFull();
        boolean boolean57 = typeCircularBuffer33.isFull();
        java.lang.reflect.Type type58 = typeCircularBuffer33.get();
        java.lang.Class<?> wildcardClass59 = type58.getClass();
        boolean boolean60 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type41 = typeCircularBuffer40.get();
        boolean boolean42 = typeCircularBuffer40.isFull();
        boolean boolean43 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer45.getClass();
        boolean boolean51 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        boolean boolean63 = typeCircularBuffer54.put(type62);
        boolean boolean64 = typeCircularBuffer40.put(type62);
        java.lang.reflect.Type type65 = typeCircularBuffer40.get();
        boolean boolean66 = typeCircularBuffer1.put(type65);
        java.lang.Class<?> wildcardClass67 = type65.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer1.put(type11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isEmpty();
        boolean boolean18 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type19 = null;
        boolean boolean20 = typeCircularBuffer15.put(type19);
        boolean boolean21 = typeCircularBuffer15.isFull();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer15.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass25 = type24.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer7.get();
        boolean boolean14 = typeCircularBuffer5.put(type13);
        java.lang.reflect.Type type15 = typeCircularBuffer5.get();
        java.lang.reflect.Type type16 = null;
        boolean boolean17 = typeCircularBuffer5.put(type16);
        boolean boolean18 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer22.getClass();
        boolean boolean26 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type37 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        boolean boolean48 = typeCircularBuffer39.put(type47);
        boolean boolean49 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type50 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type59 = typeCircularBuffer36.get();
        boolean boolean60 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type61 = typeCircularBuffer36.get();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer36.getClass();
        boolean boolean63 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer10.get();
        java.lang.reflect.Type type13 = typeCircularBuffer10.get();
        java.lang.reflect.Type type14 = typeCircularBuffer10.get();
        boolean boolean15 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        boolean boolean20 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer17.isFull();
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer17.getClass();
        boolean boolean35 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type38 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(type38);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean11 = typeCircularBuffer10.isFull();
        boolean boolean12 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type13 = typeCircularBuffer10.get();
        boolean boolean14 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) '4');
        java.lang.Class<?> wildcardClass18 = wildcardClassOfFieldCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer10.get();
        boolean boolean21 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        boolean boolean26 = typeCircularBuffer23.isFull();
        boolean boolean27 = typeCircularBuffer23.isEmpty();
        boolean boolean28 = typeCircularBuffer23.isEmpty();
        boolean boolean29 = typeCircularBuffer23.isEmpty();
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer23.getClass();
        boolean boolean31 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        boolean boolean35 = typeCircularBuffer33.isEmpty();
        boolean boolean36 = typeCircularBuffer33.isFull();
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer33.getClass();
        boolean boolean38 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer10.get();
        boolean boolean40 = typeCircularBuffer1.put(type39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean7 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer6.get();
        boolean boolean9 = typeCircularBuffer6.isEmpty();
        boolean boolean10 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer12.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        boolean boolean20 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type34 = typeCircularBuffer6.get();
        boolean boolean35 = typeCircularBuffer1.put(type34);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type48 = typeCircularBuffer47.get();
        boolean boolean49 = typeCircularBuffer47.isFull();
        boolean boolean50 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass57);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer60.getClass();
        boolean boolean66 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type68 = typeCircularBuffer39.get();
        boolean boolean69 = typeCircularBuffer1.put(type68);
        java.lang.reflect.Type type70 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer74.get();
        boolean boolean81 = typeCircularBuffer72.put(type80);
        boolean boolean82 = typeCircularBuffer72.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean85 = typeCircularBuffer84.isEmpty();
        boolean boolean86 = typeCircularBuffer84.isFull();
        java.lang.reflect.Type type87 = typeCircularBuffer84.get();
        boolean boolean88 = typeCircularBuffer84.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer90 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean91 = typeCircularBuffer90.isFull();
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer90.getClass();
        boolean boolean93 = typeCircularBuffer84.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean94 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass92);
        java.lang.reflect.Type type95 = typeCircularBuffer72.get();
        java.lang.Class<?> wildcardClass96 = typeCircularBuffer72.getClass();
        boolean boolean97 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass96);
        java.lang.Class<?> wildcardClass98 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(type87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        boolean boolean39 = typeCircularBuffer37.isFull();
        boolean boolean40 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer42.getClass();
        boolean boolean48 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass47);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer50.getClass();
        boolean boolean56 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type58 = typeCircularBuffer29.get();
        java.lang.reflect.Type type59 = typeCircularBuffer29.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer61.isEmpty();
        java.lang.reflect.Type type68 = typeCircularBuffer61.get();
        boolean boolean69 = typeCircularBuffer29.put(type68);
        java.lang.reflect.Type type70 = typeCircularBuffer29.get();
        boolean boolean71 = typeCircularBuffer1.put(type70);
        java.lang.Class<?> wildcardClass72 = type70.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        boolean boolean21 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        boolean boolean32 = typeCircularBuffer8.isFull();
        boolean boolean33 = typeCircularBuffer8.isFull();
        boolean boolean34 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        boolean boolean39 = typeCircularBuffer36.isEmpty();
        boolean boolean40 = typeCircularBuffer36.isFull();
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer36.getClass();
        boolean boolean42 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isFull();
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean40 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer39.get();
        boolean boolean42 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type43 = typeCircularBuffer39.get();
        java.lang.reflect.Type type44 = typeCircularBuffer39.get();
        boolean boolean45 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type46 = typeCircularBuffer39.get();
        java.lang.reflect.Type type47 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type52 = typeCircularBuffer51.get();
        boolean boolean53 = typeCircularBuffer51.isFull();
        boolean boolean54 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer56.getClass();
        boolean boolean62 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean63 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean66 = typeCircularBuffer65.isFull();
        boolean boolean67 = typeCircularBuffer65.isEmpty();
        java.lang.reflect.Type type68 = typeCircularBuffer65.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type78 = typeCircularBuffer72.get();
        boolean boolean79 = typeCircularBuffer70.put(type78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer70.getClass();
        boolean boolean81 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean82 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean83 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean84 = typeCircularBuffer49.isFull();
        java.lang.reflect.Type type85 = typeCircularBuffer49.get();
        java.lang.Class<?> wildcardClass86 = typeCircularBuffer49.getClass();
        boolean boolean87 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass86);
        boolean boolean88 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(type85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer12.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isFull();
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean24 = typeCircularBuffer23.isFull();
        boolean boolean25 = typeCircularBuffer23.isEmpty();
        boolean boolean26 = typeCircularBuffer23.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer23.isFull();
        java.lang.reflect.Type type40 = typeCircularBuffer23.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean43 = typeCircularBuffer42.isFull();
        boolean boolean44 = typeCircularBuffer42.isEmpty();
        boolean boolean45 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        boolean boolean69 = typeCircularBuffer60.put(type68);
        boolean boolean70 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type78 = typeCircularBuffer72.get();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        boolean boolean81 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer86.getClass();
        boolean boolean88 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass87);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer83.getClass();
        boolean boolean90 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean92 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean93 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean94 = typeCircularBuffer23.isFull();
        java.lang.reflect.Type type95 = typeCircularBuffer23.get();
        java.lang.Class<?> wildcardClass96 = typeCircularBuffer23.getClass();
        boolean boolean97 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass96);
        boolean boolean98 = typeCircularBuffer1.isEmpty();
        boolean boolean99 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        boolean boolean16 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer14.get();
        boolean boolean18 = typeCircularBuffer14.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer11.getClass();
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer12.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNull(type22);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer7.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.isFull();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type40 = typeCircularBuffer39.get();
        boolean boolean41 = typeCircularBuffer39.isFull();
        boolean boolean42 = typeCircularBuffer39.isFull();
        boolean boolean43 = typeCircularBuffer39.isEmpty();
        boolean boolean44 = typeCircularBuffer39.isEmpty();
        boolean boolean45 = typeCircularBuffer39.isEmpty();
        boolean boolean46 = typeCircularBuffer39.isFull();
        boolean boolean47 = typeCircularBuffer39.isFull();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer39.getClass();
        boolean boolean49 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer11.get();
        boolean boolean18 = typeCircularBuffer9.put(type17);
        java.lang.reflect.Type type19 = typeCircularBuffer9.get();
        boolean boolean20 = typeCircularBuffer9.isFull();
        boolean boolean21 = typeCircularBuffer9.isEmpty();
        boolean boolean22 = typeCircularBuffer9.isFull();
        boolean boolean23 = typeCircularBuffer9.isEmpty();
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer9.getClass();
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        java.lang.reflect.Type type61 = typeCircularBuffer1.get();
        java.lang.reflect.Type type62 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNull(type62);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer1.put(type11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer26.put(type34);
        boolean boolean36 = typeCircularBuffer26.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer26.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass50);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type55 = typeCircularBuffer54.get();
        boolean boolean56 = typeCircularBuffer54.isFull();
        boolean boolean57 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer59.getClass();
        boolean boolean65 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer54.isEmpty();
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer54.getClass();
        boolean boolean68 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        boolean boolean15 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer12.get();
        boolean boolean17 = typeCircularBuffer12.isFull();
        boolean boolean18 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean21 = typeCircularBuffer20.isFull();
        boolean boolean22 = typeCircularBuffer20.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer25.getClass();
        boolean boolean36 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = typeCircularBuffer12.isEmpty();
        boolean boolean39 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.reflect.Type type51 = typeCircularBuffer41.get();
        java.lang.reflect.Type type52 = null;
        boolean boolean53 = typeCircularBuffer41.put(type52);
        boolean boolean54 = typeCircularBuffer41.isEmpty();
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer41.getClass();
        boolean boolean56 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer12.getClass();
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean62 = typeCircularBuffer61.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer61.get();
        boolean boolean64 = typeCircularBuffer61.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer66.getClass();
        boolean boolean69 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass68);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        boolean boolean73 = typeCircularBuffer71.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type76 = typeCircularBuffer75.get();
        boolean boolean77 = typeCircularBuffer75.isFull();
        boolean boolean78 = typeCircularBuffer75.isFull();
        boolean boolean79 = typeCircularBuffer75.isEmpty();
        java.lang.reflect.Type type80 = typeCircularBuffer75.get();
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer75.getClass();
        boolean boolean82 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer61.getClass();
        boolean boolean85 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.reflect.Type type86 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(type86);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer8.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer8.get();
        boolean boolean21 = typeCircularBuffer1.put(type20);
        boolean boolean22 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isEmpty();
        boolean boolean29 = typeCircularBuffer25.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean36 = typeCircularBuffer35.isFull();
        boolean boolean37 = typeCircularBuffer35.isEmpty();
        boolean boolean38 = typeCircularBuffer35.isFull();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer35.getClass();
        boolean boolean40 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        boolean boolean52 = typeCircularBuffer43.put(type51);
        boolean boolean53 = typeCircularBuffer43.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer55.get();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass63);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer70.getClass();
        boolean boolean72 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type73 = typeCircularBuffer67.get();
        boolean boolean74 = typeCircularBuffer43.put(type73);
        java.lang.reflect.Type type75 = typeCircularBuffer43.get();
        boolean boolean76 = typeCircularBuffer25.put(type75);
        boolean boolean77 = typeCircularBuffer25.isFull();
        java.lang.reflect.Type type78 = typeCircularBuffer25.get();
        boolean boolean79 = typeCircularBuffer1.put(type78);
        java.lang.reflect.Type type80 = typeCircularBuffer1.get();
        java.lang.reflect.Type type81 = typeCircularBuffer1.get();
        boolean boolean82 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNull(type81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer8.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Class<?>> wildcardClassCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Class<?>>((int) '#');
        java.lang.Class<?> wildcardClass14 = wildcardClassCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isFull();
        boolean boolean15 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer11.get();
        boolean boolean17 = typeCircularBuffer11.isEmpty();
        boolean boolean18 = typeCircularBuffer11.isEmpty();
        boolean boolean19 = typeCircularBuffer11.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type22 = typeCircularBuffer21.get();
        boolean boolean23 = typeCircularBuffer21.isFull();
        boolean boolean24 = typeCircularBuffer21.isFull();
        boolean boolean25 = typeCircularBuffer21.isFull();
        boolean boolean26 = typeCircularBuffer21.isFull();
        boolean boolean27 = typeCircularBuffer21.isFull();
        boolean boolean28 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type29 = typeCircularBuffer21.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.reflect.Type type33 = typeCircularBuffer31.get();
        boolean boolean34 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type37 = typeCircularBuffer36.get();
        boolean boolean38 = typeCircularBuffer36.isFull();
        boolean boolean39 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer41.getClass();
        boolean boolean47 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer49.getClass();
        boolean boolean55 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean58 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean59 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        boolean boolean61 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        boolean boolean36 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer49.getClass();
        boolean boolean56 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer38.getClass();
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type62 = typeCircularBuffer61.get();
        java.lang.reflect.Type type63 = typeCircularBuffer61.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer70.getClass();
        boolean boolean72 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type73 = typeCircularBuffer67.get();
        boolean boolean74 = typeCircularBuffer65.put(type73);
        java.lang.reflect.Type type75 = typeCircularBuffer65.get();
        java.lang.reflect.Type type76 = null;
        boolean boolean77 = typeCircularBuffer65.put(type76);
        boolean boolean78 = typeCircularBuffer65.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type83 = typeCircularBuffer82.get();
        boolean boolean84 = typeCircularBuffer82.isFull();
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer82.getClass();
        boolean boolean86 = typeCircularBuffer80.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean87 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean88 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean89 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass85);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNull(type62);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(type83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = type4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = null;
        boolean boolean16 = typeCircularBuffer9.put(type15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer20.getClass();
        boolean boolean28 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        boolean boolean35 = typeCircularBuffer33.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer33.get();
        boolean boolean37 = typeCircularBuffer33.isFull();
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer33.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer30.getClass();
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type13 = typeCircularBuffer11.get();
        boolean boolean14 = typeCircularBuffer11.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        boolean boolean19 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer39.get();
        java.lang.reflect.Type type42 = typeCircularBuffer39.get();
        java.lang.reflect.Type type43 = typeCircularBuffer39.get();
        boolean boolean44 = typeCircularBuffer39.isFull();
        boolean boolean45 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type46 = typeCircularBuffer39.get();
        boolean boolean47 = typeCircularBuffer39.isFull();
        boolean boolean48 = typeCircularBuffer39.isEmpty();
        boolean boolean49 = typeCircularBuffer39.isFull();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer39.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer44.getClass();
        boolean boolean55 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer33.isFull();
        boolean boolean57 = typeCircularBuffer33.isFull();
        java.lang.reflect.Type type58 = typeCircularBuffer33.get();
        java.lang.Class<?> wildcardClass59 = type58.getClass();
        boolean boolean60 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        boolean boolean62 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer6.get();
        boolean boolean14 = typeCircularBuffer1.put(type13);
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type18);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer13.getClass();
        boolean boolean21 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass24 = type23.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer20.getClass();
        boolean boolean31 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        boolean boolean38 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        boolean boolean40 = typeCircularBuffer38.isEmpty();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer38.get();
        boolean boolean56 = typeCircularBuffer9.put(type55);
        boolean boolean57 = typeCircularBuffer1.put(type55);
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        boolean boolean62 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer4.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type14 = typeCircularBuffer13.get();
        boolean boolean15 = typeCircularBuffer13.isFull();
        boolean boolean16 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer18.getClass();
        boolean boolean24 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean27 = typeCircularBuffer26.isFull();
        java.lang.reflect.Type type28 = typeCircularBuffer26.get();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer26.getClass();
        boolean boolean31 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean35 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer34.get();
        boolean boolean37 = typeCircularBuffer34.isFull();
        boolean boolean38 = typeCircularBuffer34.isFull();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer34.getClass();
        boolean boolean40 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean43 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer42.get();
        boolean boolean45 = typeCircularBuffer42.isEmpty();
        boolean boolean46 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer48.getClass();
        boolean boolean51 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass50);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean54 = typeCircularBuffer53.isFull();
        boolean boolean55 = typeCircularBuffer53.isEmpty();
        boolean boolean56 = typeCircularBuffer53.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean70 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean71 = typeCircularBuffer13.isEmpty();
        java.lang.reflect.Type type72 = typeCircularBuffer13.get();
        boolean boolean73 = typeCircularBuffer1.put(type72);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer12.getClass();
        boolean boolean20 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean22 = typeCircularBuffer1.isFull();
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        boolean boolean24 = typeCircularBuffer1.isFull();
        boolean boolean25 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        java.lang.reflect.Type type27 = null;
        boolean boolean28 = typeCircularBuffer1.put(type27);
        boolean boolean29 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.reflect.Type type19 = null;
        boolean boolean20 = typeCircularBuffer1.put(type19);
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isFull();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.reflect.Type type29 = typeCircularBuffer27.get();
        java.lang.reflect.Type type30 = typeCircularBuffer27.get();
        java.lang.reflect.Type type31 = typeCircularBuffer27.get();
        java.lang.reflect.Type type32 = typeCircularBuffer27.get();
        boolean boolean33 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type36 = typeCircularBuffer35.get();
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer35.getClass();
        boolean boolean38 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean43 = typeCircularBuffer42.isFull();
        boolean boolean44 = typeCircularBuffer42.isEmpty();
        java.lang.reflect.Type type45 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer49.get();
        boolean boolean56 = typeCircularBuffer47.put(type55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer47.getClass();
        boolean boolean58 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean60 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type61 = typeCircularBuffer27.get();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer27.getClass();
        boolean boolean63 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer3.getClass();
        boolean boolean7 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass6);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        boolean boolean22 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean32 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type33 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        boolean boolean44 = typeCircularBuffer35.put(type43);
        boolean boolean45 = typeCircularBuffer35.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        boolean boolean62 = typeCircularBuffer60.isFull();
        boolean boolean63 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass70);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer73.getClass();
        boolean boolean79 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type81 = typeCircularBuffer35.get();
        boolean boolean82 = typeCircularBuffer9.put(type81);
        boolean boolean83 = typeCircularBuffer1.put(type81);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) 'a');
        java.lang.Class<?> wildcardClass2 = genericDeclarationCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        boolean boolean23 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer25.isEmpty();
        boolean boolean36 = typeCircularBuffer25.isFull();
        boolean boolean37 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer39.isEmpty();
        boolean boolean75 = typeCircularBuffer39.isEmpty();
        boolean boolean76 = typeCircularBuffer39.isEmpty();
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer39.getClass();
        boolean boolean78 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass77);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean82 = typeCircularBuffer81.isFull();
        java.lang.reflect.Type type83 = typeCircularBuffer81.get();
        java.lang.reflect.Type type84 = typeCircularBuffer81.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean87 = typeCircularBuffer86.isFull();
        java.lang.reflect.Type type88 = typeCircularBuffer86.get();
        boolean boolean89 = typeCircularBuffer86.isEmpty();
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer86.getClass();
        boolean boolean91 = typeCircularBuffer81.put((java.lang.reflect.Type) wildcardClass90);
        boolean boolean92 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass90);
        java.lang.Class<?> wildcardClass93 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(type83);
        org.junit.Assert.assertNull(type84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(type88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        boolean boolean32 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        boolean boolean34 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        boolean boolean36 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer33.getClass();
        boolean boolean44 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 0);
        java.lang.Class<?> wildcardClass2 = genericDeclarationCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type45 = typeCircularBuffer44.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type56 = typeCircularBuffer55.get();
        boolean boolean57 = typeCircularBuffer55.isFull();
        boolean boolean58 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer60.getClass();
        boolean boolean66 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass65);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer68.getClass();
        boolean boolean74 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean77 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean78 = typeCircularBuffer31.isEmpty();
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer31.getClass();
        boolean boolean80 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass79);
        java.lang.reflect.Type type81 = typeCircularBuffer1.get();
        boolean boolean82 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type83 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(type83);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer12.getClass();
        boolean boolean20 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean22 = typeCircularBuffer1.isFull();
        boolean boolean23 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isFull();
        boolean boolean15 = typeCircularBuffer11.isFull();
        boolean boolean16 = typeCircularBuffer11.isFull();
        boolean boolean17 = typeCircularBuffer11.isFull();
        boolean boolean18 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer21.get();
        boolean boolean24 = typeCircularBuffer21.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type49 = null;
        boolean boolean50 = typeCircularBuffer1.put(type49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass60);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer63.getClass();
        boolean boolean70 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer52.getClass();
        boolean boolean72 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer1.isEmpty();
        boolean boolean74 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        boolean boolean10 = typeCircularBuffer8.isEmpty();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        boolean boolean12 = typeCircularBuffer8.isEmpty();
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean23 = typeCircularBuffer22.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        boolean boolean38 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer28.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer25.isEmpty();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer25.getClass();
        boolean boolean50 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer22.getClass();
        boolean boolean52 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer16.getClass();
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean31 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer30.get();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        boolean boolean34 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer36.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean42 = typeCircularBuffer41.isFull();
        boolean boolean43 = typeCircularBuffer41.isEmpty();
        boolean boolean44 = typeCircularBuffer41.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type58 = typeCircularBuffer30.get();
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer30.getClass();
        boolean boolean60 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        boolean boolean8 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        boolean boolean10 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        boolean boolean22 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean40 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        boolean boolean28 = typeCircularBuffer27.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer31.get();
        boolean boolean34 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer31.get();
        boolean boolean36 = typeCircularBuffer31.isFull();
        boolean boolean37 = typeCircularBuffer31.isEmpty();
        boolean boolean38 = typeCircularBuffer31.isFull();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer31.getClass();
        boolean boolean40 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type42 = typeCircularBuffer1.get();
        boolean boolean43 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>(100);
        java.lang.Class<?> wildcardClass16 = typeDescriptorCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer34.getClass();
        boolean boolean45 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer23.isEmpty();
        java.lang.reflect.Type type47 = null;
        boolean boolean48 = typeCircularBuffer23.put(type47);
        java.lang.reflect.Type type49 = typeCircularBuffer23.get();
        boolean boolean50 = typeCircularBuffer1.put(type49);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer5.getClass();
        boolean boolean7 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass6);
        java.lang.reflect.Type type8 = typeCircularBuffer3.get();
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer16.getClass();
        boolean boolean22 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer11.put(type33);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer11.getClass();
        boolean boolean37 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer3.getClass();
        boolean boolean39 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        boolean boolean42 = typeCircularBuffer1.isFull();
        boolean boolean43 = typeCircularBuffer1.isEmpty();
        boolean boolean44 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer11.getClass();
        boolean boolean22 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer30.getClass();
        boolean boolean36 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean40 = typeCircularBuffer39.isFull();
        boolean boolean41 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type42 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer44.getClass();
        boolean boolean55 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer25.getClass();
        boolean boolean58 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer4.isEmpty();
        boolean boolean60 = typeCircularBuffer4.isFull();
        boolean boolean61 = typeCircularBuffer4.isFull();
        boolean boolean62 = typeCircularBuffer4.isFull();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer4.getClass();
        boolean boolean64 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer1.isFull();
        boolean boolean66 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean12 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer11.get();
        boolean boolean14 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer16.get();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        java.lang.reflect.Type type20 = typeCircularBuffer16.get();
        boolean boolean21 = typeCircularBuffer16.isFull();
        boolean boolean22 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer16.isFull();
        boolean boolean25 = typeCircularBuffer16.isEmpty();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer16.getClass();
        boolean boolean27 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean31 = typeCircularBuffer30.isFull();
        boolean boolean32 = typeCircularBuffer30.isEmpty();
        boolean boolean33 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer30.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer35.get();
        boolean boolean46 = typeCircularBuffer35.isFull();
        boolean boolean47 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type52 = typeCircularBuffer51.get();
        boolean boolean53 = typeCircularBuffer51.isFull();
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer51.getClass();
        boolean boolean55 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer49.isFull();
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer49.getClass();
        boolean boolean58 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer35.getClass();
        boolean boolean60 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = type5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        boolean boolean18 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean25 = typeCircularBuffer24.isFull();
        boolean boolean26 = typeCircularBuffer24.isEmpty();
        boolean boolean27 = typeCircularBuffer24.isFull();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer24.getClass();
        boolean boolean29 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type33 = typeCircularBuffer32.get();
        boolean boolean34 = typeCircularBuffer32.isFull();
        boolean boolean35 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer32.get();
        boolean boolean45 = typeCircularBuffer32.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer47.isEmpty();
        java.lang.reflect.Type type54 = typeCircularBuffer47.get();
        boolean boolean55 = typeCircularBuffer32.put(type54);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type58 = typeCircularBuffer57.get();
        boolean boolean59 = typeCircularBuffer57.isFull();
        boolean boolean60 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer62.getClass();
        boolean boolean68 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer57.get();
        boolean boolean70 = typeCircularBuffer57.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type73 = typeCircularBuffer72.get();
        boolean boolean74 = typeCircularBuffer72.isFull();
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer72.getClass();
        boolean boolean76 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type78 = typeCircularBuffer32.get();
        boolean boolean79 = typeCircularBuffer14.put(type78);
        boolean boolean80 = typeCircularBuffer1.put(type78);
        boolean boolean81 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        boolean boolean15 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type22 = typeCircularBuffer17.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer17.getClass();
        boolean boolean24 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type29 = typeCircularBuffer28.get();
        boolean boolean30 = typeCircularBuffer28.isFull();
        boolean boolean31 = typeCircularBuffer28.isEmpty();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer28.getClass();
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.isFull();
        boolean boolean35 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        boolean boolean39 = typeCircularBuffer37.isFull();
        boolean boolean40 = typeCircularBuffer37.isFull();
        boolean boolean41 = typeCircularBuffer37.isEmpty();
        boolean boolean42 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        boolean boolean46 = typeCircularBuffer44.isEmpty();
        boolean boolean47 = typeCircularBuffer44.isEmpty();
        boolean boolean48 = typeCircularBuffer44.isEmpty();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer44.getClass();
        boolean boolean50 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer37.isFull();
        boolean boolean52 = typeCircularBuffer37.isFull();
        boolean boolean53 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean56 = typeCircularBuffer55.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer55.get();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer55.getClass();
        boolean boolean59 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean5 = typeCircularBuffer4.isFull();
        boolean boolean6 = typeCircularBuffer4.isEmpty();
        boolean boolean7 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer33.getClass();
        boolean boolean40 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer22.get();
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer22.getClass();
        boolean boolean43 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type46 = typeCircularBuffer45.get();
        boolean boolean47 = typeCircularBuffer45.isFull();
        boolean boolean48 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer50.getClass();
        boolean boolean56 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer45.get();
        boolean boolean58 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        boolean boolean62 = typeCircularBuffer60.isFull();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer60.getClass();
        boolean boolean64 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer45.isFull();
        java.lang.reflect.Type type66 = typeCircularBuffer45.get();
        java.lang.Class<?> wildcardClass67 = type66.getClass();
        boolean boolean68 = typeCircularBuffer1.put(type66);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer14.get();
        boolean boolean27 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        boolean boolean31 = typeCircularBuffer29.isFull();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer29.getClass();
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer14.get();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer14.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        boolean boolean39 = typeCircularBuffer1.isFull();
        boolean boolean40 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean43 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer42.get();
        boolean boolean45 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer47.getClass();
        boolean boolean50 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type52 = typeCircularBuffer1.get();
        java.lang.reflect.Type type53 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNull(type53);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 100);
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        boolean boolean6 = typeCircularBuffer4.isFull();
        boolean boolean7 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer9.getClass();
        boolean boolean15 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass14);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer17.getClass();
        boolean boolean23 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer4.get();
        java.lang.reflect.Type type25 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        boolean boolean29 = typeCircularBuffer27.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer32.get();
        java.lang.reflect.Type type35 = typeCircularBuffer32.get();
        java.lang.reflect.Type type36 = typeCircularBuffer32.get();
        boolean boolean37 = typeCircularBuffer32.isFull();
        boolean boolean38 = typeCircularBuffer32.isFull();
        boolean boolean39 = typeCircularBuffer32.isFull();
        boolean boolean40 = typeCircularBuffer32.isEmpty();
        boolean boolean41 = typeCircularBuffer32.isFull();
        boolean boolean42 = typeCircularBuffer32.isFull();
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer32.getClass();
        boolean boolean44 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        boolean boolean20 = typeCircularBuffer8.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer8.get();
        java.lang.reflect.Type type22 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer24.isEmpty();
        boolean boolean35 = typeCircularBuffer24.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass45);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer48.get();
        boolean boolean59 = typeCircularBuffer37.put(type58);
        boolean boolean60 = typeCircularBuffer24.put(type58);
        boolean boolean61 = typeCircularBuffer24.isEmpty();
        java.lang.reflect.Type type62 = typeCircularBuffer24.get();
        boolean boolean63 = typeCircularBuffer8.put(type62);
        boolean boolean64 = typeCircularBuffer1.put(type62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean67 = typeCircularBuffer66.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type70 = typeCircularBuffer69.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer74.get();
        boolean boolean81 = typeCircularBuffer72.put(type80);
        boolean boolean82 = typeCircularBuffer72.isFull();
        java.lang.reflect.Type type83 = typeCircularBuffer72.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean86 = typeCircularBuffer85.isEmpty();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        boolean boolean89 = typeCircularBuffer85.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean91 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean92 = typeCircularBuffer69.isEmpty();
        java.lang.Class<?> wildcardClass93 = typeCircularBuffer69.getClass();
        boolean boolean94 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass93);
        boolean boolean95 = typeCircularBuffer66.isFull();
        boolean boolean96 = typeCircularBuffer66.isEmpty();
        java.lang.reflect.Type type97 = typeCircularBuffer66.get();
        boolean boolean98 = typeCircularBuffer1.put(type97);
        java.lang.Class<?> wildcardClass99 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(type97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer3.getClass();
        boolean boolean7 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass6);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        boolean boolean22 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean32 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type33 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        boolean boolean44 = typeCircularBuffer35.put(type43);
        boolean boolean45 = typeCircularBuffer35.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        boolean boolean62 = typeCircularBuffer60.isFull();
        boolean boolean63 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass70);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer73.getClass();
        boolean boolean79 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type81 = typeCircularBuffer35.get();
        boolean boolean82 = typeCircularBuffer9.put(type81);
        boolean boolean83 = typeCircularBuffer1.put(type81);
        java.lang.reflect.Type type84 = typeCircularBuffer1.get();
        java.lang.reflect.Type type85 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(type85);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(type12);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isEmpty();
        boolean boolean14 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean21 = typeCircularBuffer20.isFull();
        boolean boolean22 = typeCircularBuffer20.isEmpty();
        boolean boolean23 = typeCircularBuffer20.isFull();
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer20.getClass();
        boolean boolean25 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer10.get();
        boolean boolean28 = typeCircularBuffer1.put(type27);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = null;
        boolean boolean16 = typeCircularBuffer9.put(type15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer20.getClass();
        boolean boolean28 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer7.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.isFull();
        boolean boolean36 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass38 = type37.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        boolean boolean13 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer26.getClass();
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer3.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type49 = typeCircularBuffer48.get();
        boolean boolean50 = typeCircularBuffer48.isFull();
        boolean boolean51 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer53.getClass();
        boolean boolean59 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass58);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer61.getClass();
        boolean boolean67 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer40.getClass();
        boolean boolean70 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean72 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean73 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type74 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(type74);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.reflect.Type type22 = typeCircularBuffer12.get();
        java.lang.reflect.Type type23 = null;
        boolean boolean24 = typeCircularBuffer12.put(type23);
        boolean boolean25 = typeCircularBuffer12.isEmpty();
        boolean boolean26 = typeCircularBuffer12.isEmpty();
        boolean boolean27 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean30 = typeCircularBuffer29.isFull();
        boolean boolean31 = typeCircularBuffer29.isEmpty();
        boolean boolean32 = typeCircularBuffer29.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer29.isFull();
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer29.getClass();
        boolean boolean47 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type11 = typeCircularBuffer9.get();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        java.lang.reflect.Type type13 = typeCircularBuffer9.get();
        java.lang.reflect.Type type14 = typeCircularBuffer9.get();
        boolean boolean15 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer24.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer24.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean43 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean44 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean47 = typeCircularBuffer46.isFull();
        boolean boolean48 = typeCircularBuffer46.isEmpty();
        boolean boolean49 = typeCircularBuffer46.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer46.get();
        boolean boolean64 = typeCircularBuffer17.put(type63);
        boolean boolean65 = typeCircularBuffer9.put(type63);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer9.getClass();
        boolean boolean67 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean71 = typeCircularBuffer70.isFull();
        java.lang.reflect.Type type72 = typeCircularBuffer70.get();
        boolean boolean73 = typeCircularBuffer70.isFull();
        java.lang.reflect.Type type74 = typeCircularBuffer70.get();
        boolean boolean75 = typeCircularBuffer70.isEmpty();
        boolean boolean76 = typeCircularBuffer70.isFull();
        boolean boolean77 = typeCircularBuffer70.isFull();
        boolean boolean78 = typeCircularBuffer70.isEmpty();
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer70.getClass();
        boolean boolean80 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass79);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(type74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer7.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        boolean boolean41 = typeCircularBuffer32.put(type40);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean44 = typeCircularBuffer43.isFull();
        boolean boolean45 = typeCircularBuffer43.isEmpty();
        java.lang.reflect.Type type46 = typeCircularBuffer43.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        boolean boolean57 = typeCircularBuffer48.put(type56);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer48.getClass();
        boolean boolean59 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean62 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        boolean boolean26 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer28.getClass();
        boolean boolean34 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean38 = typeCircularBuffer37.isFull();
        boolean boolean39 = typeCircularBuffer37.isEmpty();
        java.lang.reflect.Type type40 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer42.getClass();
        boolean boolean53 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean59 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type60 = typeCircularBuffer58.get();
        boolean boolean61 = typeCircularBuffer58.isEmpty();
        boolean boolean62 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer64.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer1.isFull();
        boolean boolean70 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String> strCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String>((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer4.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean13 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        boolean boolean28 = typeCircularBuffer18.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean38 = typeCircularBuffer15.isEmpty();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer15.getClass();
        boolean boolean40 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean43 = typeCircularBuffer42.isFull();
        boolean boolean44 = typeCircularBuffer42.isEmpty();
        boolean boolean45 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        boolean boolean69 = typeCircularBuffer60.put(type68);
        boolean boolean70 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type78 = typeCircularBuffer72.get();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        boolean boolean81 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer86.getClass();
        boolean boolean88 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass87);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer83.getClass();
        boolean boolean90 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean92 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean93 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean94 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass89);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer96 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>((int) (byte) 100);
        java.lang.Class<?> wildcardClass97 = typeDescriptorCircularBuffer96.getClass();
        boolean boolean98 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass97);
        java.lang.reflect.Type type99 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(type99);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean6 = typeCircularBuffer5.isFull();
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer5.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer34.getClass();
        boolean boolean45 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.isFull();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        boolean boolean50 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = type9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isFull();
        boolean boolean34 = typeCircularBuffer1.isFull();
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer34.getClass();
        boolean boolean45 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isEmpty();
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        boolean boolean41 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type45 = typeCircularBuffer44.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type56 = typeCircularBuffer55.get();
        boolean boolean57 = typeCircularBuffer55.isFull();
        boolean boolean58 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer60.getClass();
        boolean boolean66 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass65);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer68.getClass();
        boolean boolean74 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean77 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean78 = typeCircularBuffer31.isEmpty();
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer31.getClass();
        boolean boolean80 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass79);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean83 = typeCircularBuffer82.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean86 = typeCircularBuffer85.isEmpty();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        boolean boolean89 = typeCircularBuffer85.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer85.getClass();
        boolean boolean91 = typeCircularBuffer82.put((java.lang.reflect.Type) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer82.getClass();
        boolean boolean93 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass92);
        java.lang.reflect.Type type94 = typeCircularBuffer1.get();
        boolean boolean95 = typeCircularBuffer1.isEmpty();
        boolean boolean96 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass97 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer7.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isFull();
        boolean boolean38 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isFull();
        boolean boolean22 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        boolean boolean50 = typeCircularBuffer26.put(type48);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer26.getClass();
        boolean boolean52 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass51);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type55 = typeCircularBuffer54.get();
        boolean boolean56 = typeCircularBuffer54.isFull();
        boolean boolean57 = typeCircularBuffer54.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass63);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.reflect.Type type75 = typeCircularBuffer69.get();
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer69.getClass();
        boolean boolean77 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean78 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean79 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type80 = typeCircularBuffer17.get();
        boolean boolean81 = typeCircularBuffer1.put(type80);
        boolean boolean82 = typeCircularBuffer1.isFull();
        boolean boolean83 = typeCircularBuffer1.isFull();
        boolean boolean84 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer37.getClass();
        boolean boolean45 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.isFull();
        boolean boolean47 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        java.lang.reflect.Type type11 = typeCircularBuffer8.get();
        java.lang.reflect.Type type12 = typeCircularBuffer8.get();
        boolean boolean13 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer16.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer8.get();
        boolean boolean21 = typeCircularBuffer8.isFull();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer8.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = null;
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isFull();
        boolean boolean15 = typeCircularBuffer12.isFull();
        boolean boolean16 = typeCircularBuffer12.isFull();
        boolean boolean17 = typeCircularBuffer12.isEmpty();
        boolean boolean18 = typeCircularBuffer12.isEmpty();
        java.lang.reflect.Type type19 = null;
        boolean boolean20 = typeCircularBuffer12.put(type19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer12.getClass();
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(type23);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean29 = typeCircularBuffer28.isFull();
        boolean boolean30 = typeCircularBuffer28.isEmpty();
        boolean boolean31 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type45 = typeCircularBuffer28.get();
        java.lang.reflect.Type type46 = null;
        boolean boolean47 = typeCircularBuffer28.put(type46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type50 = typeCircularBuffer49.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        boolean boolean61 = typeCircularBuffer52.put(type60);
        boolean boolean62 = typeCircularBuffer52.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer52.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean71 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean72 = typeCircularBuffer49.isEmpty();
        boolean boolean73 = typeCircularBuffer49.isFull();
        boolean boolean74 = typeCircularBuffer49.isEmpty();
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer49.getClass();
        boolean boolean76 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type78 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(type78);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isFull();
        boolean boolean23 = typeCircularBuffer1.isFull();
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer11.get();
        boolean boolean18 = typeCircularBuffer9.put(type17);
        boolean boolean19 = typeCircularBuffer9.isFull();
        java.lang.reflect.Type type20 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer22.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer22.get();
        boolean boolean30 = typeCircularBuffer9.put(type29);
        java.lang.reflect.Type type31 = typeCircularBuffer9.get();
        boolean boolean32 = typeCircularBuffer1.put(type31);
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean9 = typeCircularBuffer8.isFull();
        boolean boolean10 = typeCircularBuffer8.isEmpty();
        java.lang.reflect.Type type11 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        boolean boolean22 = typeCircularBuffer13.put(type21);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer13.getClass();
        boolean boolean24 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer14.get();
        boolean boolean27 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        boolean boolean31 = typeCircularBuffer29.isFull();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer29.getClass();
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer14.get();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer14.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        boolean boolean39 = typeCircularBuffer1.isFull();
        boolean boolean40 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass42 = type41.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) '4');
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type6 = typeCircularBuffer5.get();
        boolean boolean7 = typeCircularBuffer5.isFull();
        boolean boolean8 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer10.getClass();
        boolean boolean16 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer5.get();
        boolean boolean18 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer20.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer20.get();
        boolean boolean28 = typeCircularBuffer5.put(type27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        boolean boolean32 = typeCircularBuffer30.isFull();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer35.getClass();
        boolean boolean41 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer30.get();
        boolean boolean43 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type46 = typeCircularBuffer45.get();
        boolean boolean47 = typeCircularBuffer45.isFull();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer45.getClass();
        boolean boolean49 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean52 = typeCircularBuffer1.isFull();
        boolean boolean53 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        boolean boolean15 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type22 = typeCircularBuffer17.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer17.getClass();
        boolean boolean24 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type29 = typeCircularBuffer28.get();
        boolean boolean30 = typeCircularBuffer28.isFull();
        boolean boolean31 = typeCircularBuffer28.isEmpty();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer28.getClass();
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type36 = typeCircularBuffer35.get();
        boolean boolean37 = typeCircularBuffer35.isFull();
        boolean boolean38 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer40.getClass();
        boolean boolean46 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer35.get();
        java.lang.Class<?> wildcardClass48 = type47.getClass();
        boolean boolean49 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type52 = typeCircularBuffer51.get();
        boolean boolean53 = typeCircularBuffer51.isFull();
        boolean boolean54 = typeCircularBuffer51.isFull();
        boolean boolean55 = typeCircularBuffer51.isFull();
        boolean boolean56 = typeCircularBuffer51.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        boolean boolean58 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type66 = typeCircularBuffer51.get();
        boolean boolean67 = typeCircularBuffer1.put(type66);
        java.lang.Class<?> wildcardClass68 = type66.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer44.getClass();
        boolean boolean55 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer31.isEmpty();
        boolean boolean58 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type59 = typeCircularBuffer31.get();
        boolean boolean60 = typeCircularBuffer1.put(type59);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }
}

