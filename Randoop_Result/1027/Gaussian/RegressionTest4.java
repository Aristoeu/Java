package Gaussian;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray71);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray71);
        java.lang.Class<?> wildcardClass75 = doubleArray74.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        double[][] doubleArray1 = null;
        double[] doubleArray9 = new double[] {};
        double[][] doubleArray10 = new double[][] { doubleArray9 };
        double[][] doubleArray11 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray10);
        double[][] doubleArray12 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray11);
        double[][] doubleArray13 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray11);
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray48);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray13, doubleArray48);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray1, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList72);
        java.lang.Class<?> wildcardClass74 = doubleList72.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) '4', doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) '#', doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 100, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.lang.Class<?> wildcardClass18 = doubleList17.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray41);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray41);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) 'a', doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (byte) 1, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray44, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray83);
        double[][] doubleArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) ' ', doubleArray83, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        java.util.ArrayList<java.lang.Double> doubleList3 = null;
        java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList3);
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList3);
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList5);
        java.lang.Class<?> wildcardClass7 = doubleList6.getClass();
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        double[][] doubleArray1 = null;
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray69);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray38);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray1, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 100, doubleArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.lang.Class<?> wildcardClass19 = doubleList18.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray34, doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList75);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) -1, doubleArray56);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) ' ', doubleArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList86);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        double[][] doubleArray2 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray75);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray42);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray2, doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray37, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList74);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        double[] doubleArray3 = new double[] {};
        double[][] doubleArray4 = new double[][] { doubleArray3 };
        double[][] doubleArray5 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray4);
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray52 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray53 = new double[][] { doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46, doubleArray52 };
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray53);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray54, doubleArray90);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 1, doubleArray54);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 10, doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray95);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray5, doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray79);
        double[][] doubleArray86 = new double[][] {};
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray79, doubleArray87);
        double[][] doubleArray91 = new double[][] {};
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray79, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray84);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray84);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) '#', doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray43);
        java.lang.Class<?> wildcardClass47 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) '4', doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray36);
        double[][] doubleArray38 = null;
        java.util.ArrayList<java.lang.Double> doubleList39 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', 0, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleList39);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray44);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray44, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 0, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray66);
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 1, doubleArray66);
        double[][] doubleArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray66, doubleArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(doubleArray69);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, 1, doubleArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray78);
        double[][] doubleArray85 = new double[][] {};
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray78, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 100, doubleArray78);
        java.lang.Class<?> wildcardClass89 = doubleArray78.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        double[][] doubleArray3 = new double[][] {};
        double[][] doubleArray4 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray3);
        double[][] doubleArray5 = null;
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray3, doubleArray5);
        java.lang.Class<?> wildcardClass7 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray48);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray48);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray48);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) 1, doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        double[][] doubleArray1 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray1, doubleArray45);
        java.lang.Class<?> wildcardClass47 = doubleArray45.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        double[][] doubleArray4 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.lang.Class<?> wildcardClass50 = doubleList46.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 10, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray48);
        java.lang.Class<?> wildcardClass50 = doubleArray48.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray82);
        double[][] doubleArray87 = null;
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray86, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList89);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList79);
        java.lang.Class<?> wildcardClass82 = doubleList79.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.lang.Class<?> wildcardClass18 = doubleList17.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) 100, doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) 100, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray69);
        java.lang.Class<?> wildcardClass72 = doubleArray69.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray46);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray46, doubleArray87);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray46);
        java.lang.Class<?> wildcardClass93 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray36, doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray75);
        double[][] doubleArray79 = null;
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray75, doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleList80.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, 1, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.lang.Class<?> wildcardClass16 = doubleList15.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray45);
        java.lang.Class<?> wildcardClass47 = doubleArray45.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray47);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) '#', doubleArray51);
        java.lang.Class<?> wildcardClass53 = doubleArray51.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        double[][] doubleArray2 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray2, doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList47);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        double[][] doubleArray7 = null;
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray50 = new double[][] { doubleArray28, doubleArray35, doubleArray42, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray56);
        java.util.ArrayList<java.lang.Double> doubleList58 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray7, doubleArray57);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray57);
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 10, doubleArray57);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, 0, doubleArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleList58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(10, doubleArray45, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList86);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray49);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray87);
        double[][] doubleArray90 = null;
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray87, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray49, doubleArray87);
        java.lang.Class<?> wildcardClass93 = doubleList92.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray47);
        double[][] doubleArray53 = null;
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray53, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray47, doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, 0, doubleArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleList97);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray83);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray87, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 1, doubleArray87);
        java.lang.Class<?> wildcardClass92 = doubleArray87.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray83);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray87, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList91);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList23);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.lang.Class<?> wildcardClass15 = doubleList14.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray84);
        double[][] doubleArray89 = null;
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray88, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList94);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray52);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray52);
        double[][] doubleArray59 = new double[][] {};
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray59);
        java.util.ArrayList<java.lang.Double> doubleList61 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray52, doubleArray59);
        java.lang.Class<?> wildcardClass62 = doubleList61.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleList61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        double[][] doubleArray3 = null;
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray52);
        java.util.ArrayList<java.lang.Double> doubleList54 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray3, doubleArray53);
        java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList54);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList56 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList54);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleList54);
        org.junit.Assert.assertNotNull(doubleList55);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray66);
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray66);
        double[] doubleArray76 = new double[] {};
        double[][] doubleArray77 = new double[][] { doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '4', doubleArray66, doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 100, doubleArray75);
        java.lang.Class<?> wildcardClass78 = doubleArray75.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        double[] doubleArray2 = new double[] {};
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        double[][] doubleArray5 = new double[][] { doubleArray2, doubleArray3, doubleArray4 };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray48);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList50);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleList50);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray41);
        java.lang.Class<?> wildcardClass44 = doubleArray41.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray43);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray48);
        java.lang.Class<?> wildcardClass50 = doubleArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        double[][] doubleArray2 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray43, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray43);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray2, doubleArray80);
        double[][] doubleArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray80, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray43);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '#', doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (short) 0, doubleArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray50 = new double[][] { doubleArray28, doubleArray35, doubleArray42, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray55);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray57);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray58);
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 1, doubleArray59);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) 0, doubleArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray46);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray46, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (short) 1, doubleArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray54);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray91 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray92 = new double[][] { doubleArray70, doubleArray77, doubleArray84, doubleArray91 };
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray57, doubleArray94);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (-1), doubleArray57);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (short) 1, doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray32 = new double[][] { doubleArray10, doubleArray17, doubleArray24, doubleArray31 };
        double[][] doubleArray33 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray32);
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray33);
        java.lang.Class<?> wildcardClass35 = doubleArray34.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray53);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) 'a', doubleArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray44);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray44, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray86);
        java.lang.Class<?> wildcardClass90 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        double[][] doubleArray1 = null;
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray41);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) 'a', doubleArray1, doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray50);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray50);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray54);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray91 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray92 = new double[][] { doubleArray70, doubleArray77, doubleArray84, doubleArray91 };
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray54, doubleArray92);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 100, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (-1), doubleArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray80);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 1, doubleArray85);
        java.lang.Class<?> wildcardClass87 = doubleArray85.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray51);
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray90 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray91 = new double[][] { doubleArray69, doubleArray76, doubleArray83, doubleArray90 };
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray51, doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, 0, doubleArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleList97);
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray44);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray44);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray82);
        java.lang.Class<?> wildcardClass84 = doubleArray83.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray53);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (short) 0, doubleArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray51);
        java.lang.Class<?> wildcardClass53 = doubleArray51.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList69);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        double[][] doubleArray2 = null;
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray54);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray54);
        java.util.ArrayList<java.lang.Double> doubleList59 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray2, doubleArray58);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList60 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList59);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleList59);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray50);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray90);
        java.lang.Class<?> wildcardClass93 = doubleArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray36);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray36, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        double[][] doubleArray1 = null;
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray1, doubleArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray46);
        double[][] doubleArray52 = null;
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray52, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray46, doubleArray95);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList96);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleList96);
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray41);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList89);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray37);
        double[][] doubleArray73 = null;
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray72, doubleArray73);
        java.lang.Class<?> wildcardClass75 = doubleList74.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray72);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray72);
        double[][] doubleArray76 = null;
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray75, doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray75.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray40);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray43);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray43, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        double[][] doubleArray3 = null;
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray52);
        java.util.ArrayList<java.lang.Double> doubleList54 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray3, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray53);
        java.lang.Class<?> wildcardClass56 = doubleArray53.getClass();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleList54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (short) 100, doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray38);
        double[][] doubleArray46 = new double[][] {};
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) 'a', doubleArray41, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) 100, doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        double[][] doubleArray2 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray2, doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList50);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleList50);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray83);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray87, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList91);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (byte) 1, doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        double[][] doubleArray3 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList46);
        java.lang.Class<?> wildcardClass48 = doubleList46.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray80);
        double[][] doubleArray87 = new double[][] {};
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray80, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 100, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (byte) 10, doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        double[][] doubleArray6 = new double[][] {};
        double[][] doubleArray7 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray6);
        double[][] doubleArray8 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray6);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray9 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) 'a', doubleArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray40);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '#', doubleArray41, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 0, doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList23);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) 10, doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 100, doubleArray75);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        java.lang.Class<?> wildcardClass16 = doubleList15.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList16);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '#', doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) 'a', doubleArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray69);
        java.lang.Class<?> wildcardClass72 = doubleArray71.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray41);
        java.lang.Class<?> wildcardClass44 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList11);
        java.lang.Class<?> wildcardClass13 = doubleList11.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        java.lang.Class<?> wildcardClass82 = doubleList81.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.lang.Class<?> wildcardClass16 = doubleList15.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList74);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        double[][] doubleArray4 = new double[][] {};
        double[][] doubleArray5 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray4);
        double[][] doubleArray6 = null;
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray4, doubleArray6);
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList40 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '#', doubleArray4, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleList7);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray50);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray50, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray73);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray40);
        double[][] doubleArray78 = null;
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray77, doubleArray78);
        double[][] doubleArray80 = null;
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray78, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList17);
        java.lang.Class<?> wildcardClass19 = doubleList18.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d, 1.0d, 100.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList6);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        double[] doubleArray9 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray40 = new double[][] { doubleArray9, doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray76);
        double[][] doubleArray83 = new double[][] {};
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray76, doubleArray84);
        java.lang.Class<?> wildcardClass86 = doubleArray76.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray44);
        java.lang.Class<?> wildcardClass47 = doubleArray44.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray38);
        double[][] doubleArray74 = null;
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray73, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList75);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList75);
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray84);
        double[][] doubleArray89 = null;
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray88, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList94);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray40);
        double[][] doubleArray42 = null;
        java.util.ArrayList<java.lang.Double> doubleList43 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray41.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleList43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray42);
        double[][] doubleArray44 = null;
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList45);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray39);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) -1, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 10, doubleArray39, doubleArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList68);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray53, doubleArray90);
        java.lang.Class<?> wildcardClass93 = doubleList92.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray48);
        java.lang.Class<?> wildcardClass50 = doubleArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        double[][] doubleArray3 = null;
        double[] doubleArray5 = new double[] {};
        double[] doubleArray6 = new double[] {};
        double[] doubleArray7 = new double[] {};
        double[][] doubleArray8 = new double[][] { doubleArray5, doubleArray6, doubleArray7 };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray51);
        java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray8, doubleArray51);
        java.util.ArrayList<java.lang.Double> doubleList54 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray3, doubleArray8);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) '#', doubleArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleList53);
        org.junit.Assert.assertNotNull(doubleList54);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray35);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 0, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        double[][] doubleArray3 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray44);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray3, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', 10, doubleArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray83);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray87, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray87);
        java.lang.Class<?> wildcardClass92 = doubleArray87.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray79);
        double[][] doubleArray86 = new double[][] {};
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray79, doubleArray87);
        double[][] doubleArray91 = new double[][] {};
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray79, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray41);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        java.lang.Class<?> wildcardClass91 = doubleList90.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray45);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray45);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray45);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (byte) 100, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList19);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList19);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList22);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList23);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray79);
        double[][] doubleArray86 = new double[][] {};
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray79, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList89);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray79);
        double[][] doubleArray86 = new double[][] {};
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray79, doubleArray87);
        double[][] doubleArray91 = new double[][] {};
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray79, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, 1, doubleArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray74);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray36, doubleArray74);
        double[][] doubleArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray74, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray41, doubleArray79);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray79);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray85);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        double[][] doubleArray3 = null;
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray52);
        java.util.ArrayList<java.lang.Double> doubleList54 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray3, doubleArray53);
        java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList54);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList56 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList55);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleList54);
        org.junit.Assert.assertNotNull(doubleList55);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, 0, doubleArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray45, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) '4', doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 1, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (byte) 0, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (-1), doubleArray54);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray54);
        java.lang.Class<?> wildcardClass59 = doubleArray58.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList71);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (short) 10, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 10, doubleArray47, doubleArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray47);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (-1), doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray86);
        double[][] doubleArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 10, doubleArray87, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray82);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray82);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 1, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (short) 10, doubleArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        double[][] doubleArray1 = null;
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 1, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList43 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '4', doubleArray1, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray48);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray92);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray95);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 10, doubleArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleList97);
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray79);
        double[][] doubleArray86 = new double[][] {};
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray79, doubleArray87);
        double[][] doubleArray91 = new double[][] {};
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray79, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray39);
        double[][] doubleArray43 = null;
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 1, doubleArray36);
        java.lang.Class<?> wildcardClass72 = doubleArray36.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        double[][] doubleArray4 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList46);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList46);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray48);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray92);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray95);
        double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray95);
        java.lang.Class<?> wildcardClass99 = doubleArray98.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleList97);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 10, doubleArray43);
        java.lang.Class<?> wildcardClass47 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        double[][] doubleArray2 = null;
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray38);
        java.util.ArrayList<java.lang.Double> doubleList41 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray2, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList42 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList41);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleList41);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray53);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray53);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray53);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) 10, doubleArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray51);
        java.lang.Class<?> wildcardClass53 = doubleArray51.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        double[][] doubleArray4 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList48);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray43, doubleArray79);
        double[] doubleArray85 = new double[] {};
        double[][] doubleArray86 = new double[][] { doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray79, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (short) 10, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray50);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray50);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) 'a', doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray39);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, 10, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray78);
        double[][] doubleArray85 = new double[][] {};
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray78, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) 'a', doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray37);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray77);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray37, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (short) 100, doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList83);
        java.lang.Class<?> wildcardClass86 = doubleList83.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray45);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (short) 0, doubleArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray46);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray47, doubleArray91);
        java.lang.Class<?> wildcardClass93 = doubleArray91.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray41);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray41);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (byte) 0, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray41);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 0, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) '#', doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        double[][] doubleArray2 = null;
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray2, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray40);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.lang.Class<?> wildcardClass17 = doubleList15.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        double[][] doubleArray77 = null;
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray76, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList78);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        double[][] doubleArray1 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray41);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 0, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray1, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray40);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, 0, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) -1, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 100, doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(10, doubleArray47, doubleArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList11);
        java.lang.Class<?> wildcardClass19 = doubleList18.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray46);
        java.lang.Class<?> wildcardClass50 = doubleArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (-1), doubleArray54);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', 0, doubleArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray44);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray44);
        double[][] doubleArray52 = null;
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray90 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray91 = new double[][] { doubleArray69, doubleArray76, doubleArray83, doubleArray90 };
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray93);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray52, doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 100, doubleArray44, doubleArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleList97);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray43);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray85);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray85);
        java.lang.Class<?> wildcardClass90 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray42.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 100, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) 'a', doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray82);
        double[][] doubleArray87 = null;
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray86, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList89);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList84);
        java.lang.Class<?> wildcardClass86 = doubleList84.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList21);
        java.lang.Class<?> wildcardClass23 = doubleList21.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray49);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray49);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) '#', doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 100, doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray50 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray51 = new double[][] { doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44, doubleArray50 };
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray51);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray52, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray52);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray52);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray52);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 1, doubleArray52);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray52);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '4', doubleArray52);
        java.lang.Class<?> wildcardClass98 = doubleArray97.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray46);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray91);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray46, doubleArray94);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList96);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleList96);
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray34);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, 10, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList74);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray50);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray50);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray50);
        java.lang.Class<?> wildcardClass95 = doubleArray50.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray38);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 100, doubleArray38);
        java.lang.Class<?> wildcardClass75 = doubleArray38.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList17);
        java.lang.Class<?> wildcardClass19 = doubleList17.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray43);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 10, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(100, doubleArray43, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray47);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray51);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray51, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray39);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray42.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray49);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray49);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) -1, doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 0, doubleArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) -1, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) '#', doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 100, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray47);
        java.lang.Class<?> wildcardClass50 = doubleArray47.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList69);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList83);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        double[][] doubleArray1 = null;
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        double[] doubleArray5 = new double[] {};
        double[][] doubleArray6 = new double[][] { doubleArray3, doubleArray4, doubleArray5 };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray49);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray6, doubleArray49);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray1, doubleArray6);
        java.lang.Class<?> wildcardClass53 = doubleList52.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(doubleList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray36);
        java.lang.Class<?> wildcardClass72 = doubleArray71.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        java.util.ArrayList<java.lang.Double> doubleList2 = null;
        java.util.ArrayList<java.lang.Double> doubleList3 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList2);
        java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList3);
        java.lang.Class<?> wildcardClass5 = doubleList3.getClass();
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray43);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray43);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray43);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 1, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, 10, doubleArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray44);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray44, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 10, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 100, doubleArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray83);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray87, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray51);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray54, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray37, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList79);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray38);
        java.lang.Class<?> wildcardClass41 = doubleArray40.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray34);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray34);
        java.lang.Class<?> wildcardClass38 = doubleArray37.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray56);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', 100, doubleArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray51);
        java.lang.Class<?> wildcardClass53 = doubleArray52.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray43);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray43);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray43);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray88);
        java.lang.Class<?> wildcardClass90 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray44);
        double[][] doubleArray46 = null;
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList49);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList50);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray48);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray89);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray49, doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) 0, doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray40, doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray79);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray79);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray79);
        double[][] doubleArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray84, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray51);
        java.lang.Class<?> wildcardClass53 = doubleArray51.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (byte) 1, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray48);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray48);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray48);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (short) 10, doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        double[][] doubleArray2 = null;
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray36);
        java.util.ArrayList<java.lang.Double> doubleList38 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray2, doubleArray36);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList39 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList38);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleList38);
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray79);
        double[][] doubleArray86 = new double[][] {};
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray79, doubleArray87);
        double[][] doubleArray91 = new double[][] {};
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray79, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray37, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, 100, doubleArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray41);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray45, doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray47);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) -1, doubleArray47);
        java.lang.Class<?> wildcardClass53 = doubleArray52.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        double[] doubleArray7 = new double[] {};
        double[][] doubleArray8 = new double[][] { doubleArray7 };
        double[][] doubleArray9 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray8);
        double[][] doubleArray10 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray9);
        double[][] doubleArray11 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray9);
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray11, doubleArray46);
        java.lang.Class<?> wildcardClass82 = doubleArray11.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 100, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray50 = new double[][] { doubleArray28, doubleArray35, doubleArray42, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray55);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray57);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray58);
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 1, doubleArray59);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) '#', doubleArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray53);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray53, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray93);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray95);
        double[][] doubleArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '4', doubleArray95, doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray36);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray36);
        java.lang.Class<?> wildcardClass72 = doubleArray71.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray43);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray93);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray44, doubleArray95);
        java.lang.Class<?> wildcardClass99 = doubleList98.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray83);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray87, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList92);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray39, doubleArray77);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) -1, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList23);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList25);
        java.util.ArrayList<java.lang.Double> doubleList27 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList26);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList28 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList27);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
        org.junit.Assert.assertNotNull(doubleList26);
        org.junit.Assert.assertNotNull(doubleList27);
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        double[] doubleArray8 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray39 = new double[][] { doubleArray8, doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray39, doubleArray90);
        java.lang.Class<?> wildcardClass92 = doubleArray90.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.lang.Class<?> wildcardClass17 = doubleList10.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray72);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 10, doubleArray72);
        java.lang.Class<?> wildcardClass78 = doubleArray72.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.lang.Class<?> wildcardClass84 = doubleList80.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray41);
        double[][] doubleArray43 = null;
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray50);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray50);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (byte) 100, doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray44);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray80);
        java.lang.Class<?> wildcardClass84 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray45);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) 100, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 100, doubleArray39);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 1, doubleArray39);
        java.lang.Class<?> wildcardClass78 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList23);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList23);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList25);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray49);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray49);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 1, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray55);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 10, doubleArray55);
        java.lang.Class<?> wildcardClass59 = doubleArray58.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray82);
        double[][] doubleArray87 = null;
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray86, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, 100.0d, 10.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 5 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 100, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (byte) 100, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray47, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray47);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray47);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 0, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray39);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) -1, doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray81);
        double[][] doubleArray86 = null;
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray85, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray85);
        java.lang.Class<?> wildcardClass89 = doubleArray85.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        double[][] doubleArray1 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray1, doubleArray48);
        java.lang.Class<?> wildcardClass50 = doubleList49.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray45);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 0, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (-1), doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 10, doubleArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray48);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray48);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray91 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray92 = new double[][] { doubleArray70, doubleArray77, doubleArray84, doubleArray91 };
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray93);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) ' ', doubleArray48, doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 1, doubleArray53);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) 10, doubleArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        double[][] doubleArray1 = null;
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray54);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray91 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray92 = new double[][] { doubleArray70, doubleArray77, doubleArray84, doubleArray91 };
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray57, doubleArray94);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) ' ', doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray1, doubleArray94);
        java.lang.Class<?> wildcardClass99 = doubleArray94.getClass();
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) '4', doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) 'a', doubleArray42);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) 'a', doubleArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList19);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList74);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray78);
        double[][] doubleArray85 = new double[][] {};
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray78, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList88);
        java.lang.Class<?> wildcardClass90 = doubleList89.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray46, doubleArray81);
        double[][] doubleArray88 = new double[][] {};
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray81, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList92);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        double[][] doubleArray1 = null;
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray41);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray1, doubleArray41);
        java.lang.Class<?> wildcardClass84 = doubleArray41.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) 1, doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray37);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray77);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray37, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList83);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList18);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray46);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 10, doubleArray46);
        java.lang.Class<?> wildcardClass89 = doubleArray88.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray40, doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray40);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 0, doubleArray83);
        double[][] doubleArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(100, doubleArray84, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray50 = new double[][] { doubleArray28, doubleArray35, doubleArray42, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray55);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray57);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray58);
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 1, doubleArray59);
        double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray59);
        java.lang.Class<?> wildcardClass62 = doubleArray59.getClass();
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, 10, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        double[][] doubleArray2 = null;
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray51);
        java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray2, doubleArray52);
        java.util.ArrayList<java.lang.Double> doubleList54 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList53);
        java.lang.Class<?> wildcardClass55 = doubleList53.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleList53);
        org.junit.Assert.assertNotNull(doubleList54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray83);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray87, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray35);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray85);
        java.lang.Class<?> wildcardClass87 = doubleArray85.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) -1, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (-1), doubleArray54);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 0, doubleArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray65);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, 0, doubleArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleList67);
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray37, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (short) 0, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray41);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray45, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList84);
        java.lang.Class<?> wildcardClass86 = doubleList85.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList71);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        java.util.ArrayList<java.lang.Double> doubleList3 = null;
        java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList3);
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList3);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleList5);
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray44, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray44);
        double[][] doubleArray86 = null;
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray44, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray88);
        java.lang.Class<?> wildcardClass90 = doubleArray88.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray50);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray50);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) 'a', doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray79);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray79);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) ' ', doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        java.lang.Class<?> wildcardClass27 = doubleList26.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
        org.junit.Assert.assertNotNull(doubleList26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray43, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray43);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray43);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 100, doubleArray79);
        double[][] doubleArray84 = new double[][] {};
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray84);
        double[][] doubleArray86 = null;
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray84, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray79, doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 100, doubleArray84);
        java.lang.Class<?> wildcardClass90 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray52);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray52);
        double[][] doubleArray59 = new double[][] {};
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray59);
        java.util.ArrayList<java.lang.Double> doubleList61 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray52, doubleArray59);
        java.lang.Class<?> wildcardClass62 = doubleArray52.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleList61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray45, doubleArray83);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray83);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray90);
        java.lang.Class<?> wildcardClass93 = doubleArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray82);
        double[][] doubleArray87 = null;
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray86, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList8);
        java.lang.Class<?> wildcardClass14 = doubleList8.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray40);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray89);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 100, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) 'a', doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(10, doubleArray44, doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList8);
        java.lang.Class<?> wildcardClass14 = doubleList13.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray36);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray36, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) '#', doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList72);
        java.lang.Class<?> wildcardClass74 = doubleList73.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray36);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) -1, doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
    }

    @Test
    public void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2369");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2370");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray41);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray41);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray41);
        java.lang.Class<?> wildcardClass81 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2371");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2372");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray45, doubleArray83);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray83);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray91);
        java.lang.Class<?> wildcardClass93 = doubleArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2373");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (short) 100, doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2374");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
    }

    @Test
    public void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2375");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2376");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray47, doubleArray85);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray85);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (byte) 100, doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2377");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2378");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.lang.Class<?> wildcardClass14 = doubleList13.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2379");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray48);
        java.lang.Class<?> wildcardClass50 = doubleArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2380");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
    }

    @Test
    public void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2381");
        double[][] doubleArray6 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray6, doubleArray47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList48);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(doubleList52);
    }

    @Test
    public void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2382");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList70);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
    }

    @Test
    public void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2383");
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList23);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList24);
        java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList24);
        java.util.ArrayList<java.lang.Double> doubleList27 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList24);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList28 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList27);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
        org.junit.Assert.assertNotNull(doubleList26);
        org.junit.Assert.assertNotNull(doubleList27);
    }

    @Test
    public void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2384");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray45);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray45);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray45);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 10, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 0, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2385");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList19);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList21);
        java.lang.Class<?> wildcardClass23 = doubleList21.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2386");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
    }

    @Test
    public void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2387");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.lang.Class<?> wildcardClass16 = doubleList12.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2388");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray84);
        double[][] doubleArray89 = null;
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray88, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList94);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2389");
        double[][] doubleArray1 = null;
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray49);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray49);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray53);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray53);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 100, doubleArray56);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList58 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 10, doubleArray1, doubleArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
    }

    @Test
    public void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2390");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray54);
        java.lang.Class<?> wildcardClass56 = doubleArray55.getClass();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2391");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray76);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (short) 0, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
    }

    @Test
    public void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2392");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray46);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) 1, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2393");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray82);
        java.lang.Class<?> wildcardClass87 = doubleArray82.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2394");
        double[][] doubleArray5 = new double[][] {};
        double[][] doubleArray6 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray5);
        double[][] doubleArray7 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray5);
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray7, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2395");
        double[][] doubleArray6 = new double[][] {};
        double[][] doubleArray7 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray6);
        double[][] doubleArray8 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray6);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray9 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) -1, doubleArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
    }

    @Test
    public void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2396");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray45);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray90);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray45, doubleArray93);
        java.lang.Class<?> wildcardClass96 = doubleArray93.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2397");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray39);
        double[][] doubleArray43 = null;
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2398");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) 100, doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2399");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray43);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) ' ', doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '4', doubleArray43, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2400");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) 100, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2401");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray47, doubleArray85);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray85);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) 0, doubleArray94);
        java.lang.Class<?> wildcardClass96 = doubleArray95.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2402");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList70);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
    }

    @Test
    public void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2403");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) 0, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2404");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray37);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray77);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray37, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) -1, doubleArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2405");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray84);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 100, doubleArray84);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '#', doubleArray84);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray84);
        java.lang.Class<?> wildcardClass93 = doubleArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2406");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        java.lang.Class<?> wildcardClass16 = doubleList15.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2407");
        double[] doubleArray4 = new double[] {};
        double[][] doubleArray5 = new double[][] { doubleArray4 };
        double[][] doubleArray6 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray5);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray7 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) 'a', doubleArray5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2408");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray49, doubleArray87);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray87);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray94);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) 0, doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (byte) 10, doubleArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2409");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray77);
        double[][] doubleArray84 = new double[][] {};
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray77, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList86);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2410");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2411");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        java.lang.Class<?> wildcardClass82 = doubleList79.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2412");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2413");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray46);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray87);
        java.lang.Class<?> wildcardClass89 = doubleArray88.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2414");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
    }

    @Test
    public void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2415");
        double[][] doubleArray1 = null;
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray37);
        java.util.ArrayList<java.lang.Double> doubleList40 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray1, doubleArray39);
        java.lang.Class<?> wildcardClass41 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleList40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2416");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray84);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 100, doubleArray84);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 100, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) '#', doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2417");
        double[][] doubleArray5 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList48);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList48);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
    }

    @Test
    public void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2418");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.lang.Class<?> wildcardClass19 = doubleList17.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2419");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2420");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray80);
        double[][] doubleArray87 = new double[][] {};
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray80, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 100, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (short) 0, doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2421");
        double[] doubleArray2 = new double[] {};
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        double[][] doubleArray5 = new double[][] { doubleArray2, doubleArray3, doubleArray4 };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray48);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList50);
        java.lang.Class<?> wildcardClass52 = doubleList50.getClass();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2422");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2423");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray45);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray45);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray84);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2424");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2425");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 10, doubleArray78);
        java.lang.Class<?> wildcardClass81 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2426");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) -1, doubleArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2427");
        double[] doubleArray2 = new double[] {};
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        double[][] doubleArray5 = new double[][] { doubleArray2, doubleArray3, doubleArray4 };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray48);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList50);
        java.lang.Class<?> wildcardClass52 = doubleList50.getClass();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2428");
        double[][] doubleArray4 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList46);
        java.lang.Class<?> wildcardClass50 = doubleList46.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2429");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList19);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
    }

    @Test
    public void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2430");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray42.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2431");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray52);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) 100, doubleArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2432");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2433");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray53);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray56);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray57);
        java.lang.Class<?> wildcardClass59 = doubleArray57.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2434");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray40);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray42, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2435");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray45, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2436");
        double[][] doubleArray1 = null;
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray51);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 100, doubleArray1, doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2437");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray47, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray86);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray86);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 1, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray91);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 100, doubleArray94);
        java.lang.Class<?> wildcardClass96 = doubleArray94.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2438");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList75);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList75);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList78);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2439");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (short) -1, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2440");
        java.util.ArrayList<java.lang.Double> doubleList2 = null;
        java.util.ArrayList<java.lang.Double> doubleList3 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList2);
        java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList3);
        java.lang.Class<?> wildcardClass5 = doubleList4.getClass();
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2441");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList74);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2442");
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList25);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
    }

    @Test
    public void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2443");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList16);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2444");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList86);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2445");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList72);
        java.lang.Class<?> wildcardClass74 = doubleList72.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2446");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList72);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
    }

    @Test
    public void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2447");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray43, doubleArray81);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray81);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '#', doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray87);
        java.lang.Class<?> wildcardClass90 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2448");
        double[][] doubleArray1 = null;
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 100, doubleArray36);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList40 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '4', doubleArray1, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2449");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 10, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 10, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2450");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray46);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray96);
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray46, doubleArray97);
        java.lang.Class<?> wildcardClass99 = doubleArray97.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2451");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray37, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList73);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2452");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray82);
        double[][] doubleArray87 = null;
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray86, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2453");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) -1, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2454");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 10, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2455");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 1, doubleArray56);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) 1, doubleArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
    }

    @Test
    public void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2456");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) 0, doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2457");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2458");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) 100, doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2459");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray83);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray87, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray87);
        java.lang.Class<?> wildcardClass92 = doubleArray87.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2460");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray44);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray82);
        java.lang.Class<?> wildcardClass84 = doubleArray82.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2461");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray46);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray87);
        java.lang.Class<?> wildcardClass89 = doubleArray87.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2462");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        double[][] doubleArray77 = null;
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray76, doubleArray77);
        double[][] doubleArray79 = null;
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray77, doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleList80.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2463");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray40);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) 'a', doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray76.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2464");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList86);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2465");
        java.util.ArrayList<java.lang.Double> doubleList4 = null;
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList5);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2466");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, 100, doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2467");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray35);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (byte) 100, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2468");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
    }

    @Test
    public void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2469");
        double[][] doubleArray5 = null;
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray54);
        java.util.ArrayList<java.lang.Double> doubleList56 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray5, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray55);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 10, doubleArray55);
        java.lang.Class<?> wildcardClass59 = doubleArray58.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleList56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2470");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray73);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '#', doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (byte) -1, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2471");
        double[] doubleArray4 = new double[] {};
        double[] doubleArray5 = new double[] {};
        double[] doubleArray6 = new double[] {};
        double[][] doubleArray7 = new double[][] { doubleArray4, doubleArray5, doubleArray6 };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray50);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray7, doubleArray50);
        java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList52);
        java.util.ArrayList<java.lang.Double> doubleList54 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList53);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList53);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleList52);
        org.junit.Assert.assertNotNull(doubleList53);
        org.junit.Assert.assertNotNull(doubleList54);
    }

    @Test
    public void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2472");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2473");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray40);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(100, doubleArray40, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2474");
        double[][] doubleArray3 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 0, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) 0, doubleArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
    }

    @Test
    public void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2475");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray81);
        double[][] doubleArray86 = null;
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray85, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList87);
        java.lang.Class<?> wildcardClass90 = doubleList89.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2476");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray48);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 100, doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (short) 100, doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2477");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (-1), doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2478");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray77);
        double[][] doubleArray84 = new double[][] {};
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray77, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList86);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2479");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.lang.Class<?> wildcardClass88 = doubleList82.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2480");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) 100, doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2481");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2482");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray42);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray46, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList86);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2483");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) 10, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2484");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray39);
        double[][] doubleArray43 = null;
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2485");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray53, doubleArray94);
        java.lang.Class<?> wildcardClass96 = doubleArray94.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2486");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
    }

    @Test
    public void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2487");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray36);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) -1, doubleArray36);
        java.lang.Class<?> wildcardClass41 = doubleArray36.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2488");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray73);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray40);
        double[][] doubleArray78 = null;
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray77, doubleArray78);
        double[][] doubleArray80 = null;
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray78, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2489");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray65);
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 1, doubleArray65);
        java.lang.Class<?> wildcardClass69 = doubleArray65.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleList67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2490");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray49, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray49);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray49);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray49);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 10, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 100, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 1, doubleArray90);
        java.lang.Class<?> wildcardClass93 = doubleArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2491");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray41, doubleArray79);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray79);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray85);
        java.lang.Class<?> wildcardClass87 = doubleArray85.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2492");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        java.lang.Class<?> wildcardClass20 = doubleList19.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2493");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 10, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) 1, doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2494");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray47, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) '4', doubleArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2495");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList73);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList75);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList75);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleList76);
    }

    @Test
    public void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2496");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) -1, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2497");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) ' ', doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2498");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray79);
        double[][] doubleArray86 = new double[][] {};
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray79, doubleArray87);
        double[][] doubleArray91 = new double[][] {};
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray79, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList94);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2499");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray44);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray48, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 1, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) -1, doubleArray88);
        java.lang.Class<?> wildcardClass90 = doubleArray88.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2500");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) 'a', doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (short) -1, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }
}

