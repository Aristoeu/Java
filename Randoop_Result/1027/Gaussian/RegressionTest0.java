package Gaussian;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 1.0d, 10.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 5 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 1.0d, (-1.0d), 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList5 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList5, doubleArray4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList5);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        double[] doubleArray5 = new double[] { (-1.0f), (-1L), 0, 10L };
        double[][] doubleArray6 = new double[][] { doubleArray5 };
        double[] doubleArray13 = new double[] { 0.0f, 100.0f, (byte) 100, 100.0f, (short) 0, (-1.0d) };
        double[] doubleArray20 = new double[] { 0.0f, 100.0f, (byte) 100, 100.0f, (short) 0, (-1.0d) };
        double[] doubleArray27 = new double[] { 0.0f, 100.0f, (byte) 100, 100.0f, (short) 0, (-1.0d) };
        double[] doubleArray34 = new double[] { 0.0f, 100.0f, (byte) 100, 100.0f, (short) 0, (-1.0d) };
        double[] doubleArray41 = new double[] { 0.0f, 100.0f, (byte) 100, 100.0f, (short) 0, (-1.0d) };
        double[] doubleArray48 = new double[] { 0.0f, 100.0f, (byte) 100, 100.0f, (short) 0, (-1.0d) };
        double[][] doubleArray49 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 100, doubleArray6, doubleArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 100.0, 100.0, 100.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 100.0, 100.0, 100.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 100.0, 100.0, 100.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 100.0, 100.0, 100.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 100.0, 100.0, 100.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 100.0, 100.0, 100.0, 0.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        java.lang.Class<?> wildcardClass9 = doubleList6.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        double[] doubleArray6 = new double[] { 100.0f, (byte) 100, 100, 100 };
        double[] doubleArray11 = new double[] { 100.0f, (byte) 100, 100, 100 };
        double[] doubleArray16 = new double[] { 100.0f, (byte) 100, 100, 100 };
        double[] doubleArray21 = new double[] { 100.0f, (byte) 100, 100, 100 };
        double[] doubleArray26 = new double[] { 100.0f, (byte) 100, 100, 100 };
        double[][] doubleArray27 = new double[][] { doubleArray6, doubleArray11, doubleArray16, doubleArray21, doubleArray26 };
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray28 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) '#', doubleArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        java.lang.Class<?> wildcardClass9 = doubleList8.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray31 = new double[][] { doubleArray9, doubleArray16, doubleArray23, doubleArray30 };
        double[][] doubleArray32 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray31);
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray63 = new double[][] { doubleArray41, doubleArray48, doubleArray55, doubleArray62 };
        double[][] doubleArray64 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray63);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList65 = com.thealgorithms.maths.Gaussian.valueOfGaussian(100, doubleArray31, doubleArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray64);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList9);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 1, doubleArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList69);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList69);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray32 = new double[][] { doubleArray10, doubleArray17, doubleArray24, doubleArray31 };
        double[][] doubleArray33 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray32);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (byte) 0, doubleArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray31 = new double[][] { doubleArray9, doubleArray16, doubleArray23, doubleArray30 };
        double[][] doubleArray32 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray31);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray66);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '#', doubleArray31, doubleArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (byte) 0, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        double[] doubleArray5 = new double[] { 'a', 1.0d, 1.0d };
        double[] doubleArray9 = new double[] { 'a', 1.0d, 1.0d };
        double[] doubleArray13 = new double[] { 'a', 1.0d, 1.0d };
        double[] doubleArray17 = new double[] { 'a', 1.0d, 1.0d };
        double[] doubleArray21 = new double[] { 'a', 1.0d, 1.0d };
        double[] doubleArray25 = new double[] { 'a', 1.0d, 1.0d };
        double[][] doubleArray26 = new double[][] { doubleArray5, doubleArray9, doubleArray13, doubleArray17, doubleArray21, doubleArray25 };
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray27 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (-1), doubleArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[97.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[97.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[97.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[97.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray32 = new double[][] { doubleArray10, doubleArray17, doubleArray24, doubleArray31 };
        double[][] doubleArray33 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray32);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (short) 100, doubleArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, 10, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray32 = new double[][] { doubleArray10, doubleArray17, doubleArray24, doubleArray31 };
        double[][] doubleArray33 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray32);
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray33);
        java.lang.Class<?> wildcardClass35 = doubleArray34.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray35);
        java.lang.Class<?> wildcardClass38 = doubleArray37.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) 1, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray33);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray35, doubleArray68);
        java.lang.Class<?> wildcardClass72 = doubleArray35.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray31 = new double[][] { doubleArray9, doubleArray16, doubleArray23, doubleArray30 };
        double[][] doubleArray32 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray31);
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray63 = new double[][] { doubleArray41, doubleArray48, doubleArray55, doubleArray62 };
        double[][] doubleArray64 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray63);
        java.util.ArrayList<java.lang.Double> doubleList65 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray32, doubleArray63);
        java.lang.Class<?> wildcardClass66 = doubleArray63.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(doubleList65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList69);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray36, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList72);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray36);
        double[][] doubleArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList40 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 100, doubleArray38, doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray31 = new double[][] { doubleArray9, doubleArray16, doubleArray23, doubleArray30 };
        double[][] doubleArray32 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray31);
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray63 = new double[][] { doubleArray41, doubleArray48, doubleArray55, doubleArray62 };
        double[][] doubleArray64 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray63);
        java.util.ArrayList<java.lang.Double> doubleList65 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray32, doubleArray63);
        java.lang.Class<?> wildcardClass66 = doubleList65.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(doubleList65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray67);
        java.lang.Class<?> wildcardClass69 = doubleArray34.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray34, doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList75);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) 0, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) -1, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray37);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray37, doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray76.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray33);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray33, doubleArray72);
        java.lang.Class<?> wildcardClass75 = doubleArray72.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', 100, doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d, 10.0d, 0.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList6);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray35, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) 'a', doubleArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, 1, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList69);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray35, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) -1, doubleArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray36);
        java.lang.Class<?> wildcardClass72 = doubleArray36.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray37, doubleArray70);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, 0, doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray33);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray35, doubleArray68);
        java.lang.Class<?> wildcardClass72 = doubleArray68.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList69);
        java.lang.Class<?> wildcardClass71 = doubleList70.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList69);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 100, doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', 10, doubleArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray33);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) ' ', doubleArray33, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray32 = new double[][] { doubleArray10, doubleArray17, doubleArray24, doubleArray31 };
        double[][] doubleArray33 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray32);
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray32);
        java.lang.Class<?> wildcardClass35 = doubleArray32.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        double[] doubleArray9 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray40 = new double[][] { doubleArray9, doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) 10, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 5 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray67);
        java.lang.Class<?> wildcardClass69 = doubleList68.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) '4', doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.lang.Class<?> wildcardClass10 = doubleList8.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList69);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray36);
        java.lang.Class<?> wildcardClass72 = doubleArray71.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray36, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList72);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList79);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) 10, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList5 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList5, doubleArray4);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList5);
        java.lang.Class<?> wildcardClass8 = doubleList5.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray33);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray33, doubleArray72);
        java.lang.Class<?> wildcardClass75 = doubleList74.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray65);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) 10, doubleArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleList67);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray35);
        java.lang.Class<?> wildcardClass38 = doubleArray35.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray65);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (-1), doubleArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleList67);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        java.lang.Class<?> wildcardClass10 = doubleList9.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray69);
        java.lang.Class<?> wildcardClass72 = doubleArray71.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray35);
        java.lang.Class<?> wildcardClass38 = doubleArray37.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray65);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) '4', doubleArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleList67);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        double[] doubleArray7 = new double[] { 0, (byte) 0, 0.0f, ' ', 'a' };
        double[][] doubleArray8 = new double[][] { doubleArray7 };
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray9 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) 0, doubleArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 0.0, 0.0, 32.0, 97.0]");
        org.junit.Assert.assertNotNull(doubleArray8);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray36);
        java.lang.Class<?> wildcardClass38 = doubleArray36.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList69);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray67);
        java.lang.Class<?> wildcardClass69 = doubleArray67.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray32 = new double[][] { doubleArray10, doubleArray17, doubleArray24, doubleArray31 };
        double[][] doubleArray33 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray32);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (-1), doubleArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) -1, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray31 = new double[][] { doubleArray9, doubleArray16, doubleArray23, doubleArray30 };
        double[][] doubleArray32 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray31);
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray63 = new double[][] { doubleArray41, doubleArray48, doubleArray55, doubleArray62 };
        double[][] doubleArray64 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray63);
        java.util.ArrayList<java.lang.Double> doubleList65 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray32, doubleArray63);
        java.lang.Class<?> wildcardClass66 = doubleArray32.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(doubleList65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray35);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) 1, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        java.util.ArrayList<java.lang.Double> doubleList1 = null;
        java.util.ArrayList<java.lang.Double> doubleList2 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList1);
        java.lang.Class<?> wildcardClass3 = doubleList2.getClass();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray39);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray39);
        java.lang.Class<?> wildcardClass44 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        java.util.ArrayList<java.lang.Double> doubleList1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList2 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.ArrayList.get(int)\" because \"matrix\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        double[] doubleArray8 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray39 = new double[][] { doubleArray8, doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray54 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray60 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray66 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray72 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray78 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray79 = new double[][] { doubleArray48, doubleArray54, doubleArray60, doubleArray66, doubleArray72, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray39, doubleArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 5 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray38, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList78);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray38, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList78);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList5 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList5, doubleArray4);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList5);
        java.lang.Class<?> wildcardClass8 = doubleList7.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList79);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray35, doubleArray74);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray74);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray35, doubleArray74);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray74);
        java.lang.Class<?> wildcardClass78 = doubleArray74.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray36);
        java.lang.Class<?> wildcardClass72 = doubleArray36.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', 100, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 0, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray34, doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList75);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray67);
        java.lang.Class<?> wildcardClass69 = doubleArray67.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray38);
        java.lang.Class<?> wildcardClass41 = doubleArray38.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray37);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray37, doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray37.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray38);
        java.lang.Class<?> wildcardClass41 = doubleArray40.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray38);
        java.lang.Class<?> wildcardClass41 = doubleArray40.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        double[][] doubleArray3 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNull(doubleArray46);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray38);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '#', doubleArray38, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList5 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList5, doubleArray4);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList5);
        java.lang.Class<?> wildcardClass8 = doubleList7.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        java.lang.Class<?> wildcardClass10 = doubleList6.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) 'a', doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray35);
        java.lang.Class<?> wildcardClass38 = doubleArray35.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (byte) 1, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) 10, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray35);
        java.lang.Class<?> wildcardClass38 = doubleArray37.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (short) 10, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray39);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) ' ', doubleArray41, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray39);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray39);
        java.lang.Class<?> wildcardClass44 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { (-1.0d), 0.0d, 0.0d, 100.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray69);
        java.lang.Class<?> wildcardClass72 = doubleArray69.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray38, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList78);
        java.lang.Class<?> wildcardClass80 = doubleList79.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray37, doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray76);
        java.lang.Class<?> wildcardClass81 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        com.thealgorithms.maths.Gaussian gaussian0 = new com.thealgorithms.maths.Gaussian();
        java.lang.Class<?> wildcardClass1 = gaussian0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 1, doubleArray67);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (short) 10, doubleArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleArray70);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray38);
        java.lang.Class<?> wildcardClass41 = doubleArray38.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray39);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray39);
        java.lang.Class<?> wildcardClass44 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (short) 100, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (-1), doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        double[] doubleArray8 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray39 = new double[][] { doubleArray8, doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray76);
        java.lang.Class<?> wildcardClass80 = doubleArray76.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray34);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray35, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray37, doubleArray70);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray37);
        java.lang.Class<?> wildcardClass75 = doubleArray74.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray37, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList73);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        java.util.ArrayList<java.lang.Double> doubleList1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList2 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.ArrayList.get(int)\" because \"matrix\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray32 = new double[][] { doubleArray10, doubleArray17, doubleArray24, doubleArray31 };
        double[][] doubleArray33 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray32);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 10, doubleArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', 0, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray34);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray77);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray77);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray35, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray78);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray78);
        java.lang.Class<?> wildcardClass84 = doubleArray78.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList79);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray36, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList72);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray38, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList78);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray32 = new double[][] { doubleArray10, doubleArray17, doubleArray24, doubleArray31 };
        double[][] doubleArray33 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray32);
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray33);
        java.lang.Class<?> wildcardClass35 = doubleArray33.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) -1, doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray36);
        java.lang.Class<?> wildcardClass72 = doubleArray71.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray37, doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 0, doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleArray79.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        double[] doubleArray7 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray38 = new double[][] { doubleArray7, doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        java.lang.Class<?> wildcardClass40 = doubleArray38.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray36, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList72);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray37);
        java.lang.Class<?> wildcardClass41 = doubleArray37.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray34);
        java.lang.Class<?> wildcardClass38 = doubleArray37.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) 1, doubleArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (-1), doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray67);
        java.lang.Class<?> wildcardClass69 = doubleList68.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray38, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList78);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (byte) 10, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList79);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        double[][] doubleArray2 = null;
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray2, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList44);
        java.lang.Class<?> wildcardClass46 = doubleList44.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) 'a', doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        double[] doubleArray8 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray39 = new double[][] { doubleArray8, doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray76);
        java.lang.Class<?> wildcardClass80 = doubleList79.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        double[][] doubleArray3 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) 'a', doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNull(doubleArray46);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        double[] doubleArray9 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray40 = new double[][] { doubleArray9, doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) -1, doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 5 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray33);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray73);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray35, doubleArray73);
        java.lang.Class<?> wildcardClass78 = doubleArray73.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray32 = new double[][] { doubleArray10, doubleArray17, doubleArray24, doubleArray31 };
        double[][] doubleArray33 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray32);
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray33);
        java.lang.Class<?> wildcardClass35 = doubleArray33.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray71);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray71);
        java.lang.Class<?> wildcardClass75 = doubleArray74.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) '#', doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray41);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', 10, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        java.util.ArrayList<java.lang.Double> doubleList1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList2 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.ArrayList.get(int)\" because \"matrix\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 1, doubleArray67);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 10, doubleArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleArray70);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        java.util.ArrayList<java.lang.Double> doubleList3 = null;
        java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList3);
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleList5);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList7);
        java.lang.Class<?> wildcardClass11 = doubleList7.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray32 = new double[][] { doubleArray10, doubleArray17, doubleArray24, doubleArray31 };
        double[][] doubleArray33 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray32);
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray32);
        java.lang.Class<?> wildcardClass35 = doubleArray34.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList79);
        java.lang.Class<?> wildcardClass82 = doubleList79.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        double[] doubleArray9 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray40 = new double[][] { doubleArray9, doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray41, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList80);
        java.lang.Class<?> wildcardClass82 = doubleList80.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray36);
        java.lang.Class<?> wildcardClass72 = doubleArray71.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        java.util.ArrayList<java.lang.Double> doubleList3 = null;
        java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList3);
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList5);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleList5);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray37, doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray76);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (short) 10, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.lang.Class<?> wildcardClass12 = doubleList10.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray38, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList78);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (short) 0, doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (short) 100, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (short) -1, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 5 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        double[][] doubleArray1 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray1, doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray43);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (short) 1, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray36);
        java.lang.Class<?> wildcardClass72 = doubleArray36.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, 100, doubleArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray37, doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 0, doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray42);
        java.lang.Class<?> wildcardClass83 = doubleArray82.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray31 = new double[][] { doubleArray9, doubleArray16, doubleArray23, doubleArray30 };
        double[][] doubleArray32 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray31);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray32, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        double[] doubleArray8 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray30 = new double[][] { doubleArray8, doubleArray15, doubleArray22, doubleArray29 };
        double[][] doubleArray31 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray30);
        java.lang.Class<?> wildcardClass32 = doubleArray30.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray35);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (byte) 0, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        java.util.ArrayList<java.lang.Double> doubleList1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList2 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.ArrayList.get(int)\" because \"matrix\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray35);
        java.lang.Class<?> wildcardClass38 = doubleArray35.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (short) 0, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList79);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        double[][] doubleArray3 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList45);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray39);
        double[][] doubleArray44 = new double[][] {};
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray39, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray35);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) 10, doubleArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        double[] doubleArray9 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray40 = new double[][] { doubleArray9, doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray41, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) 0, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList79);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        java.util.ArrayList<java.lang.Double> doubleList1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList2 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) 1, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, 1, doubleArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (byte) 0, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        double[][] doubleArray3 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList46);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray38, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList78);
        java.lang.Class<?> wildcardClass80 = doubleList78.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (short) 10, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) 'a', doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        double[][] doubleArray4 = new double[][] {};
        double[][] doubleArray5 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray4);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray6 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) 1, doubleArray4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray5);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray35);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray76);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray38, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) 'a', doubleArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.lang.Class<?> wildcardClass10 = doubleList9.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray80);
        double[][] doubleArray85 = null;
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray84, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList86);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.lang.Class<?> wildcardClass12 = doubleList11.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        java.util.ArrayList<java.lang.Double> doubleList3 = null;
        java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList3);
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList3);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleList5);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray36, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList72);
        java.lang.Class<?> wildcardClass74 = doubleList72.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) 100, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray35, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, 0, doubleArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 10, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 5 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray38);
        java.lang.Class<?> wildcardClass41 = doubleArray38.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) 1, doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        double[][] doubleArray1 = null;
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 0, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray1, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray35);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray72);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray38, doubleArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        double[][] doubleArray1 = null;
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray39);
        java.util.ArrayList<java.lang.Double> doubleList43 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray1, doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray42.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleList43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray35);
        double[][] doubleArray37 = null;
        java.util.ArrayList<java.lang.Double> doubleList38 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList39 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList38);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleList38);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray37);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray37, doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleList77.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray33);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray73);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray35, doubleArray73);
        java.lang.Class<?> wildcardClass78 = doubleList77.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray37);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) 'a', doubleArray37, doubleArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray42);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray46);
        double[][] doubleArray51 = null;
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray51, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '4', doubleArray47, doubleArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        java.util.ArrayList<java.lang.Double> doubleList4 = null;
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.ArrayList.get(int)\" because \"matrix\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        double[][] doubleArray2 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray75);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray42);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray2, doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList7);
        java.lang.Class<?> wildcardClass11 = doubleList7.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        double[][] doubleArray2 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray75);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray42);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray2, doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList67);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList67);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleList67);
        org.junit.Assert.assertNotNull(doubleList68);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d, 0.0d, (-1.0d), 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList6);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray78);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray78);
        java.lang.Class<?> wildcardClass84 = doubleArray78.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        java.lang.Double[] doubleArray3 = new java.lang.Double[] { 1.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList4 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList4, doubleArray3);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 2 out of bounds for length 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList79);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, 10, doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        double[][] doubleArray2 = new double[][] {};
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray2);
        java.lang.Class<?> wildcardClass4 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray73);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray73);
        double[][] doubleArray77 = null;
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray76, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList78);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray32 = new double[][] { doubleArray10, doubleArray17, doubleArray24, doubleArray31 };
        double[][] doubleArray33 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray32);
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray64 = new double[][] { doubleArray42, doubleArray49, doubleArray56, doubleArray63 };
        double[][] doubleArray65 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray64);
        java.util.ArrayList<java.lang.Double> doubleList66 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray33, doubleArray64);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList66);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleList66);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (byte) 10, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        double[] doubleArray9 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray40 = new double[][] { doubleArray9, doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray76);
        double[][] doubleArray83 = new double[][] {};
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray76, doubleArray84);
        java.lang.Class<?> wildcardClass86 = doubleArray84.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        double[][] doubleArray4 = new double[][] {};
        double[][] doubleArray5 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray4);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray6 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) '4', doubleArray4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray5);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList7);
        java.lang.Class<?> wildcardClass12 = doubleList7.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList83);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        java.lang.Class<?> wildcardClass12 = doubleList11.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) '4', doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray42);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray46);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray46, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray33);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) ' ', doubleArray33, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray74);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray36, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList78);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray32 = new double[][] { doubleArray10, doubleArray17, doubleArray24, doubleArray31 };
        double[][] doubleArray33 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray32);
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray33);
        java.lang.Class<?> wildcardClass35 = doubleArray34.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray80);
        double[][] doubleArray85 = null;
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray84, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList86);
        java.lang.Class<?> wildcardClass88 = doubleList87.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray65);
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 1, doubleArray65);
        java.lang.Class<?> wildcardClass69 = doubleArray68.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleList67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray44, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        double[][] doubleArray3 = new double[][] {};
        double[][] doubleArray4 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray3);
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray4, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray36);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        java.lang.Class<?> wildcardClass41 = doubleArray40.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.lang.Class<?> wildcardClass13 = doubleList11.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray71);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray73);
        java.lang.Class<?> wildcardClass75 = doubleArray74.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', 100, doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        double[][] doubleArray2 = new double[][] {};
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray2);
        java.lang.Class<?> wildcardClass4 = doubleArray2.getClass();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        double[][] doubleArray3 = new double[][] {};
        double[][] doubleArray4 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray3);
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray47 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray48 = new double[][] { doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray49, doubleArray85);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray49);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '#', doubleArray4, doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray36);
        java.lang.Class<?> wildcardClass72 = doubleArray36.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray65);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 100, doubleArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleList67);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray34);
        double[][] doubleArray36 = null;
        java.util.ArrayList<java.lang.Double> doubleList37 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray36);
        java.lang.Class<?> wildcardClass38 = doubleArray35.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleList37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) 10, doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        double[][] doubleArray3 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList45);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) 1, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList79);
        java.lang.Class<?> wildcardClass82 = doubleList81.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) -1, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray71);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray71);
        java.lang.Class<?> wildcardClass75 = doubleArray71.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray77);
        double[][] doubleArray84 = new double[][] {};
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray77, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList86);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        double[] doubleArray3 = new double[] { (byte) 1, 100.0f };
        double[] doubleArray6 = new double[] { (byte) 1, 100.0f };
        double[] doubleArray9 = new double[] { (byte) 1, 100.0f };
        double[] doubleArray12 = new double[] { (byte) 1, 100.0f };
        double[][] doubleArray13 = new double[][] { doubleArray3, doubleArray6, doubleArray9, doubleArray12 };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray51 = new double[][] { doubleArray29, doubleArray36, doubleArray43, doubleArray50 };
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray51);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray51, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray90);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) 'a', doubleArray13, doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[100.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) 'a', doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray78);
        double[][] doubleArray85 = new double[][] {};
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray78, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) 0, doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray34);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray35, doubleArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        java.util.ArrayList<java.lang.Double> doubleList2 = null;
        java.util.ArrayList<java.lang.Double> doubleList3 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList2);
        java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList3);
        java.lang.Class<?> wildcardClass5 = doubleList4.getClass();
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray37, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList74);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray82);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray82);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray82);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray88);
        java.lang.Class<?> wildcardClass90 = doubleArray88.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray39);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray44);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray44);
        java.lang.Class<?> wildcardClass86 = doubleArray85.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray39);
        java.lang.Class<?> wildcardClass41 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) 10, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        double[][] doubleArray1 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray82);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray82);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) 'a', doubleArray1, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray36, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList72);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        double[][] doubleArray2 = null;
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray2, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) '#', doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray42);
        java.lang.Class<?> wildcardClass83 = doubleArray42.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray74);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray36, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList78);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        double[][] doubleArray2 = null;
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray2, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList7);
        java.lang.Class<?> wildcardClass11 = doubleList10.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray36);
        double[][] doubleArray38 = null;
        java.util.ArrayList<java.lang.Double> doubleList39 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) '#', doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleList39);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 0, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (short) -1, doubleArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray44);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray44);
        java.lang.Class<?> wildcardClass86 = doubleArray44.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        java.util.ArrayList<java.lang.Double> doubleList2 = null;
        java.util.ArrayList<java.lang.Double> doubleList3 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList2);
        java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList2);
        java.lang.Class<?> wildcardClass5 = doubleList4.getClass();
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray78);
        double[][] doubleArray85 = new double[][] {};
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray78, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        double[][] doubleArray1 = null;
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray73);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '4', doubleArray1, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray75);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (short) -1, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 1, doubleArray67);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (short) 10, doubleArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleArray70);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        double[][] doubleArray1 = null;
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray39);
        java.util.ArrayList<java.lang.Double> doubleList43 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray1, doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleList43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleList43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray43, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray80);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray80);
        java.lang.Class<?> wildcardClass87 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray36);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) '4', doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        java.util.ArrayList<java.lang.Double> doubleList1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList2 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.ArrayList.get(int)\" because \"matrix\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray44);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray84);
        java.lang.Class<?> wildcardClass86 = doubleArray85.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (short) 1, doubleArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray33);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray35, doubleArray68);
        java.lang.Class<?> wildcardClass72 = doubleList71.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        java.lang.Class<?> wildcardClass10 = doubleList6.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray81);
        double[][] doubleArray86 = null;
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray85, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList88);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray44);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(10, doubleArray50, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray43);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(100, doubleArray44, doubleArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray82);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray82);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) -1, doubleArray88);
        java.lang.Class<?> wildcardClass90 = doubleArray88.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray73);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray73);
        double[][] doubleArray77 = null;
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray76, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList78);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 100, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (-1), doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray37, doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray76);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', 0, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray35);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (short) 10, doubleArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray78);
        double[][] doubleArray85 = new double[][] {};
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray78, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray35, doubleArray74);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray35);
        java.lang.Class<?> wildcardClass78 = doubleArray35.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) '4', doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        double[][] doubleArray5 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (-1), doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray80);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray85);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray39);
        java.lang.Class<?> wildcardClass78 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray78);
        java.lang.Class<?> wildcardClass81 = doubleArray78.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) '4', doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray65);
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray65);
        java.lang.Class<?> wildcardClass69 = doubleArray65.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleList67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (short) 100, doubleArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 5 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList70);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList71);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList9);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, 0, doubleArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray43);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 1, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray78);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray78);
        java.lang.Class<?> wildcardClass84 = doubleArray83.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray41);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray45);
        java.lang.Class<?> wildcardClass47 = doubleArray45.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList79);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        double[][] doubleArray2 = null;
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray2, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 1, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        double[][] doubleArray3 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList45);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray35);
        double[][] doubleArray37 = null;
        java.util.ArrayList<java.lang.Double> doubleList38 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray37);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 100, doubleArray37, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleList38);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray32 = new double[][] { doubleArray10, doubleArray17, doubleArray24, doubleArray31 };
        double[][] doubleArray33 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray32);
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray64 = new double[][] { doubleArray42, doubleArray49, doubleArray56, doubleArray63 };
        double[][] doubleArray65 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray64);
        java.util.ArrayList<java.lang.Double> doubleList66 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray33, doubleArray64);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList66);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleList66);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray38);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) ' ', doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray43, doubleArray81);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray81);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) 'a', doubleArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        java.util.ArrayList<java.lang.Double> doubleList1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList2 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.ArrayList.get(int)\" because \"matrix\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray80);
        double[][] doubleArray85 = null;
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray84, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList86);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(10, doubleArray43, doubleArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) 100, doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) 1, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray36, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList72);
        java.lang.Class<?> wildcardClass74 = doubleList73.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList82);
        java.lang.Class<?> wildcardClass84 = doubleList82.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        java.util.ArrayList<java.lang.Double> doubleList2 = null;
        java.util.ArrayList<java.lang.Double> doubleList3 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList2);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList3);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray35);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) -1, doubleArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList67);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList68);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleList67);
        org.junit.Assert.assertNotNull(doubleList68);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray40);
        java.lang.Class<?> wildcardClass44 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray38);
        java.lang.Class<?> wildcardClass41 = doubleArray40.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray78);
        double[][] doubleArray85 = new double[][] {};
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray78, doubleArray86);
        double[][] doubleArray90 = new double[][] {};
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray78, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList92);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList70);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        double[][] doubleArray1 = null;
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray51);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) ' ', doubleArray1, doubleArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        double[][] doubleArray3 = new double[][] {};
        double[][] doubleArray4 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray3);
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList40 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 10, doubleArray4, doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.lang.Class<?> wildcardClass11 = doubleList7.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray41);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray45);
        java.lang.Class<?> wildcardClass47 = doubleArray45.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray43);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray43);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) ' ', doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) 100, doubleArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (-1), doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.lang.Class<?> wildcardClass12 = doubleList11.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) 10, doubleArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 100, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray37);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian(100, doubleArray37, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, 0, doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray36);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray39);
        java.lang.Class<?> wildcardClass41 = doubleArray40.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        double[][] doubleArray3 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) -1, doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNull(doubleArray46);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) 'a', doubleArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray43);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray48);
        java.lang.Class<?> wildcardClass50 = doubleArray48.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray35);
        java.lang.Class<?> wildcardClass38 = doubleArray37.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray80);
        double[][] doubleArray85 = null;
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray84, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList86);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray42.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 1, doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray41);
        java.lang.Class<?> wildcardClass44 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, 10, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray35, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) -1, doubleArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (short) 1, doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        double[][] doubleArray1 = null;
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList43 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 100, doubleArray1, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray81);
        double[][] doubleArray86 = null;
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray85, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 100, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray44);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray44);
        java.lang.Class<?> wildcardClass86 = doubleArray85.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray37, doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (short) -1, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        double[] doubleArray8 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray39 = new double[][] { doubleArray8, doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray76);
        java.lang.Class<?> wildcardClass80 = doubleArray40.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) '#', doubleArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 5 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray69);
        java.lang.Class<?> wildcardClass72 = doubleArray71.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray34, doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList75);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        double[][] doubleArray4 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList47);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray77);
        double[][] doubleArray84 = new double[][] {};
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray77, doubleArray85);
        double[][] doubleArray89 = new double[][] {};
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray77, doubleArray90);
        java.lang.Class<?> wildcardClass92 = doubleList91.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray38, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList78);
        java.lang.Class<?> wildcardClass80 = doubleList79.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray35, doubleArray74);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray35);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray38);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, 10, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        double[][] doubleArray3 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList46);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.lang.Class<?> wildcardClass11 = doubleList10.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        double[][] doubleArray4 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList47);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray32 = new double[][] { doubleArray10, doubleArray17, doubleArray24, doubleArray31 };
        double[][] doubleArray33 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray32);
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray64 = new double[][] { doubleArray42, doubleArray49, doubleArray56, doubleArray63 };
        double[][] doubleArray65 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray64);
        java.util.ArrayList<java.lang.Double> doubleList66 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray33, doubleArray64);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList66);
        java.lang.Class<?> wildcardClass68 = doubleList67.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleList66);
        org.junit.Assert.assertNotNull(doubleList67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray42);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray47, doubleArray83);
        java.lang.Class<?> wildcardClass87 = doubleList86.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray35);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '#', doubleArray35, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray82);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray82);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray88);
        java.lang.Class<?> wildcardClass90 = doubleArray88.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray42);
        double[][] doubleArray44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 10, doubleArray43, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray39);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray42.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray34);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray75);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray34, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray35, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) '4', doubleArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray39, doubleArray77);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray77);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray82);
        java.lang.Class<?> wildcardClass84 = doubleArray82.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 1, doubleArray51);
        java.lang.Class<?> wildcardClass53 = doubleArray52.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        double[][] doubleArray2 = null;
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray2, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList44);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) ' ', doubleArray43);
        java.lang.Class<?> wildcardClass47 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray78);
        double[][] doubleArray85 = new double[][] {};
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray78, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) '4', doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        double[][] doubleArray3 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.lang.Class<?> wildcardClass48 = doubleList47.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        java.lang.Class<?> wildcardClass53 = doubleArray52.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray78);
        double[][] doubleArray85 = new double[][] {};
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray78, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList88);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        double[] doubleArray9 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray40 = new double[][] { doubleArray9, doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray76);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray67);
        java.lang.Class<?> wildcardClass69 = doubleArray34.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray37);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray40);
        double[][] doubleArray44 = new double[][] {};
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(10, doubleArray41, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray44);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray48);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) 'a', doubleArray48, doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList69);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray34);
        double[][] doubleArray36 = null;
        java.util.ArrayList<java.lang.Double> doubleList37 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray36);
        java.lang.Class<?> wildcardClass38 = doubleList37.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleList37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (short) 100, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 5 out of bounds for length 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        java.util.ArrayList<java.lang.Double> doubleList3 = null;
        java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList3);
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList3);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList5);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleList5);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) 0, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray41);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray41);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) '#', doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList69);
        java.lang.Class<?> wildcardClass71 = doubleList69.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, 10, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, 0, doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        java.lang.Class<?> wildcardClass10 = doubleList9.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) 'a', doubleArray41, doubleArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray39);
        java.lang.Class<?> wildcardClass41 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (-1), doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray41, doubleArray79);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray79);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) '4', doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray39, doubleArray77);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray77);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray82);
        java.lang.Class<?> wildcardClass84 = doubleArray83.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        java.lang.Double[] doubleArray2 = new java.lang.Double[] { 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList3 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList3, doubleArray2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray39);
        java.lang.Class<?> wildcardClass41 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray38);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) 1, doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        double[] doubleArray1 = new double[] {};
        double[] doubleArray2 = new double[] {};
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        double[] doubleArray5 = new double[] {};
        double[] doubleArray6 = new double[] {};
        double[][] doubleArray7 = new double[][] { doubleArray1, doubleArray2, doubleArray3, doubleArray4, doubleArray5, doubleArray6 };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) ' ', doubleArray7, doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[]");
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray36, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList72);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray79);
        double[][] doubleArray86 = new double[][] {};
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray79, doubleArray87);
        double[][] doubleArray91 = new double[][] {};
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray79, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) '#', doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray74);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray36, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList78);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray42.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }
}

