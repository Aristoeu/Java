package Gaussian;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray43);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray47);
        java.lang.Class<?> wildcardClass50 = doubleArray47.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray37, doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray37);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray37);
        java.lang.Class<?> wildcardClass81 = doubleArray37.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        java.util.ArrayList<java.lang.Double> doubleList4 = null;
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList5);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray81);
        double[][] doubleArray86 = null;
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray85, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList88);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray75);
        java.lang.Class<?> wildcardClass78 = doubleArray75.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) 'a', doubleArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList69);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray42);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '#', doubleArray42);
        double[][] doubleArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) 'a', doubleArray42, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray76.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (byte) 100, doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, 10, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray65);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 0, doubleArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleList67);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList67);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList67);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleList67);
        org.junit.Assert.assertNotNull(doubleList68);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) ' ', doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 10, doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray48);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray48);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray52);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray52, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) -1, doubleArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray44);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray49, doubleArray86);
        java.lang.Class<?> wildcardClass90 = doubleList89.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray39);
        java.lang.Class<?> wildcardClass41 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 10, doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray42.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) 'a', doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (byte) 10, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (byte) 1, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray35);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray35);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray75);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray35, doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleArray79.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList9);
        java.lang.Class<?> wildcardClass15 = doubleList9.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray36);
        double[][] doubleArray38 = null;
        java.util.ArrayList<java.lang.Double> doubleList39 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) ' ', doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleList39);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (short) 1, doubleArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray79);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (byte) 1, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) ' ', doubleArray43);
        java.lang.Class<?> wildcardClass47 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray39);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray84);
        java.lang.Class<?> wildcardClass87 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray46, doubleArray81);
        double[][] doubleArray88 = new double[][] {};
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray81, doubleArray89);
        double[][] doubleArray93 = new double[][] {};
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray81, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray81);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        java.lang.Class<?> wildcardClass98 = doubleArray81.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray37, doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray37);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleArray79.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        java.lang.Class<?> wildcardClass17 = doubleList16.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) 1, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray67);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray67);
        java.lang.Class<?> wildcardClass72 = doubleArray71.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray38, doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList74);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList74);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleList76);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray46);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray46);
        java.lang.Class<?> wildcardClass89 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray47);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray51);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) ' ', doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (byte) 1, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) -1, doubleArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (byte) 10, doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        double[] doubleArray4 = new double[] {};
        double[][] doubleArray5 = new double[][] { doubleArray4 };
        double[][] doubleArray6 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray5);
        double[][] doubleArray7 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray6);
        java.lang.Class<?> wildcardClass8 = doubleArray6.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray82);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray82);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 100, doubleArray82);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray82);
        java.lang.Class<?> wildcardClass90 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray41);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList88);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 0, doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList70);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.lang.Class<?> wildcardClass15 = doubleList14.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray85);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray36);
        double[][] doubleArray38 = null;
        java.util.ArrayList<java.lang.Double> doubleList39 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray38);
        java.util.ArrayList<java.lang.Double> doubleList40 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList39);
        java.util.ArrayList<java.lang.Double> doubleList41 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList39);
        java.lang.Class<?> wildcardClass42 = doubleList39.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleList39);
        org.junit.Assert.assertNotNull(doubleList40);
        org.junit.Assert.assertNotNull(doubleList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) ' ', doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray71);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray73);
        java.lang.Class<?> wildcardClass75 = doubleArray73.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList84);
        java.lang.Class<?> wildcardClass86 = doubleList85.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray72);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray41);
        java.lang.Class<?> wildcardClass44 = doubleArray41.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 100, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray36);
        double[][] doubleArray38 = null;
        java.util.ArrayList<java.lang.Double> doubleList39 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray38);
        java.util.ArrayList<java.lang.Double> doubleList40 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList39);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList41 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList40);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleList39);
        org.junit.Assert.assertNotNull(doubleList40);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        double[][] doubleArray1 = null;
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray36);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList40 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray1, doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray37, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList74);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray44);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray48);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray49, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList89);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        java.util.ArrayList<java.lang.Double> doubleList4 = null;
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray40);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray71);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray71);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray71);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 1, doubleArray71);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray76.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 100, doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) 100, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray80);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 100, doubleArray80);
        java.lang.Class<?> wildcardClass87 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, 100, doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray53);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray56);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (-1), doubleArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray43);
        java.lang.Class<?> wildcardClass47 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) -1, doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) -1, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray37, doubleArray75);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray75);
        java.lang.Class<?> wildcardClass81 = doubleArray75.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray54);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray91 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray92 = new double[][] { doubleArray70, doubleArray77, doubleArray84, doubleArray91 };
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray57, doubleArray94);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) ' ', doubleArray94);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (short) 10, doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray43, doubleArray79);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray79);
        double[][] doubleArray84 = null;
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray83, doubleArray84);
        java.lang.Class<?> wildcardClass86 = doubleList85.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray73);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray73);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray73);
        java.lang.Class<?> wildcardClass78 = doubleArray73.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray38, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList78);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 10, doubleArray81);
        java.lang.Class<?> wildcardClass84 = doubleArray81.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', 1, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) -1, doubleArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 10, doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        double[][] doubleArray1 = null;
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray67);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray1, doubleArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleArray70);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, 1, doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray36);
        double[][] doubleArray38 = null;
        java.util.ArrayList<java.lang.Double> doubleList39 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray38);
        java.util.ArrayList<java.lang.Double> doubleList40 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList39);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList41 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList40);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleList39);
        org.junit.Assert.assertNotNull(doubleList40);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, 10, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray41);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray41);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray41);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 10, doubleArray85);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList69);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        double[][] doubleArray1 = null;
        double[][] doubleArray2 = new double[][] {};
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList3 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray1, doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.lang.Class<?> wildcardClass13 = doubleList11.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        double[][] doubleArray1 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '#', doubleArray1, doubleArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray43);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray43);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray43);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray82);
        java.lang.Class<?> wildcardClass84 = doubleArray82.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray73);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray73);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray73);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 1, doubleArray73);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) ' ', doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray41);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '#', doubleArray41);
        java.lang.Class<?> wildcardClass84 = doubleArray41.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray41);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 10, doubleArray41);
        java.lang.Class<?> wildcardClass47 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray81);
        double[][] doubleArray86 = null;
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray85, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray46);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray90);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray93);
        java.lang.Class<?> wildcardClass96 = doubleArray93.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray42);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList89);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) '#', doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray80);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 100, doubleArray80);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray35);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray71);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList75);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray44);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList95);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.lang.Class<?> wildcardClass81 = doubleArray78.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray47, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) ' ', doubleArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) '#', doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (short) -1, doubleArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray35);
        double[][] doubleArray37 = null;
        java.util.ArrayList<java.lang.Double> doubleList38 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray37);
        java.util.ArrayList<java.lang.Double> doubleList39 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList38);
        java.lang.Class<?> wildcardClass40 = doubleList38.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleList38);
        org.junit.Assert.assertNotNull(doubleList39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (-1), doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray76.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray86);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray41, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (short) 10, doubleArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray79);
        double[][] doubleArray86 = new double[][] {};
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray79, doubleArray87);
        double[][] doubleArray91 = new double[][] {};
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray79, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 1, doubleArray92);
        java.lang.Class<?> wildcardClass95 = doubleArray94.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList72);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList79);
        java.lang.Class<?> wildcardClass82 = doubleList79.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 0, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 100, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 0, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        double[][] doubleArray2 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray75);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray42);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray2, doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray82);
        double[][] doubleArray87 = null;
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray86, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList89);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray38, doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList76);
        java.lang.Class<?> wildcardClass78 = doubleList76.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        java.util.ArrayList<java.lang.Double> doubleList3 = null;
        java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList3);
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList4);
        java.lang.Class<?> wildcardClass7 = doubleList6.getClass();
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray36);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, 0, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        java.util.ArrayList<java.lang.Double> doubleList4 = null;
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList4);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray72);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (short) 1, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray84);
        java.lang.Class<?> wildcardClass86 = doubleArray85.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray37);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 10, doubleArray38, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        double[] doubleArray8 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray39 = new double[][] { doubleArray8, doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray75);
        java.lang.Class<?> wildcardClass80 = doubleList79.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray40);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 100, doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) '4', doubleArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray80);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray80);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray53, doubleArray94);
        java.lang.Class<?> wildcardClass96 = doubleList95.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray44);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray44);
        java.lang.Class<?> wildcardClass86 = doubleArray85.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray43, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList83);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray39);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray41);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray41);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray41);
        java.lang.Class<?> wildcardClass81 = doubleArray41.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        double[][] doubleArray4 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList47);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray77);
        double[][] doubleArray84 = new double[][] {};
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray77, doubleArray85);
        double[][] doubleArray89 = new double[][] {};
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray77, doubleArray90);
        java.lang.Class<?> wildcardClass92 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 100, doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) 10, doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        double[][] doubleArray3 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList45);
        java.lang.Class<?> wildcardClass48 = doubleList47.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray39);
        java.lang.Class<?> wildcardClass81 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray44);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray80);
        java.lang.Class<?> wildcardClass84 = doubleArray83.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList70);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList70);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        java.lang.Class<?> wildcardClass19 = doubleList16.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray32 = new double[][] { doubleArray10, doubleArray17, doubleArray24, doubleArray31 };
        double[][] doubleArray33 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray32);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (short) 100, doubleArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.lang.Class<?> wildcardClass16 = doubleList9.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray42);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray46);
        double[][] doubleArray51 = null;
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray51, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray46, doubleArray92);
        java.lang.Class<?> wildcardClass96 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (short) 1, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList8);
        java.lang.Class<?> wildcardClass14 = doubleList8.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 100, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray42);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray46);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray47, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray42);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray41);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray45, doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray44);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray48);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray49, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) '4', doubleArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray45, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 10, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) 1, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray44);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList95);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList74);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (short) 1, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray75);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray75);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, 1, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray71);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray71);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray71);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) -1, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 100, doubleArray35);
        java.lang.Class<?> wildcardClass38 = doubleArray37.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray45);
        java.lang.Class<?> wildcardClass47 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.lang.Class<?> wildcardClass15 = doubleList12.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray42);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 100, doubleArray46, doubleArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray79);
        double[][] doubleArray86 = new double[][] {};
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray79, doubleArray87);
        double[][] doubleArray91 = new double[][] {};
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray79, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray79);
        java.lang.Class<?> wildcardClass95 = doubleArray79.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray44);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray44, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (short) 1, doubleArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList92);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray46);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray46);
        java.lang.Class<?> wildcardClass89 = doubleArray88.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        double[][] doubleArray3 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray43);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray3, doubleArray43);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) ' ', doubleArray3);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNull(doubleArray83);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray45, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 10, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, 1, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray49);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 10, doubleArray49, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray50);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray50);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) '4', doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray49);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian(10, doubleArray49, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray38);
        java.lang.Class<?> wildcardClass41 = doubleArray40.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 0, doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray40);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray41);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) 'a', doubleArray82);
        java.lang.Class<?> wildcardClass84 = doubleArray83.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        double[][] doubleArray5 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList48);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList50);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray81);
        double[][] doubleArray86 = null;
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray85, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) 'a', doubleArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray51);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray51);
        java.lang.Class<?> wildcardClass56 = doubleArray55.getClass();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray49, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 1, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray91);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray94);
        java.lang.Class<?> wildcardClass96 = doubleArray95.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) ' ', doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray35);
        java.lang.Class<?> wildcardClass38 = doubleArray37.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        double[][] doubleArray4 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList48);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        double[][] doubleArray4 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList46);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList46);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        double[] doubleArray5 = new double[] {};
        double[][] doubleArray6 = new double[][] { doubleArray3, doubleArray4, doubleArray5 };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray49);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray6, doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (byte) -1, doubleArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleList51);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray71);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray71);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray71);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) ' ', doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray39);
        double[][] doubleArray75 = null;
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) 1, doubleArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList76);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) -1, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        double[][] doubleArray1 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray44);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray48);
        double[][] doubleArray53 = null;
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray53, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray48, doubleArray94);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 100, doubleArray1, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleList97);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        double[] doubleArray6 = new double[] {};
        double[][] doubleArray7 = new double[][] { doubleArray6 };
        double[][] doubleArray8 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray7);
        double[][] doubleArray9 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray8);
        double[][] doubleArray10 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray8);
        java.lang.Class<?> wildcardClass11 = doubleArray8.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 100, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) 10, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray43, doubleArray79);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray79);
        double[][] doubleArray84 = null;
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray83, doubleArray84);
        java.lang.Class<?> wildcardClass86 = doubleArray83.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray51);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray54, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList92);
        java.lang.Class<?> wildcardClass95 = doubleList92.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray36);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray36, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.lang.Class<?> wildcardClass83 = doubleList82.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray37, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList73);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList73);
        java.lang.Class<?> wildcardClass76 = doubleList75.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) ' ', doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        double[][] doubleArray4 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList47);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList71);
        java.lang.Class<?> wildcardClass74 = doubleList73.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 100, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray43);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray43);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray43);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 10, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) 'a', doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray42);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '4', doubleArray42, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList6);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray42);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList70);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) '#', doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        double[] doubleArray6 = new double[] {};
        double[][] doubleArray7 = new double[][] { doubleArray6 };
        double[][] doubleArray8 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray7);
        double[][] doubleArray9 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray8);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray10 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) 100, doubleArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray43);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) 'a', doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (short) 10, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray67);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (short) 10, doubleArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleArray70);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList68);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        double[][] doubleArray1 = null;
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList43 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray1, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray37, doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray37);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        double[][] doubleArray2 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray2, doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList47);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray81);
        double[][] doubleArray86 = null;
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray85, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList88);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray82);
        java.lang.Class<?> wildcardClass84 = doubleArray83.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        double[][] doubleArray2 = null;
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray54);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray54);
        java.util.ArrayList<java.lang.Double> doubleList59 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray2, doubleArray58);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList60 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList59);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleList59);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray75);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray75);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 1, doubleArray75);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) ' ', doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList83);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.lang.Class<?> wildcardClass13 = doubleList11.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        double[][] doubleArray1 = null;
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray53);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray53);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray53);
        java.util.ArrayList<java.lang.Double> doubleList58 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray1, doubleArray57);
        java.lang.Class<?> wildcardClass59 = doubleList58.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleList58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray42);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (short) 1, doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray53);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray56);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray57);
        java.lang.Class<?> wildcardClass59 = doubleArray58.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        double[][] doubleArray6 = new double[][] {};
        double[][] doubleArray7 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray6);
        double[][] doubleArray8 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray6);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray9 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) 100, doubleArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        double[][] doubleArray1 = null;
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray53);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray53);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray53);
        java.util.ArrayList<java.lang.Double> doubleList58 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray1, doubleArray57);
        java.lang.Class<?> wildcardClass59 = doubleArray57.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleList58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 1, doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray42.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) ' ', doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList9);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray82);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 0, doubleArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray38, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList78);
        java.lang.Class<?> wildcardClass80 = doubleList78.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray81);
        double[][] doubleArray86 = null;
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray85, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (short) 10, doubleArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray39);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray39);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray39);
        java.lang.Class<?> wildcardClass84 = doubleArray83.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList67);
        java.lang.Class<?> wildcardClass70 = doubleList69.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleList67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) '#', doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray43);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray44, doubleArray87);
        java.lang.Class<?> wildcardClass90 = doubleArray87.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.lang.Class<?> wildcardClass16 = doubleList15.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray41);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray45);
        java.lang.Class<?> wildcardClass47 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray38);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) 'a', doubleArray73);
        java.lang.Class<?> wildcardClass75 = doubleArray74.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        double[][] doubleArray5 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) ' ', doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray41);
        java.lang.Class<?> wildcardClass44 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        double[][] doubleArray5 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList48);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList50);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray51);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray51);
        java.lang.Class<?> wildcardClass56 = doubleArray51.getClass();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        double[] doubleArray2 = new double[] {};
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        double[][] doubleArray5 = new double[][] { doubleArray2, doubleArray3, doubleArray4 };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray48);
        double[][] doubleArray51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) ' ', doubleArray5, doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleList50);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray45, doubleArray83);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray83);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) 0, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray84);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray84);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 10, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, 10, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray75);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray82);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray82);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 100, doubleArray82);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '#', doubleArray82);
        java.lang.Class<?> wildcardClass90 = doubleArray82.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray80);
        double[][] doubleArray85 = null;
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray84, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList86);
        java.lang.Class<?> wildcardClass88 = doubleList87.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray38, doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList74);
        java.lang.Class<?> wildcardClass78 = doubleList77.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList72);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList72);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList69);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray42);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 100, doubleArray42, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) '4', doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        double[][] doubleArray2 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray2, doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList47);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) '#', doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 100, doubleArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray40);
        double[][] doubleArray82 = null;
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray40, doubleArray82);
        java.lang.Class<?> wildcardClass84 = doubleArray40.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.lang.Class<?> wildcardClass17 = doubleList16.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray42);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray73);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray73);
        double[][] doubleArray77 = null;
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray76, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList78);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList92);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        double[][] doubleArray5 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList50);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray47, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 10, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray49);
        java.lang.Class<?> wildcardClass53 = doubleArray52.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.lang.Class<?> wildcardClass84 = doubleList81.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 0, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 100, doubleArray82);
        java.lang.Class<?> wildcardClass84 = doubleArray83.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray47, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray86);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray86);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 0, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (byte) -1, doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray52);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray55, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) 0, doubleArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList72);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList72);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray38);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray38);
        java.lang.Class<?> wildcardClass75 = doubleArray74.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray43);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (byte) 100, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        double[] doubleArray7 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray38 = new double[][] { doubleArray7, doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        java.lang.Class<?> wildcardClass40 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray40);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray76.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        double[][] doubleArray5 = new double[][] {};
        double[][] doubleArray6 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray5);
        double[][] doubleArray7 = null;
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray5, doubleArray7);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray9 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) 0, doubleArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleList8);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        double[] doubleArray9 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray40 = new double[][] { doubleArray9, doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray85);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray85);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray40, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList92);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray80);
        double[][] doubleArray87 = new double[][] {};
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray80, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) '#', doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList16);
        java.lang.Class<?> wildcardClass19 = doubleList16.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        double[][] doubleArray1 = null;
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray41);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '4', doubleArray1, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        java.util.ArrayList<java.lang.Double> doubleList4 = null;
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList5);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, 100, doubleArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray43);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray47);
        java.lang.Class<?> wildcardClass50 = doubleArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        java.util.ArrayList<java.lang.Double> doubleList1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList2 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.ArrayList.get(int)\" because \"matrix\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        double[][] doubleArray4 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        java.lang.Class<?> wildcardClass50 = doubleList49.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray44);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray48);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray49, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList89);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray39);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray39);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray39);
        java.lang.Class<?> wildcardClass84 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) '#', doubleArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray35);
        java.lang.Class<?> wildcardClass38 = doubleArray37.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray41);
        double[][] doubleArray43 = null;
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList44);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        double[][] doubleArray1 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray43);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) ' ', doubleArray1, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray51);
        java.lang.Class<?> wildcardClass53 = doubleArray52.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray37);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray77);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray37, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray79);
        double[][] doubleArray86 = new double[][] {};
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray79, doubleArray87);
        double[][] doubleArray91 = new double[][] {};
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray79, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, 0, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray40);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 100, doubleArray41, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray39);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray39);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray39);
        java.lang.Class<?> wildcardClass84 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray37, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList73);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray37);
        double[][] doubleArray73 = null;
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray73);
        java.lang.Class<?> wildcardClass75 = doubleArray37.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        double[][] doubleArray5 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList50);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray41);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList88);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) 'a', doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray44);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray48);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray49, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList89);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray36, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList72);
        java.lang.Class<?> wildcardClass74 = doubleList72.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray38, doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList76);
        java.lang.Class<?> wildcardClass78 = doubleList77.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 1, doubleArray48);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 100, doubleArray48, doubleArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (short) 0, doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray44);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray44, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray86);
        java.lang.Class<?> wildcardClass90 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray42.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray43, doubleArray81);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray81);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray88);
        java.lang.Class<?> wildcardClass90 = doubleArray88.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray83);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray87, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray87);
        java.lang.Class<?> wildcardClass92 = doubleArray87.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray73);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) '4', doubleArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray42);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray39);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray42);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray42, doubleArray84);
        java.lang.Class<?> wildcardClass87 = doubleList86.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray82);
        double[][] doubleArray87 = null;
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray86, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) '4', doubleArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray47);
        java.lang.Class<?> wildcardClass50 = doubleArray47.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.lang.Class<?> wildcardClass81 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray84);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 1, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray89);
        java.lang.Class<?> wildcardClass93 = doubleArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) 'a', doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (short) -1, doubleArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray35);
        double[][] doubleArray37 = null;
        java.util.ArrayList<java.lang.Double> doubleList38 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList39 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList38);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleList38);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.lang.Class<?> wildcardClass82 = doubleList80.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray86);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray41, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) -1, doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray66 = new double[][] { doubleArray44, doubleArray51, doubleArray58, doubleArray65 };
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray66);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList70);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray39, doubleArray77);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) 'a', doubleArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        double[][] doubleArray5 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList47);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) ' ', doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        double[][] doubleArray1 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray1, doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleArray79.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray47);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray51);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 100, doubleArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray39);
        java.lang.Class<?> wildcardClass41 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        double[][] doubleArray1 = null;
        double[][] doubleArray5 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray45);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray5, doubleArray45);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 100, doubleArray45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '4', doubleArray1, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray52);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray55, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (-1), doubleArray55);
        java.lang.Class<?> wildcardClass96 = doubleArray55.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray54);
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray90 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray91 = new double[][] { doubleArray69, doubleArray76, doubleArray83, doubleArray90 };
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray54, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray94);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) 1, doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        double[][] doubleArray4 = new double[][] {};
        double[][] doubleArray5 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray4);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray6 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (-1), doubleArray5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray5);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray42);
        double[][] doubleArray44 = null;
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) -1, doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNull(doubleArray46);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 10, doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray48);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray48);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray52);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray52, doubleArray90);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 100, doubleArray90);
        java.lang.Class<?> wildcardClass96 = doubleArray95.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) '4', doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray48);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 100, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray89);
        java.lang.Class<?> wildcardClass92 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray49);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) -1, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) 'a', doubleArray49, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray80);
        double[][] doubleArray85 = null;
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray84, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList86);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        java.lang.Class<?> wildcardClass15 = doubleList12.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray53, doubleArray90);
        java.lang.Class<?> wildcardClass93 = doubleArray90.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray44);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray80);
        java.lang.Class<?> wildcardClass84 = doubleArray83.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        java.util.ArrayList<java.lang.Double> doubleList1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList2 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.ArrayList.get(int)\" because \"matrix\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        double[] doubleArray8 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray39 = new double[][] { doubleArray8, doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = null;
        java.util.ArrayList<java.lang.Double> doubleList42 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray40, doubleArray41);
        java.lang.Class<?> wildcardClass43 = doubleList42.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleList42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray37, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList74);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) '4', doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray36);
        double[][] doubleArray38 = null;
        java.util.ArrayList<java.lang.Double> doubleList39 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray38);
        java.util.ArrayList<java.lang.Double> doubleList40 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList39);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList41 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList40);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleList39);
        org.junit.Assert.assertNotNull(doubleList40);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray80);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 1, doubleArray85);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray42);
        double[][] doubleArray44 = null;
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList46);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList75);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList77);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList77);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) 0, doubleArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        double[] doubleArray3 = new double[] {};
        double[][] doubleArray4 = new double[][] { doubleArray3 };
        double[][] doubleArray5 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray4);
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray78);
        double[][] doubleArray82 = null;
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray81, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '#', doubleArray5, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList83);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray48);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray48);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray48);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, 0, doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        double[] doubleArray8 = new double[] {};
        double[][] doubleArray9 = new double[][] { doubleArray8 };
        double[][] doubleArray10 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray9);
        double[][] doubleArray11 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray10);
        double[][] doubleArray12 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray13 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', 100, doubleArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray12);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList19);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList19);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList21);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray47);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray48, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) 'a', doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray48);
        java.lang.Class<?> wildcardClass50 = doubleArray48.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray35);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray35);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray35, doubleArray84);
        java.lang.Class<?> wildcardClass87 = doubleArray35.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) 10, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray81);
        double[][] doubleArray86 = null;
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray85, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 1, doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNull(doubleArray88);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        java.util.ArrayList<java.lang.Double> doubleList4 = null;
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList16);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray41);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray41);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) ' ', doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray37, doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '#', doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, 100, doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 1, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (byte) 0, doubleArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray44);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (short) -1, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray48);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray88);
        java.lang.Class<?> wildcardClass90 = doubleList89.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) ' ', doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray81);
        double[][] doubleArray86 = null;
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray85, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList88);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        double[][] doubleArray1 = null;
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) 'a', doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList43 = com.thealgorithms.maths.Gaussian.valueOfGaussian(10, doubleArray1, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        double[][] doubleArray1 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray48);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray92);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray1, doubleArray48);
        java.lang.Class<?> wildcardClass99 = doubleArray48.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleList97);
        org.junit.Assert.assertNotNull(doubleList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        double[][] doubleArray1 = null;
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray1, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList11);
        java.lang.Class<?> wildcardClass19 = doubleList11.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray36);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray36, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) 'a', doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (byte) 1, doubleArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray36);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray36, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray39);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) 0, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) '4', doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.lang.Class<?> wildcardClass19 = doubleList11.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray80);
        double[][] doubleArray85 = null;
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray84, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList86);
        java.lang.Class<?> wildcardClass88 = doubleList86.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray46);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) 'a', doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray47, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 1, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray89);
        java.lang.Class<?> wildcardClass93 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        double[][] doubleArray5 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList48);
        java.lang.Class<?> wildcardClass52 = doubleList51.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        double[][] doubleArray2 = null;
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray38);
        java.util.ArrayList<java.lang.Double> doubleList41 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray2, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList42 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList41);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleList41);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        java.lang.Class<?> wildcardClass12 = doubleList10.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray49);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray49);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 1, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray55);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) 0, doubleArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) 'a', doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray42);
        java.lang.Class<?> wildcardClass47 = doubleArray42.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, 0, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        java.util.ArrayList<java.lang.Double> doubleList4 = null;
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.ArrayList.get(int)\" because \"matrix\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) '#', doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray37);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray77);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray37, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList83);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.lang.Class<?> wildcardClass23 = doubleList22.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray78);
        double[][] doubleArray85 = new double[][] {};
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray78, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        double[][] doubleArray6 = new double[][] {};
        double[][] doubleArray7 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray6);
        double[][] doubleArray8 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray6);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray9 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) 100, doubleArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) 1, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 100, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, 0, doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray46, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 1, doubleArray88);
        double[][] doubleArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray90, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList19);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList19);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        java.lang.Class<?> wildcardClass25 = doubleList24.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList9);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray36);
        double[][] doubleArray38 = null;
        java.util.ArrayList<java.lang.Double> doubleList39 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray38);
        java.util.ArrayList<java.lang.Double> doubleList40 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList39);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList41 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList39);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleList39);
        org.junit.Assert.assertNotNull(doubleList40);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) '#', doubleArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, 100.0d, 10.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList7);
        java.lang.Class<?> wildcardClass10 = doubleList9.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray51);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, 100, doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) '#', doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 1, doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) '4', doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray51);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray54, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray37, doubleArray70);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (byte) -1, doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (byte) -1, doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        java.lang.Class<?> wildcardClass53 = doubleArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) 'a', doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        double[][] doubleArray4 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        java.lang.Class<?> wildcardClass50 = doubleList49.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray77);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray44);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray44);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray83);
        double[][] doubleArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray83, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray44);
        java.lang.Class<?> wildcardClass47 = doubleArray44.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray43, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray42);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray46, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 10, doubleArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray43);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray43);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', 10, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (-1), doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        double[][] doubleArray5 = new double[][] {};
        double[][] doubleArray6 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray5);
        double[][] doubleArray7 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray5);
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray49 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray50 = new double[][] { doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray51, doubleArray86);
        double[][] doubleArray93 = new double[][] {};
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray86, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 100, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray7, doubleArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray36);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray72);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray72);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (short) 10, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 0, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.lang.Class<?> wildcardClass82 = doubleList81.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, (-1.0d), (-1.0d), 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 5 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        java.util.ArrayList<java.lang.Double> doubleList3 = null;
        java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList3);
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleList5);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray48);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray48);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray52);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 100, doubleArray55);
        double[][] doubleArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList58 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray56, doubleArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }
}

